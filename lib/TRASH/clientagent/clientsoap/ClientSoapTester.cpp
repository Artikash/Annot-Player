/* ClientSoapTester.cpp
   Generated by gSOAP 2.8.3 from _clientsoap.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/
/*
   Stand-alone server auto-test code:
   Takes request from standard input or over TCP/IP socket and returns
response to standard output or socket

   Compile:
   cc soapTester.c soapServer.c soapC.c stdsoap2.c

   Command line usage with redirect over stdin/out:
   > ./a.out < SomeTest.req.xml
   > ./a.out 12288 < SomeTest.req.xml
     Note: 12288 = SOAP_XML_INDENT | SOAP_XML_STRICT (see codes in stdsoap2.h)
   Command line usage to start server at port 8080:
   > a.out 12288 8080
*/

#include "ClientSoapClientAgentServiceSoapBindingService.h"

#ifndef SOAP_DEFMAIN
# define SOAP_DEFMAIN main	/* redefine to use your own main() */
#endif

int SOAP_DEFMAIN(int argc, char **argv)
{
	ClientAgentServiceSoapBindingService service(argc > 1 ? atoi(argv[1]) : 0);
	if (argc <= 2)
		return service.serve();
	return service.run(atoi(argv[2]));
}


/** Auto-test server operation __tns__authorize */
int ClientAgentServiceSoapBindingService::authorize(tns__authorize *tns__authorize_, tns__authorizeResponse *tns__authorizeResponse_)
{	
	/* Return incomplete response with default data values */
	return SOAP_OK;
}


/** Auto-test server operation __tns__deauthorize */
int ClientAgentServiceSoapBindingService::deauthorize(tns__deauthorize *tns__deauthorize_, tns__deauthorizeResponse *tns__deauthorizeResponse_)
{	
	/* Return incomplete response with default data values */
	return SOAP_OK;
}


/** Auto-test server operation __tns__isAuthorized */
int ClientAgentServiceSoapBindingService::isAuthorized(tns__isAuthorized *tns__isAuthorized_, tns__isAuthorizedResponse *tns__isAuthorizedResponse_)
{	
	/* Return incomplete response with default data values */
	return SOAP_OK;
}


/** Auto-test server operation __tns__isConnected */
int ClientAgentServiceSoapBindingService::isConnected(tns__isConnected *tns__isConnected_, tns__isConnectedResponse *tns__isConnectedResponse_)
{	
	/* Return incomplete response with default data values */
	return SOAP_OK;
}


/** Auto-test server operation __tns__chat */
int ClientAgentServiceSoapBindingService::chat(tns__chat *tns__chat_, tns__chatResponse *tns__chatResponse_)
{	
	/* Return incomplete response with default data values */
	return SOAP_OK;
}
