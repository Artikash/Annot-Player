namespace Annot {
/* cloudservice.h
   Generated by wsdl2h 2.8.10 from http://210.175.54.32/service/cloud?wsdl and typemap.dat
   2012-09-03 05:14:44 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on cloudservice.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tns = "http://service.annot.me/"
ns1 = ""

*/

#define SOAP_NAMESPACE_OF_ns1	""
//gsoap ns1   schema namespace:	
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_tns	"http://service.annot.me/"
//gsoap tns   schema namespace:	http://service.annot.me/
//gsoap tns   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class tns__gameHook.
class tns__gameHook;

//  Forward declaration of class tns__gameThread.
class tns__gameThread;

//  Forward declaration of class tns__mediaAnnotation.
class tns__mediaAnnotation;

//  Forward declaration of class tns__mediaToken.
class tns__mediaToken;

//  Forward declaration of class tns__mediaAlias.
class tns__mediaAlias;

//  Forward declaration of class tns__user.
class tns__user;

//  Forward declaration of class tns__blessMediaAliasWithId.
class tns__blessMediaAliasWithId;

//  Forward declaration of class tns__blessMediaAliasWithIdResponse.
class tns__blessMediaAliasWithIdResponse;

//  Forward declaration of class tns__blessMediaAnnotationWithId.
class tns__blessMediaAnnotationWithId;

//  Forward declaration of class tns__blessMediaAnnotationWithIdResponse.
class tns__blessMediaAnnotationWithIdResponse;

//  Forward declaration of class tns__blessMediaTokenWithId.
class tns__blessMediaTokenWithId;

//  Forward declaration of class tns__blessMediaTokenWithIdResponse.
class tns__blessMediaTokenWithIdResponse;

//  Forward declaration of class tns__blessUserWithId.
class tns__blessUserWithId;

//  Forward declaration of class tns__blessUserWithIdResponse.
class tns__blessUserWithIdResponse;

//  Forward declaration of class tns__blockMediaAliasWithId.
class tns__blockMediaAliasWithId;

//  Forward declaration of class tns__blockMediaAliasWithIdResponse.
class tns__blockMediaAliasWithIdResponse;

//  Forward declaration of class tns__blockMediaAnnotationWithId.
class tns__blockMediaAnnotationWithId;

//  Forward declaration of class tns__blockMediaAnnotationWithIdResponse.
class tns__blockMediaAnnotationWithIdResponse;

//  Forward declaration of class tns__blockUserWithId.
class tns__blockUserWithId;

//  Forward declaration of class tns__blockUserWithIdResponse.
class tns__blockUserWithIdResponse;

//  Forward declaration of class tns__chat.
class tns__chat;

//  Forward declaration of class tns__chatResponse.
class tns__chatResponse;

//  Forward declaration of class tns__curseMediaAliasWithId.
class tns__curseMediaAliasWithId;

//  Forward declaration of class tns__curseMediaAliasWithIdResponse.
class tns__curseMediaAliasWithIdResponse;

//  Forward declaration of class tns__curseMediaAnnotationWithId.
class tns__curseMediaAnnotationWithId;

//  Forward declaration of class tns__curseMediaAnnotationWithIdResponse.
class tns__curseMediaAnnotationWithIdResponse;

//  Forward declaration of class tns__curseMediaTokenWithId.
class tns__curseMediaTokenWithId;

//  Forward declaration of class tns__curseMediaTokenWithIdResponse.
class tns__curseMediaTokenWithIdResponse;

//  Forward declaration of class tns__curseUserWithId.
class tns__curseUserWithId;

//  Forward declaration of class tns__curseUserWithIdResponse.
class tns__curseUserWithIdResponse;

//  Forward declaration of class tns__deleteMediaAliasWithId.
class tns__deleteMediaAliasWithId;

//  Forward declaration of class tns__deleteMediaAliasWithIdResponse.
class tns__deleteMediaAliasWithIdResponse;

//  Forward declaration of class tns__deleteMediaAnnotationWithId.
class tns__deleteMediaAnnotationWithId;

//  Forward declaration of class tns__deleteMediaAnnotationWithIdResponse.
class tns__deleteMediaAnnotationWithIdResponse;

//  Forward declaration of class tns__getUser.
class tns__getUser;

//  Forward declaration of class tns__getUserResponse.
class tns__getUserResponse;

//  Forward declaration of class tns__isAuthorized.
class tns__isAuthorized;

//  Forward declaration of class tns__isAuthorizedResponse.
class tns__isAuthorizedResponse;

//  Forward declaration of class tns__isConnected.
class tns__isConnected;

//  Forward declaration of class tns__isConnectedResponse.
class tns__isConnectedResponse;

//  Forward declaration of class tns__isLatestApp.
class tns__isLatestApp;

//  Forward declaration of class tns__isLatestAppResponse.
class tns__isLatestAppResponse;

//  Forward declaration of class tns__login.
class tns__login;

//  Forward declaration of class tns__loginResponse.
class tns__loginResponse;

//  Forward declaration of class tns__selectGameHookWithTokenDigest.
class tns__selectGameHookWithTokenDigest;

//  Forward declaration of class tns__selectGameHookWithTokenDigestResponse.
class tns__selectGameHookWithTokenDigestResponse;

//  Forward declaration of class tns__selectGameHookWithTokenId.
class tns__selectGameHookWithTokenId;

//  Forward declaration of class tns__selectGameHookWithTokenIdResponse.
class tns__selectGameHookWithTokenIdResponse;

//  Forward declaration of class tns__selectGameThreadWithTokenDigest.
class tns__selectGameThreadWithTokenDigest;

//  Forward declaration of class tns__selectGameThreadWithTokenDigestResponse.
class tns__selectGameThreadWithTokenDigestResponse;

//  Forward declaration of class tns__selectGameThreadWithTokenId.
class tns__selectGameThreadWithTokenId;

//  Forward declaration of class tns__selectGameThreadWithTokenIdResponse.
class tns__selectGameThreadWithTokenIdResponse;

//  Forward declaration of class tns__selectMediaAliasesWithTokenId.
class tns__selectMediaAliasesWithTokenId;

//  Forward declaration of class tns__selectMediaAliasesWithTokenIdResponse.
class tns__selectMediaAliasesWithTokenIdResponse;

//  Forward declaration of class tns__selectMediaAnnotationsWithTokenId.
class tns__selectMediaAnnotationsWithTokenId;

//  Forward declaration of class tns__selectMediaAnnotationsWithTokenIdResponse.
class tns__selectMediaAnnotationsWithTokenIdResponse;

//  Forward declaration of class tns__selectMediaTokenIdWithDigest.
class tns__selectMediaTokenIdWithDigest;

//  Forward declaration of class tns__selectMediaTokenIdWithDigestResponse.
class tns__selectMediaTokenIdWithDigestResponse;

//  Forward declaration of class tns__selectMediaTokenIdWithUrl.
class tns__selectMediaTokenIdWithUrl;

//  Forward declaration of class tns__selectMediaTokenIdWithUrlResponse.
class tns__selectMediaTokenIdWithUrlResponse;

//  Forward declaration of class tns__selectMediaTokenWithDigest.
class tns__selectMediaTokenWithDigest;

//  Forward declaration of class tns__selectMediaTokenWithDigestResponse.
class tns__selectMediaTokenWithDigestResponse;

//  Forward declaration of class tns__selectMediaTokenWithId.
class tns__selectMediaTokenWithId;

//  Forward declaration of class tns__selectMediaTokenWithIdResponse.
class tns__selectMediaTokenWithIdResponse;

//  Forward declaration of class tns__selectRelatedMediaAliasesWithTokenId.
class tns__selectRelatedMediaAliasesWithTokenId;

//  Forward declaration of class tns__selectRelatedMediaAliasesWithTokenIdResponse.
class tns__selectRelatedMediaAliasesWithTokenIdResponse;

//  Forward declaration of class tns__selectRelatedMediaAnnotationsWithTokenId.
class tns__selectRelatedMediaAnnotationsWithTokenId;

//  Forward declaration of class tns__selectRelatedMediaAnnotationsWithTokenIdResponse.
class tns__selectRelatedMediaAnnotationsWithTokenIdResponse;

//  Forward declaration of class tns__setUserAnonymous.
class tns__setUserAnonymous;

//  Forward declaration of class tns__setUserAnonymousResponse.
class tns__setUserAnonymousResponse;

//  Forward declaration of class tns__setUserLanguage.
class tns__setUserLanguage;

//  Forward declaration of class tns__setUserLanguageResponse.
class tns__setUserLanguageResponse;

//  Forward declaration of class tns__submitGameHook.
class tns__submitGameHook;

//  Forward declaration of class tns__submitGameHookResponse.
class tns__submitGameHookResponse;

//  Forward declaration of class tns__submitGameThread.
class tns__submitGameThread;

//  Forward declaration of class tns__submitGameThreadResponse.
class tns__submitGameThreadResponse;

//  Forward declaration of class tns__submitMediaAlias.
class tns__submitMediaAlias;

//  Forward declaration of class tns__submitMediaAliasResponse.
class tns__submitMediaAliasResponse;

//  Forward declaration of class tns__submitMediaAliasTextAndTokenDigest.
class tns__submitMediaAliasTextAndTokenDigest;

//  Forward declaration of class tns__submitMediaAliasTextAndTokenDigestResponse.
class tns__submitMediaAliasTextAndTokenDigestResponse;

//  Forward declaration of class tns__submitMediaAliasTextWithTokenId.
class tns__submitMediaAliasTextWithTokenId;

//  Forward declaration of class tns__submitMediaAliasTextWithTokenIdResponse.
class tns__submitMediaAliasTextWithTokenIdResponse;

//  Forward declaration of class tns__submitMediaAnnotation.
class tns__submitMediaAnnotation;

//  Forward declaration of class tns__submitMediaAnnotationResponse.
class tns__submitMediaAnnotationResponse;

//  Forward declaration of class tns__submitMediaAnnotationTextAndTokenDigest.
class tns__submitMediaAnnotationTextAndTokenDigest;

//  Forward declaration of class tns__submitMediaAnnotationTextAndTokenDigestResponse.
class tns__submitMediaAnnotationTextAndTokenDigestResponse;

//  Forward declaration of class tns__submitMediaAnnotationTextWithTokenId.
class tns__submitMediaAnnotationTextWithTokenId;

//  Forward declaration of class tns__submitMediaAnnotationTextWithTokenIdResponse.
class tns__submitMediaAnnotationTextWithTokenIdResponse;

//  Forward declaration of class tns__submitMediaToken.
class tns__submitMediaToken;

//  Forward declaration of class tns__submitMediaTokenResponse.
class tns__submitMediaTokenResponse;

//  Forward declaration of class tns__submitMediaTokenDigest.
class tns__submitMediaTokenDigest;

//  Forward declaration of class tns__submitMediaTokenDigestResponse.
class tns__submitMediaTokenDigestResponse;

//  Forward declaration of class tns__submitMediaTokenUrl.
class tns__submitMediaTokenUrl;

//  Forward declaration of class tns__submitMediaTokenUrlResponse.
class tns__submitMediaTokenUrlResponse;

//  Forward declaration of class tns__updateGameHookTextWithId.
class tns__updateGameHookTextWithId;

//  Forward declaration of class tns__updateGameHookTextWithIdResponse.
class tns__updateGameHookTextWithIdResponse;

//  Forward declaration of class tns__updateGameThread.
class tns__updateGameThread;

//  Forward declaration of class tns__updateGameThreadResponse.
class tns__updateGameThreadResponse;

//  Forward declaration of class tns__updateMediaAnnotationLanguageWithId.
class tns__updateMediaAnnotationLanguageWithId;

//  Forward declaration of class tns__updateMediaAnnotationLanguageWithIdResponse.
class tns__updateMediaAnnotationLanguageWithIdResponse;

//  Forward declaration of class tns__updateMediaAnnotationTextWithId.
class tns__updateMediaAnnotationTextWithId;

//  Forward declaration of class tns__updateMediaAnnotationTextWithIdResponse.
class tns__updateMediaAnnotationTextWithIdResponse;

//  Forward declaration of class tns__updateMediaAnnotationUserIdWithId.
class tns__updateMediaAnnotationUserIdWithId;

//  Forward declaration of class tns__updateMediaAnnotationUserIdWithIdResponse.
class tns__updateMediaAnnotationUserIdWithIdResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/// "http://service.annot.me/":gameHook is a complexType.
class tns__gameHook
{ public:
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element updateIp of type xs:long.
    LONG64                               updateIp                       1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":gameThread is a complexType.
class tns__gameThread
{ public:
/// Element encoding of type xs:int.
    int                                  encoding                       1;	///< Required element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element provider of type xs:string.
    std::string*                         provider                       0;	///< Optional element.
/// Element signature of type xs:long.
    LONG64                               signature                      1;	///< Required element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element updateIp of type xs:long.
    LONG64                               updateIp                       1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":mediaAnnotation is a complexType.
class tns__mediaAnnotation
{ public:
/// Element blessCount of type xs:int.
    int                                  blessCount                     1;	///< Required element.
/// Element blockCount of type xs:int.
    int                                  blockCount                     1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element createIp of type xs:long.
    LONG64                               createIp                       1;	///< Required element.
/// Element curseCount of type xs:int.
    int                                  curseCount                     1;	///< Required element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element pos of type xs:long.
    LONG64                               pos                            1;	///< Required element.
/// Element posType of type xs:int.
    int                                  posType                        1;	///< Required element.
/// Element time of type xs:int.
    int                                  time                           1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element updateIp of type xs:long.
    LONG64                               updateIp                       1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// Element userAlias of type xs:string.
    std::string*                         userAlias                      0;	///< Optional element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":mediaToken is a complexType.
class tns__mediaToken
{ public:
/// Element annotCount of type xs:int.
    int                                  annotCount                     1;	///< Required element.
/// Element blessCount of type xs:int.
    int                                  blessCount                     1;	///< Required element.
/// Element blockCount of type xs:int.
    int                                  blockCount                     1;	///< Required element.
/// Element createIp of type xs:long.
    LONG64                               createIp                       1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element curseCount of type xs:int.
    int                                  curseCount                     1;	///< Required element.
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element section of type xs:int.
    int                                  section                        1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element url of type xs:string.
    std::string*                         url                            0;	///< Optional element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element visitCount of type xs:int.
    int                                  visitCount                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":mediaAlias is a complexType.
class tns__mediaAlias
{ public:
/// Element blessCount of type xs:int.
    int                                  blessCount                     1;	///< Required element.
/// Element blockCount of type xs:int.
    int                                  blockCount                     1;	///< Required element.
/// Element curseCount of type xs:int.
    int                                  curseCount                     1;	///< Required element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element updateIp of type xs:long.
    LONG64                               updateIp                       1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":user is a complexType.
class tns__user
{ public:
/// Element annotCount of type xs:int.
    int                                  annotCount                     1;	///< Required element.
/// Element blessCount of type xs:int.
    int                                  blessCount                     1;	///< Required element.
/// Element blockCount of type xs:int.
    int                                  blockCount                     1;	///< Required element.
/// Element createIp of type xs:long.
    LONG64                               createIp                       1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element curseCount of type xs:int.
    int                                  curseCount                     1;	///< Required element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element loginCount of type xs:long.
    LONG64                               loginCount                     1;	///< Required element.
/// Element loginIp of type xs:long.
    LONG64                               loginIp                        1;	///< Required element.
/// Element loginTime of type xs:long.
    LONG64                               loginTime                      1;	///< Required element.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Optional element.
/// Element nickname of type xs:string.
    std::string*                         nickname                       0;	///< Optional element.
/// Element password of type xs:string.
    std::string*                         password                       0;	///< Optional element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaAliasWithId is a complexType.
class tns__blessMediaAliasWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaAliasWithIdResponse is a complexType.
class tns__blessMediaAliasWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaAnnotationWithId is a complexType.
class tns__blessMediaAnnotationWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaAnnotationWithIdResponse is a complexType.
class tns__blessMediaAnnotationWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaTokenWithId is a complexType.
class tns__blessMediaTokenWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaTokenWithIdResponse is a complexType.
class tns__blessMediaTokenWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessUserWithId is a complexType.
class tns__blessUserWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessUserWithIdResponse is a complexType.
class tns__blessUserWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blockMediaAliasWithId is a complexType.
class tns__blockMediaAliasWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blockMediaAliasWithIdResponse is a complexType.
class tns__blockMediaAliasWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blockMediaAnnotationWithId is a complexType.
class tns__blockMediaAnnotationWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blockMediaAnnotationWithIdResponse is a complexType.
class tns__blockMediaAnnotationWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blockUserWithId is a complexType.
class tns__blockUserWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blockUserWithIdResponse is a complexType.
class tns__blockUserWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":chat is a complexType.
class tns__chat
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":chatResponse is a complexType.
class tns__chatResponse
{ public:
/// Element return of type xs:string.
    std::string*                         return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseMediaAliasWithId is a complexType.
class tns__curseMediaAliasWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseMediaAliasWithIdResponse is a complexType.
class tns__curseMediaAliasWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseMediaAnnotationWithId is a complexType.
class tns__curseMediaAnnotationWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseMediaAnnotationWithIdResponse is a complexType.
class tns__curseMediaAnnotationWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseMediaTokenWithId is a complexType.
class tns__curseMediaTokenWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseMediaTokenWithIdResponse is a complexType.
class tns__curseMediaTokenWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseUserWithId is a complexType.
class tns__curseUserWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":curseUserWithIdResponse is a complexType.
class tns__curseUserWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":deleteMediaAliasWithId is a complexType.
class tns__deleteMediaAliasWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":deleteMediaAliasWithIdResponse is a complexType.
class tns__deleteMediaAliasWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":deleteMediaAnnotationWithId is a complexType.
class tns__deleteMediaAnnotationWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":deleteMediaAnnotationWithIdResponse is a complexType.
class tns__deleteMediaAnnotationWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":getUser is a complexType.
class tns__getUser
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":getUserResponse is a complexType.
class tns__getUserResponse
{ public:
/// Element return of type "http://service.annot.me/":user.
    tns__user*                           return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isAuthorized is a complexType.
class tns__isAuthorized
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isAuthorizedResponse is a complexType.
class tns__isAuthorizedResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isConnected is a complexType.
class tns__isConnected
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isConnectedResponse is a complexType.
class tns__isConnectedResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isLatestApp is a complexType.
class tns__isLatestApp
{ public:
/// Element version of type xs:string.
    std::string*                         version                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isLatestAppResponse is a complexType.
class tns__isLatestAppResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":login is a complexType.
class tns__login
{ public:
/// Element userName of type xs:string.
    std::string*                         userName                       0;	///< Optional element.
/// Element password of type xs:string.
    std::string*                         password                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":loginResponse is a complexType.
class tns__loginResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameHookWithTokenDigest is a complexType.
class tns__selectGameHookWithTokenDigest
{ public:
/// Element tokenDigest of type xs:string.
    std::string*                         tokenDigest                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameHookWithTokenDigestResponse is a complexType.
class tns__selectGameHookWithTokenDigestResponse
{ public:
/// Element return of type "http://service.annot.me/":gameHook.
    tns__gameHook*                       return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameHookWithTokenId is a complexType.
class tns__selectGameHookWithTokenId
{ public:
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameHookWithTokenIdResponse is a complexType.
class tns__selectGameHookWithTokenIdResponse
{ public:
/// Element return of type "http://service.annot.me/":gameHook.
    tns__gameHook*                       return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameThreadWithTokenDigest is a complexType.
class tns__selectGameThreadWithTokenDigest
{ public:
/// Element tokenDigest of type xs:string.
    std::string*                         tokenDigest                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameThreadWithTokenDigestResponse is a complexType.
class tns__selectGameThreadWithTokenDigestResponse
{ public:
/// Element return of type "http://service.annot.me/":gameThread.
    tns__gameThread*                     return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameThreadWithTokenId is a complexType.
class tns__selectGameThreadWithTokenId
{ public:
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameThreadWithTokenIdResponse is a complexType.
class tns__selectGameThreadWithTokenIdResponse
{ public:
/// Element return of type "http://service.annot.me/":gameThread.
    tns__gameThread*                     return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAliasesWithTokenId is a complexType.
class tns__selectMediaAliasesWithTokenId
{ public:
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAliasesWithTokenIdResponse is a complexType.
class tns__selectMediaAliasesWithTokenIdResponse
{ public:
/// Vector of tns__mediaAlias* with length 0..unbounded
    std::vector<tns__mediaAlias*       > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAnnotationsWithTokenId is a complexType.
class tns__selectMediaAnnotationsWithTokenId
{ public:
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAnnotationsWithTokenIdResponse is a complexType.
class tns__selectMediaAnnotationsWithTokenIdResponse
{ public:
/// Vector of tns__mediaAnnotation* with length 0..unbounded
    std::vector<tns__mediaAnnotation*  > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenIdWithDigest is a complexType.
class tns__selectMediaTokenIdWithDigest
{ public:
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element section of type xs:int.
    int                                  section                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenIdWithDigestResponse is a complexType.
class tns__selectMediaTokenIdWithDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenIdWithUrl is a complexType.
class tns__selectMediaTokenIdWithUrl
{ public:
/// Element url of type xs:string.
    std::string*                         url                            0;	///< Optional element.
/// Element section of type xs:int.
    int                                  section                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenIdWithUrlResponse is a complexType.
class tns__selectMediaTokenIdWithUrlResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithDigest is a complexType.
class tns__selectMediaTokenWithDigest
{ public:
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element section of type xs:int.
    int                                  section                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithDigestResponse is a complexType.
class tns__selectMediaTokenWithDigestResponse
{ public:
/// Element return of type "http://service.annot.me/":mediaToken.
    tns__mediaToken*                     return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithId is a complexType.
class tns__selectMediaTokenWithId
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithIdResponse is a complexType.
class tns__selectMediaTokenWithIdResponse
{ public:
/// Element return of type "http://service.annot.me/":mediaToken.
    tns__mediaToken*                     return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedMediaAliasesWithTokenId is a complexType.
class tns__selectRelatedMediaAliasesWithTokenId
{ public:
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedMediaAliasesWithTokenIdResponse is a complexType.
class tns__selectRelatedMediaAliasesWithTokenIdResponse
{ public:
/// Vector of tns__mediaAlias* with length 0..unbounded
    std::vector<tns__mediaAlias*       > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenId is a complexType.
class tns__selectRelatedMediaAnnotationsWithTokenId
{ public:
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenIdResponse is a complexType.
class tns__selectRelatedMediaAnnotationsWithTokenIdResponse
{ public:
/// Vector of tns__mediaAnnotation* with length 0..unbounded
    std::vector<tns__mediaAnnotation*  > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserAnonymous is a complexType.
class tns__setUserAnonymous
{ public:
/// Element value of type xs:boolean.
    bool                                 value                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserAnonymousResponse is a complexType.
class tns__setUserAnonymousResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserLanguage is a complexType.
class tns__setUserLanguage
{ public:
/// Element value of type xs:int.
    int                                  value                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserLanguageResponse is a complexType.
class tns__setUserLanguageResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameHook is a complexType.
class tns__submitGameHook
{ public:
/// Element hook of type "http://service.annot.me/":gameHook.
    tns__gameHook*                       hook                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameHookResponse is a complexType.
class tns__submitGameHookResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameThread is a complexType.
class tns__submitGameThread
{ public:
/// Element thread of type "http://service.annot.me/":gameThread.
    tns__gameThread*                     thread                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameThreadResponse is a complexType.
class tns__submitGameThreadResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAlias is a complexType.
class tns__submitMediaAlias
{ public:
/// Element alias of type "http://service.annot.me/":mediaAlias.
    tns__mediaAlias*                     alias                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasResponse is a complexType.
class tns__submitMediaAliasResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextAndTokenDigest is a complexType.
class tns__submitMediaAliasTextAndTokenDigest
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element tokenDigest of type xs:string.
    std::string*                         tokenDigest                    0;	///< Optional element.
/// Element tokenSection of type xs:int.
    int                                  tokenSection                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextAndTokenDigestResponse is a complexType.
class tns__submitMediaAliasTextAndTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextWithTokenId is a complexType.
class tns__submitMediaAliasTextWithTokenId
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextWithTokenIdResponse is a complexType.
class tns__submitMediaAliasTextWithTokenIdResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotation is a complexType.
class tns__submitMediaAnnotation
{ public:
/// Element annot of type "http://service.annot.me/":mediaAnnotation.
    tns__mediaAnnotation*                annot                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationResponse is a complexType.
class tns__submitMediaAnnotationResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigest is a complexType.
class tns__submitMediaAnnotationTextAndTokenDigest
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element pos of type xs:long.
    LONG64                               pos                            1;	///< Required element.
/// Element posType of type xs:int.
    int                                  posType                        1;	///< Required element.
/// Element tokenDigest of type xs:string.
    std::string*                         tokenDigest                    0;	///< Optional element.
/// Element tokenSection of type xs:int.
    int                                  tokenSection                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigestResponse is a complexType.
class tns__submitMediaAnnotationTextAndTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextWithTokenId is a complexType.
class tns__submitMediaAnnotationTextWithTokenId
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element pos of type xs:long.
    LONG64                               pos                            1;	///< Required element.
/// Element posType of type xs:int.
    int                                  posType                        1;	///< Required element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextWithTokenIdResponse is a complexType.
class tns__submitMediaAnnotationTextWithTokenIdResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaToken is a complexType.
class tns__submitMediaToken
{ public:
/// Element token of type "http://service.annot.me/":mediaToken.
    tns__mediaToken*                     token                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenResponse is a complexType.
class tns__submitMediaTokenResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenDigest is a complexType.
class tns__submitMediaTokenDigest
{ public:
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element section of type xs:int.
    int                                  section                        1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenDigestResponse is a complexType.
class tns__submitMediaTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenUrl is a complexType.
class tns__submitMediaTokenUrl
{ public:
/// Element url of type xs:string.
    std::string*                         url                            0;	///< Optional element.
/// Element section of type xs:int.
    int                                  section                        1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenUrlResponse is a complexType.
class tns__submitMediaTokenUrlResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateGameHookTextWithId is a complexType.
class tns__updateGameHookTextWithId
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateGameHookTextWithIdResponse is a complexType.
class tns__updateGameHookTextWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateGameThread is a complexType.
class tns__updateGameThread
{ public:
/// Element thread of type "http://service.annot.me/":gameThread.
    tns__gameThread*                     thread                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateGameThreadResponse is a complexType.
class tns__updateGameThreadResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationLanguageWithId is a complexType.
class tns__updateMediaAnnotationLanguageWithId
{ public:
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationLanguageWithIdResponse is a complexType.
class tns__updateMediaAnnotationLanguageWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationTextWithId is a complexType.
class tns__updateMediaAnnotationTextWithId
{ public:
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationTextWithIdResponse is a complexType.
class tns__updateMediaAnnotationTextWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationUserIdWithId is a complexType.
class tns__updateMediaAnnotationUserIdWithId
{ public:
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationUserIdWithIdResponse is a complexType.
class tns__updateMediaAnnotationUserIdWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://service.annot.me/":blessMediaAliasWithId of type "http://service.annot.me/":blessMediaAliasWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaAliasWithIdResponse of type "http://service.annot.me/":blessMediaAliasWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaAnnotationWithId of type "http://service.annot.me/":blessMediaAnnotationWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaAnnotationWithIdResponse of type "http://service.annot.me/":blessMediaAnnotationWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaTokenWithId of type "http://service.annot.me/":blessMediaTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaTokenWithIdResponse of type "http://service.annot.me/":blessMediaTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessUserWithId of type "http://service.annot.me/":blessUserWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessUserWithIdResponse of type "http://service.annot.me/":blessUserWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blockMediaAliasWithId of type "http://service.annot.me/":blockMediaAliasWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blockMediaAliasWithIdResponse of type "http://service.annot.me/":blockMediaAliasWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blockMediaAnnotationWithId of type "http://service.annot.me/":blockMediaAnnotationWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blockMediaAnnotationWithIdResponse of type "http://service.annot.me/":blockMediaAnnotationWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blockUserWithId of type "http://service.annot.me/":blockUserWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blockUserWithIdResponse of type "http://service.annot.me/":blockUserWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":chat of type "http://service.annot.me/":chat.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":chatResponse of type "http://service.annot.me/":chatResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseMediaAliasWithId of type "http://service.annot.me/":curseMediaAliasWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseMediaAliasWithIdResponse of type "http://service.annot.me/":curseMediaAliasWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseMediaAnnotationWithId of type "http://service.annot.me/":curseMediaAnnotationWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseMediaAnnotationWithIdResponse of type "http://service.annot.me/":curseMediaAnnotationWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseMediaTokenWithId of type "http://service.annot.me/":curseMediaTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseMediaTokenWithIdResponse of type "http://service.annot.me/":curseMediaTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseUserWithId of type "http://service.annot.me/":curseUserWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":curseUserWithIdResponse of type "http://service.annot.me/":curseUserWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":deleteMediaAliasWithId of type "http://service.annot.me/":deleteMediaAliasWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":deleteMediaAliasWithIdResponse of type "http://service.annot.me/":deleteMediaAliasWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":deleteMediaAnnotationWithId of type "http://service.annot.me/":deleteMediaAnnotationWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":deleteMediaAnnotationWithIdResponse of type "http://service.annot.me/":deleteMediaAnnotationWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":getUser of type "http://service.annot.me/":getUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":getUserResponse of type "http://service.annot.me/":getUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isAuthorized of type "http://service.annot.me/":isAuthorized.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isAuthorizedResponse of type "http://service.annot.me/":isAuthorizedResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isConnected of type "http://service.annot.me/":isConnected.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isConnectedResponse of type "http://service.annot.me/":isConnectedResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isLatestApp of type "http://service.annot.me/":isLatestApp.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isLatestAppResponse of type "http://service.annot.me/":isLatestAppResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":login of type "http://service.annot.me/":login.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":loginResponse of type "http://service.annot.me/":loginResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameHookWithTokenDigest of type "http://service.annot.me/":selectGameHookWithTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameHookWithTokenDigestResponse of type "http://service.annot.me/":selectGameHookWithTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameHookWithTokenId of type "http://service.annot.me/":selectGameHookWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameHookWithTokenIdResponse of type "http://service.annot.me/":selectGameHookWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameThreadWithTokenDigest of type "http://service.annot.me/":selectGameThreadWithTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameThreadWithTokenDigestResponse of type "http://service.annot.me/":selectGameThreadWithTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameThreadWithTokenId of type "http://service.annot.me/":selectGameThreadWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameThreadWithTokenIdResponse of type "http://service.annot.me/":selectGameThreadWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAliasesWithTokenId of type "http://service.annot.me/":selectMediaAliasesWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAliasesWithTokenIdResponse of type "http://service.annot.me/":selectMediaAliasesWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAnnotationsWithTokenId of type "http://service.annot.me/":selectMediaAnnotationsWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAnnotationsWithTokenIdResponse of type "http://service.annot.me/":selectMediaAnnotationsWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenIdWithDigest of type "http://service.annot.me/":selectMediaTokenIdWithDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenIdWithDigestResponse of type "http://service.annot.me/":selectMediaTokenIdWithDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenIdWithUrl of type "http://service.annot.me/":selectMediaTokenIdWithUrl.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenIdWithUrlResponse of type "http://service.annot.me/":selectMediaTokenIdWithUrlResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithDigest of type "http://service.annot.me/":selectMediaTokenWithDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithDigestResponse of type "http://service.annot.me/":selectMediaTokenWithDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithId of type "http://service.annot.me/":selectMediaTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithIdResponse of type "http://service.annot.me/":selectMediaTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedMediaAliasesWithTokenId of type "http://service.annot.me/":selectRelatedMediaAliasesWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedMediaAliasesWithTokenIdResponse of type "http://service.annot.me/":selectRelatedMediaAliasesWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenId of type "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenIdResponse of type "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserAnonymous of type "http://service.annot.me/":setUserAnonymous.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserAnonymousResponse of type "http://service.annot.me/":setUserAnonymousResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserLanguage of type "http://service.annot.me/":setUserLanguage.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserLanguageResponse of type "http://service.annot.me/":setUserLanguageResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameHook of type "http://service.annot.me/":submitGameHook.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameHookResponse of type "http://service.annot.me/":submitGameHookResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameThread of type "http://service.annot.me/":submitGameThread.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameThreadResponse of type "http://service.annot.me/":submitGameThreadResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAlias of type "http://service.annot.me/":submitMediaAlias.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasResponse of type "http://service.annot.me/":submitMediaAliasResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextAndTokenDigest of type "http://service.annot.me/":submitMediaAliasTextAndTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextAndTokenDigestResponse of type "http://service.annot.me/":submitMediaAliasTextAndTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextWithTokenId of type "http://service.annot.me/":submitMediaAliasTextWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextWithTokenIdResponse of type "http://service.annot.me/":submitMediaAliasTextWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotation of type "http://service.annot.me/":submitMediaAnnotation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationResponse of type "http://service.annot.me/":submitMediaAnnotationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigest of type "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigestResponse of type "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextWithTokenId of type "http://service.annot.me/":submitMediaAnnotationTextWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextWithTokenIdResponse of type "http://service.annot.me/":submitMediaAnnotationTextWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaToken of type "http://service.annot.me/":submitMediaToken.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenResponse of type "http://service.annot.me/":submitMediaTokenResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenDigest of type "http://service.annot.me/":submitMediaTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenDigestResponse of type "http://service.annot.me/":submitMediaTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenUrl of type "http://service.annot.me/":submitMediaTokenUrl.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenUrlResponse of type "http://service.annot.me/":submitMediaTokenUrlResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateGameHookTextWithId of type "http://service.annot.me/":updateGameHookTextWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateGameHookTextWithIdResponse of type "http://service.annot.me/":updateGameHookTextWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateGameThread of type "http://service.annot.me/":updateGameThread.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateGameThreadResponse of type "http://service.annot.me/":updateGameThreadResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationLanguageWithId of type "http://service.annot.me/":updateMediaAnnotationLanguageWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationLanguageWithIdResponse of type "http://service.annot.me/":updateMediaAnnotationLanguageWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationTextWithId of type "http://service.annot.me/":updateMediaAnnotationTextWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationTextWithIdResponse of type "http://service.annot.me/":updateMediaAnnotationTextWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationUserIdWithId of type "http://service.annot.me/":updateMediaAnnotationUserIdWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationUserIdWithIdResponse of type "http://service.annot.me/":updateMediaAnnotationUserIdWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":mediaAnnotation of type "http://service.annot.me/":mediaAnnotation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":mediaToken of type "http://service.annot.me/":mediaToken.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":mediaAlias of type "http://service.annot.me/":mediaAlias.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":user of type "http://service.annot.me/":user.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap tns  service name:	CloudServiceSoapBinding 
//gsoap tns  service type:	Cloud 
//gsoap tns  service port:	http://210.175.54.32/service/cloud 
//gsoap tns  service namespace:	http://service.annot.me/ 
//gsoap tns  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage CloudService Definitions

@section CloudService_bindings Service Bindings

  - @ref CloudServiceSoapBinding

@section CloudService_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page CloudServiceSoapBinding Binding "CloudServiceSoapBinding"

@section CloudServiceSoapBinding_operations Operations of Binding  "CloudServiceSoapBinding"

  - @ref __tns__blessMediaAliasWithId

  - @ref __tns__blessMediaAnnotationWithId

  - @ref __tns__blessMediaTokenWithId

  - @ref __tns__blessUserWithId

  - @ref __tns__blockMediaAliasWithId

  - @ref __tns__blockMediaAnnotationWithId

  - @ref __tns__blockUserWithId

  - @ref __tns__chat

  - @ref __tns__curseMediaAliasWithId

  - @ref __tns__curseMediaAnnotationWithId

  - @ref __tns__curseMediaTokenWithId

  - @ref __tns__curseUserWithId

  - @ref __tns__deleteMediaAliasWithId

  - @ref __tns__deleteMediaAnnotationWithId

  - @ref __tns__getUser

  - @ref __tns__isAuthorized

  - @ref __tns__isConnected

  - @ref __tns__isLatestApp

  - @ref __tns__login

  - @ref __tns__selectGameHookWithTokenDigest

  - @ref __tns__selectGameHookWithTokenId

  - @ref __tns__selectGameThreadWithTokenDigest

  - @ref __tns__selectGameThreadWithTokenId

  - @ref __tns__selectMediaAliasesWithTokenId

  - @ref __tns__selectMediaAnnotationsWithTokenId

  - @ref __tns__selectMediaTokenIdWithDigest

  - @ref __tns__selectMediaTokenIdWithUrl

  - @ref __tns__selectMediaTokenWithDigest

  - @ref __tns__selectMediaTokenWithId

  - @ref __tns__selectRelatedMediaAliasesWithTokenId

  - @ref __tns__selectRelatedMediaAnnotationsWithTokenId

  - @ref __tns__setUserAnonymous

  - @ref __tns__setUserLanguage

  - @ref __tns__submitGameHook

  - @ref __tns__submitGameThread

  - @ref __tns__submitMediaAlias

  - @ref __tns__submitMediaAliasTextAndTokenDigest

  - @ref __tns__submitMediaAliasTextWithTokenId

  - @ref __tns__submitMediaAnnotation

  - @ref __tns__submitMediaAnnotationTextAndTokenDigest

  - @ref __tns__submitMediaAnnotationTextWithTokenId

  - @ref __tns__submitMediaToken

  - @ref __tns__submitMediaTokenDigest

  - @ref __tns__submitMediaTokenUrl

  - @ref __tns__updateGameHookTextWithId

  - @ref __tns__updateGameThread

  - @ref __tns__updateMediaAnnotationLanguageWithId

  - @ref __tns__updateMediaAnnotationTextWithId

  - @ref __tns__updateMediaAnnotationUserIdWithId

@section CloudServiceSoapBinding_ports Endpoints of Binding  "CloudServiceSoapBinding"

  - http://210.175.54.32/service/cloud

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CloudServiceSoapBinding                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blessMediaAliasWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blessMediaAliasWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blessMediaAliasWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blessMediaAliasWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blessMediaAliasWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blessMediaAliasWithId*         tns__blessMediaAliasWithId_,
    // response parameters:
    tns__blessMediaAliasWithIdResponse* tns__blessMediaAliasWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blessMediaAliasWithId(
    struct soap *soap,
    // request parameters:
    tns__blessMediaAliasWithId*         tns__blessMediaAliasWithId_,
    // response parameters:
    tns__blessMediaAliasWithIdResponse* tns__blessMediaAliasWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blessMediaAliasWithId document
//gsoap tns  service method-encoding:	blessMediaAliasWithId literal
//gsoap tns  service method-action:	blessMediaAliasWithId ""
//gsoap tns  service method-output-action:	blessMediaAliasWithId http://service.annot.me//Cloud/blessMediaAliasWithIdResponse
int __tns__blessMediaAliasWithId(
    tns__blessMediaAliasWithId*         tns__blessMediaAliasWithId_,	///< Request parameter
    tns__blessMediaAliasWithIdResponse* tns__blessMediaAliasWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blessMediaAnnotationWithId                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blessMediaAnnotationWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blessMediaAnnotationWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blessMediaAnnotationWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blessMediaAnnotationWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blessMediaAnnotationWithId*    tns__blessMediaAnnotationWithId_,
    // response parameters:
    tns__blessMediaAnnotationWithIdResponse* tns__blessMediaAnnotationWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blessMediaAnnotationWithId(
    struct soap *soap,
    // request parameters:
    tns__blessMediaAnnotationWithId*    tns__blessMediaAnnotationWithId_,
    // response parameters:
    tns__blessMediaAnnotationWithIdResponse* tns__blessMediaAnnotationWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blessMediaAnnotationWithId document
//gsoap tns  service method-encoding:	blessMediaAnnotationWithId literal
//gsoap tns  service method-action:	blessMediaAnnotationWithId ""
//gsoap tns  service method-output-action:	blessMediaAnnotationWithId http://service.annot.me//Cloud/blessMediaAnnotationWithIdResponse
int __tns__blessMediaAnnotationWithId(
    tns__blessMediaAnnotationWithId*    tns__blessMediaAnnotationWithId_,	///< Request parameter
    tns__blessMediaAnnotationWithIdResponse* tns__blessMediaAnnotationWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blessMediaTokenWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blessMediaTokenWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blessMediaTokenWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blessMediaTokenWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blessMediaTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blessMediaTokenWithId*         tns__blessMediaTokenWithId_,
    // response parameters:
    tns__blessMediaTokenWithIdResponse* tns__blessMediaTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blessMediaTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__blessMediaTokenWithId*         tns__blessMediaTokenWithId_,
    // response parameters:
    tns__blessMediaTokenWithIdResponse* tns__blessMediaTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blessMediaTokenWithId document
//gsoap tns  service method-encoding:	blessMediaTokenWithId literal
//gsoap tns  service method-action:	blessMediaTokenWithId ""
//gsoap tns  service method-output-action:	blessMediaTokenWithId http://service.annot.me//Cloud/blessMediaTokenWithIdResponse
int __tns__blessMediaTokenWithId(
    tns__blessMediaTokenWithId*         tns__blessMediaTokenWithId_,	///< Request parameter
    tns__blessMediaTokenWithIdResponse* tns__blessMediaTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blessUserWithId                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blessUserWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blessUserWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blessUserWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blessUserWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blessUserWithId*               tns__blessUserWithId_,
    // response parameters:
    tns__blessUserWithIdResponse*       tns__blessUserWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blessUserWithId(
    struct soap *soap,
    // request parameters:
    tns__blessUserWithId*               tns__blessUserWithId_,
    // response parameters:
    tns__blessUserWithIdResponse*       tns__blessUserWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blessUserWithId document
//gsoap tns  service method-encoding:	blessUserWithId literal
//gsoap tns  service method-action:	blessUserWithId ""
//gsoap tns  service method-output-action:	blessUserWithId http://service.annot.me//Cloud/blessUserWithIdResponse
int __tns__blessUserWithId(
    tns__blessUserWithId*               tns__blessUserWithId_,	///< Request parameter
    tns__blessUserWithIdResponse*       tns__blessUserWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blockMediaAliasWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blockMediaAliasWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blockMediaAliasWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blockMediaAliasWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blockMediaAliasWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blockMediaAliasWithId*         tns__blockMediaAliasWithId_,
    // response parameters:
    tns__blockMediaAliasWithIdResponse* tns__blockMediaAliasWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blockMediaAliasWithId(
    struct soap *soap,
    // request parameters:
    tns__blockMediaAliasWithId*         tns__blockMediaAliasWithId_,
    // response parameters:
    tns__blockMediaAliasWithIdResponse* tns__blockMediaAliasWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blockMediaAliasWithId document
//gsoap tns  service method-encoding:	blockMediaAliasWithId literal
//gsoap tns  service method-action:	blockMediaAliasWithId ""
//gsoap tns  service method-output-action:	blockMediaAliasWithId http://service.annot.me//Cloud/blockMediaAliasWithIdResponse
int __tns__blockMediaAliasWithId(
    tns__blockMediaAliasWithId*         tns__blockMediaAliasWithId_,	///< Request parameter
    tns__blockMediaAliasWithIdResponse* tns__blockMediaAliasWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blockMediaAnnotationWithId                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blockMediaAnnotationWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blockMediaAnnotationWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blockMediaAnnotationWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blockMediaAnnotationWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blockMediaAnnotationWithId*    tns__blockMediaAnnotationWithId_,
    // response parameters:
    tns__blockMediaAnnotationWithIdResponse* tns__blockMediaAnnotationWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blockMediaAnnotationWithId(
    struct soap *soap,
    // request parameters:
    tns__blockMediaAnnotationWithId*    tns__blockMediaAnnotationWithId_,
    // response parameters:
    tns__blockMediaAnnotationWithIdResponse* tns__blockMediaAnnotationWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blockMediaAnnotationWithId document
//gsoap tns  service method-encoding:	blockMediaAnnotationWithId literal
//gsoap tns  service method-action:	blockMediaAnnotationWithId ""
//gsoap tns  service method-output-action:	blockMediaAnnotationWithId http://service.annot.me//Cloud/blockMediaAnnotationWithIdResponse
int __tns__blockMediaAnnotationWithId(
    tns__blockMediaAnnotationWithId*    tns__blockMediaAnnotationWithId_,	///< Request parameter
    tns__blockMediaAnnotationWithIdResponse* tns__blockMediaAnnotationWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blockUserWithId                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blockUserWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/blockUserWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/blockUserWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blockUserWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blockUserWithId*               tns__blockUserWithId_,
    // response parameters:
    tns__blockUserWithIdResponse*       tns__blockUserWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blockUserWithId(
    struct soap *soap,
    // request parameters:
    tns__blockUserWithId*               tns__blockUserWithId_,
    // response parameters:
    tns__blockUserWithIdResponse*       tns__blockUserWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blockUserWithId document
//gsoap tns  service method-encoding:	blockUserWithId literal
//gsoap tns  service method-action:	blockUserWithId ""
//gsoap tns  service method-output-action:	blockUserWithId http://service.annot.me//Cloud/blockUserWithIdResponse
int __tns__blockUserWithId(
    tns__blockUserWithId*               tns__blockUserWithId_,	///< Request parameter
    tns__blockUserWithIdResponse*       tns__blockUserWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__chat                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__chat" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/chat"

  - Addressing method output action: "http://service.annot.me//Cloud/chatResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__chat(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__chat*                          tns__chat_,
    // response parameters:
    tns__chatResponse*                  tns__chatResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__chat(
    struct soap *soap,
    // request parameters:
    tns__chat*                          tns__chat_,
    // response parameters:
    tns__chatResponse*                  tns__chatResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	chat document
//gsoap tns  service method-encoding:	chat literal
//gsoap tns  service method-action:	chat ""
//gsoap tns  service method-output-action:	chat http://service.annot.me//Cloud/chatResponse
int __tns__chat(
    tns__chat*                          tns__chat_,	///< Request parameter
    tns__chatResponse*                  tns__chatResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__curseMediaAliasWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__curseMediaAliasWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/curseMediaAliasWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/curseMediaAliasWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__curseMediaAliasWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__curseMediaAliasWithId*         tns__curseMediaAliasWithId_,
    // response parameters:
    tns__curseMediaAliasWithIdResponse* tns__curseMediaAliasWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__curseMediaAliasWithId(
    struct soap *soap,
    // request parameters:
    tns__curseMediaAliasWithId*         tns__curseMediaAliasWithId_,
    // response parameters:
    tns__curseMediaAliasWithIdResponse* tns__curseMediaAliasWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	curseMediaAliasWithId document
//gsoap tns  service method-encoding:	curseMediaAliasWithId literal
//gsoap tns  service method-action:	curseMediaAliasWithId ""
//gsoap tns  service method-output-action:	curseMediaAliasWithId http://service.annot.me//Cloud/curseMediaAliasWithIdResponse
int __tns__curseMediaAliasWithId(
    tns__curseMediaAliasWithId*         tns__curseMediaAliasWithId_,	///< Request parameter
    tns__curseMediaAliasWithIdResponse* tns__curseMediaAliasWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__curseMediaAnnotationWithId                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__curseMediaAnnotationWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/curseMediaAnnotationWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/curseMediaAnnotationWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__curseMediaAnnotationWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__curseMediaAnnotationWithId*    tns__curseMediaAnnotationWithId_,
    // response parameters:
    tns__curseMediaAnnotationWithIdResponse* tns__curseMediaAnnotationWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__curseMediaAnnotationWithId(
    struct soap *soap,
    // request parameters:
    tns__curseMediaAnnotationWithId*    tns__curseMediaAnnotationWithId_,
    // response parameters:
    tns__curseMediaAnnotationWithIdResponse* tns__curseMediaAnnotationWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	curseMediaAnnotationWithId document
//gsoap tns  service method-encoding:	curseMediaAnnotationWithId literal
//gsoap tns  service method-action:	curseMediaAnnotationWithId ""
//gsoap tns  service method-output-action:	curseMediaAnnotationWithId http://service.annot.me//Cloud/curseMediaAnnotationWithIdResponse
int __tns__curseMediaAnnotationWithId(
    tns__curseMediaAnnotationWithId*    tns__curseMediaAnnotationWithId_,	///< Request parameter
    tns__curseMediaAnnotationWithIdResponse* tns__curseMediaAnnotationWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__curseMediaTokenWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__curseMediaTokenWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/curseMediaTokenWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/curseMediaTokenWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__curseMediaTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__curseMediaTokenWithId*         tns__curseMediaTokenWithId_,
    // response parameters:
    tns__curseMediaTokenWithIdResponse* tns__curseMediaTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__curseMediaTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__curseMediaTokenWithId*         tns__curseMediaTokenWithId_,
    // response parameters:
    tns__curseMediaTokenWithIdResponse* tns__curseMediaTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	curseMediaTokenWithId document
//gsoap tns  service method-encoding:	curseMediaTokenWithId literal
//gsoap tns  service method-action:	curseMediaTokenWithId ""
//gsoap tns  service method-output-action:	curseMediaTokenWithId http://service.annot.me//Cloud/curseMediaTokenWithIdResponse
int __tns__curseMediaTokenWithId(
    tns__curseMediaTokenWithId*         tns__curseMediaTokenWithId_,	///< Request parameter
    tns__curseMediaTokenWithIdResponse* tns__curseMediaTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__curseUserWithId                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__curseUserWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/curseUserWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/curseUserWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__curseUserWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__curseUserWithId*               tns__curseUserWithId_,
    // response parameters:
    tns__curseUserWithIdResponse*       tns__curseUserWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__curseUserWithId(
    struct soap *soap,
    // request parameters:
    tns__curseUserWithId*               tns__curseUserWithId_,
    // response parameters:
    tns__curseUserWithIdResponse*       tns__curseUserWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	curseUserWithId document
//gsoap tns  service method-encoding:	curseUserWithId literal
//gsoap tns  service method-action:	curseUserWithId ""
//gsoap tns  service method-output-action:	curseUserWithId http://service.annot.me//Cloud/curseUserWithIdResponse
int __tns__curseUserWithId(
    tns__curseUserWithId*               tns__curseUserWithId_,	///< Request parameter
    tns__curseUserWithIdResponse*       tns__curseUserWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__deleteMediaAliasWithId                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__deleteMediaAliasWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/deleteMediaAliasWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/deleteMediaAliasWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__deleteMediaAliasWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__deleteMediaAliasWithId*        tns__deleteMediaAliasWithId_,
    // response parameters:
    tns__deleteMediaAliasWithIdResponse* tns__deleteMediaAliasWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__deleteMediaAliasWithId(
    struct soap *soap,
    // request parameters:
    tns__deleteMediaAliasWithId*        tns__deleteMediaAliasWithId_,
    // response parameters:
    tns__deleteMediaAliasWithIdResponse* tns__deleteMediaAliasWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	deleteMediaAliasWithId document
//gsoap tns  service method-encoding:	deleteMediaAliasWithId literal
//gsoap tns  service method-action:	deleteMediaAliasWithId ""
//gsoap tns  service method-output-action:	deleteMediaAliasWithId http://service.annot.me//Cloud/deleteMediaAliasWithIdResponse
int __tns__deleteMediaAliasWithId(
    tns__deleteMediaAliasWithId*        tns__deleteMediaAliasWithId_,	///< Request parameter
    tns__deleteMediaAliasWithIdResponse* tns__deleteMediaAliasWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__deleteMediaAnnotationWithId                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__deleteMediaAnnotationWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/deleteMediaAnnotationWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/deleteMediaAnnotationWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__deleteMediaAnnotationWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__deleteMediaAnnotationWithId*   tns__deleteMediaAnnotationWithId_,
    // response parameters:
    tns__deleteMediaAnnotationWithIdResponse* tns__deleteMediaAnnotationWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__deleteMediaAnnotationWithId(
    struct soap *soap,
    // request parameters:
    tns__deleteMediaAnnotationWithId*   tns__deleteMediaAnnotationWithId_,
    // response parameters:
    tns__deleteMediaAnnotationWithIdResponse* tns__deleteMediaAnnotationWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	deleteMediaAnnotationWithId document
//gsoap tns  service method-encoding:	deleteMediaAnnotationWithId literal
//gsoap tns  service method-action:	deleteMediaAnnotationWithId ""
//gsoap tns  service method-output-action:	deleteMediaAnnotationWithId http://service.annot.me//Cloud/deleteMediaAnnotationWithIdResponse
int __tns__deleteMediaAnnotationWithId(
    tns__deleteMediaAnnotationWithId*   tns__deleteMediaAnnotationWithId_,	///< Request parameter
    tns__deleteMediaAnnotationWithIdResponse* tns__deleteMediaAnnotationWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__getUser                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__getUser" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/getUser"

  - Addressing method output action: "http://service.annot.me//Cloud/getUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__getUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__getUser*                       tns__getUser_,
    // response parameters:
    tns__getUserResponse*               tns__getUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__getUser(
    struct soap *soap,
    // request parameters:
    tns__getUser*                       tns__getUser_,
    // response parameters:
    tns__getUserResponse*               tns__getUserResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	getUser document
//gsoap tns  service method-encoding:	getUser literal
//gsoap tns  service method-action:	getUser ""
//gsoap tns  service method-output-action:	getUser http://service.annot.me//Cloud/getUserResponse
int __tns__getUser(
    tns__getUser*                       tns__getUser_,	///< Request parameter
    tns__getUserResponse*               tns__getUserResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__isAuthorized                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__isAuthorized" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/isAuthorized"

  - Addressing method output action: "http://service.annot.me//Cloud/isAuthorizedResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__isAuthorized(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__isAuthorized*                  tns__isAuthorized_,
    // response parameters:
    tns__isAuthorizedResponse*          tns__isAuthorizedResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__isAuthorized(
    struct soap *soap,
    // request parameters:
    tns__isAuthorized*                  tns__isAuthorized_,
    // response parameters:
    tns__isAuthorizedResponse*          tns__isAuthorizedResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	isAuthorized document
//gsoap tns  service method-encoding:	isAuthorized literal
//gsoap tns  service method-action:	isAuthorized ""
//gsoap tns  service method-output-action:	isAuthorized http://service.annot.me//Cloud/isAuthorizedResponse
int __tns__isAuthorized(
    tns__isAuthorized*                  tns__isAuthorized_,	///< Request parameter
    tns__isAuthorizedResponse*          tns__isAuthorizedResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__isConnected                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__isConnected" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/isConnected"

  - Addressing method output action: "http://service.annot.me//Cloud/isConnectedResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__isConnected(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__isConnected*                   tns__isConnected_,
    // response parameters:
    tns__isConnectedResponse*           tns__isConnectedResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__isConnected(
    struct soap *soap,
    // request parameters:
    tns__isConnected*                   tns__isConnected_,
    // response parameters:
    tns__isConnectedResponse*           tns__isConnectedResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	isConnected document
//gsoap tns  service method-encoding:	isConnected literal
//gsoap tns  service method-action:	isConnected ""
//gsoap tns  service method-output-action:	isConnected http://service.annot.me//Cloud/isConnectedResponse
int __tns__isConnected(
    tns__isConnected*                   tns__isConnected_,	///< Request parameter
    tns__isConnectedResponse*           tns__isConnectedResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__isLatestApp                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__isLatestApp" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/isLatestApp"

  - Addressing method output action: "http://service.annot.me//Cloud/isLatestAppResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__isLatestApp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__isLatestApp*                   tns__isLatestApp_,
    // response parameters:
    tns__isLatestAppResponse*           tns__isLatestAppResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__isLatestApp(
    struct soap *soap,
    // request parameters:
    tns__isLatestApp*                   tns__isLatestApp_,
    // response parameters:
    tns__isLatestAppResponse*           tns__isLatestAppResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	isLatestApp document
//gsoap tns  service method-encoding:	isLatestApp literal
//gsoap tns  service method-action:	isLatestApp ""
//gsoap tns  service method-output-action:	isLatestApp http://service.annot.me//Cloud/isLatestAppResponse
int __tns__isLatestApp(
    tns__isLatestApp*                   tns__isLatestApp_,	///< Request parameter
    tns__isLatestAppResponse*           tns__isLatestAppResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__login                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__login" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/login"

  - Addressing method output action: "http://service.annot.me//Cloud/loginResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__login*                         tns__login_,
    // response parameters:
    tns__loginResponse*                 tns__loginResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__login(
    struct soap *soap,
    // request parameters:
    tns__login*                         tns__login_,
    // response parameters:
    tns__loginResponse*                 tns__loginResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	login document
//gsoap tns  service method-encoding:	login literal
//gsoap tns  service method-action:	login ""
//gsoap tns  service method-output-action:	login http://service.annot.me//Cloud/loginResponse
int __tns__login(
    tns__login*                         tns__login_,	///< Request parameter
    tns__loginResponse*                 tns__loginResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameHookWithTokenDigest                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameHookWithTokenDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectGameHookWithTokenDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/selectGameHookWithTokenDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameHookWithTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameHookWithTokenDigest* tns__selectGameHookWithTokenDigest_,
    // response parameters:
    tns__selectGameHookWithTokenDigestResponse* tns__selectGameHookWithTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameHookWithTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__selectGameHookWithTokenDigest* tns__selectGameHookWithTokenDigest_,
    // response parameters:
    tns__selectGameHookWithTokenDigestResponse* tns__selectGameHookWithTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameHookWithTokenDigest document
//gsoap tns  service method-encoding:	selectGameHookWithTokenDigest literal
//gsoap tns  service method-action:	selectGameHookWithTokenDigest ""
//gsoap tns  service method-output-action:	selectGameHookWithTokenDigest http://service.annot.me//Cloud/selectGameHookWithTokenDigestResponse
int __tns__selectGameHookWithTokenDigest(
    tns__selectGameHookWithTokenDigest* tns__selectGameHookWithTokenDigest_,	///< Request parameter
    tns__selectGameHookWithTokenDigestResponse* tns__selectGameHookWithTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameHookWithTokenId                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameHookWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectGameHookWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectGameHookWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameHookWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameHookWithTokenId*     tns__selectGameHookWithTokenId_,
    // response parameters:
    tns__selectGameHookWithTokenIdResponse* tns__selectGameHookWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameHookWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectGameHookWithTokenId*     tns__selectGameHookWithTokenId_,
    // response parameters:
    tns__selectGameHookWithTokenIdResponse* tns__selectGameHookWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameHookWithTokenId document
//gsoap tns  service method-encoding:	selectGameHookWithTokenId literal
//gsoap tns  service method-action:	selectGameHookWithTokenId ""
//gsoap tns  service method-output-action:	selectGameHookWithTokenId http://service.annot.me//Cloud/selectGameHookWithTokenIdResponse
int __tns__selectGameHookWithTokenId(
    tns__selectGameHookWithTokenId*     tns__selectGameHookWithTokenId_,	///< Request parameter
    tns__selectGameHookWithTokenIdResponse* tns__selectGameHookWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameThreadWithTokenDigest                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameThreadWithTokenDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectGameThreadWithTokenDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/selectGameThreadWithTokenDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameThreadWithTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameThreadWithTokenDigest* tns__selectGameThreadWithTokenDigest_,
    // response parameters:
    tns__selectGameThreadWithTokenDigestResponse* tns__selectGameThreadWithTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameThreadWithTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__selectGameThreadWithTokenDigest* tns__selectGameThreadWithTokenDigest_,
    // response parameters:
    tns__selectGameThreadWithTokenDigestResponse* tns__selectGameThreadWithTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameThreadWithTokenDigest document
//gsoap tns  service method-encoding:	selectGameThreadWithTokenDigest literal
//gsoap tns  service method-action:	selectGameThreadWithTokenDigest ""
//gsoap tns  service method-output-action:	selectGameThreadWithTokenDigest http://service.annot.me//Cloud/selectGameThreadWithTokenDigestResponse
int __tns__selectGameThreadWithTokenDigest(
    tns__selectGameThreadWithTokenDigest* tns__selectGameThreadWithTokenDigest_,	///< Request parameter
    tns__selectGameThreadWithTokenDigestResponse* tns__selectGameThreadWithTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameThreadWithTokenId                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameThreadWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectGameThreadWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectGameThreadWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameThreadWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameThreadWithTokenId*   tns__selectGameThreadWithTokenId_,
    // response parameters:
    tns__selectGameThreadWithTokenIdResponse* tns__selectGameThreadWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameThreadWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectGameThreadWithTokenId*   tns__selectGameThreadWithTokenId_,
    // response parameters:
    tns__selectGameThreadWithTokenIdResponse* tns__selectGameThreadWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameThreadWithTokenId document
//gsoap tns  service method-encoding:	selectGameThreadWithTokenId literal
//gsoap tns  service method-action:	selectGameThreadWithTokenId ""
//gsoap tns  service method-output-action:	selectGameThreadWithTokenId http://service.annot.me//Cloud/selectGameThreadWithTokenIdResponse
int __tns__selectGameThreadWithTokenId(
    tns__selectGameThreadWithTokenId*   tns__selectGameThreadWithTokenId_,	///< Request parameter
    tns__selectGameThreadWithTokenIdResponse* tns__selectGameThreadWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaAliasesWithTokenId                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaAliasesWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectMediaAliasesWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectMediaAliasesWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaAliasesWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaAliasesWithTokenId* tns__selectMediaAliasesWithTokenId_,
    // response parameters:
    tns__selectMediaAliasesWithTokenIdResponse* tns__selectMediaAliasesWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaAliasesWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectMediaAliasesWithTokenId* tns__selectMediaAliasesWithTokenId_,
    // response parameters:
    tns__selectMediaAliasesWithTokenIdResponse* tns__selectMediaAliasesWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaAliasesWithTokenId document
//gsoap tns  service method-encoding:	selectMediaAliasesWithTokenId literal
//gsoap tns  service method-action:	selectMediaAliasesWithTokenId ""
//gsoap tns  service method-output-action:	selectMediaAliasesWithTokenId http://service.annot.me//Cloud/selectMediaAliasesWithTokenIdResponse
int __tns__selectMediaAliasesWithTokenId(
    tns__selectMediaAliasesWithTokenId* tns__selectMediaAliasesWithTokenId_,	///< Request parameter
    tns__selectMediaAliasesWithTokenIdResponse* tns__selectMediaAliasesWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaAnnotationsWithTokenId                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaAnnotationsWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectMediaAnnotationsWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectMediaAnnotationsWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaAnnotationsWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaAnnotationsWithTokenId* tns__selectMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectMediaAnnotationsWithTokenIdResponse* tns__selectMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaAnnotationsWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectMediaAnnotationsWithTokenId* tns__selectMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectMediaAnnotationsWithTokenIdResponse* tns__selectMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaAnnotationsWithTokenId document
//gsoap tns  service method-encoding:	selectMediaAnnotationsWithTokenId literal
//gsoap tns  service method-action:	selectMediaAnnotationsWithTokenId ""
//gsoap tns  service method-output-action:	selectMediaAnnotationsWithTokenId http://service.annot.me//Cloud/selectMediaAnnotationsWithTokenIdResponse
int __tns__selectMediaAnnotationsWithTokenId(
    tns__selectMediaAnnotationsWithTokenId* tns__selectMediaAnnotationsWithTokenId_,	///< Request parameter
    tns__selectMediaAnnotationsWithTokenIdResponse* tns__selectMediaAnnotationsWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaTokenIdWithDigest                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaTokenIdWithDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectMediaTokenIdWithDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/selectMediaTokenIdWithDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaTokenIdWithDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaTokenIdWithDigest*  tns__selectMediaTokenIdWithDigest_,
    // response parameters:
    tns__selectMediaTokenIdWithDigestResponse* tns__selectMediaTokenIdWithDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaTokenIdWithDigest(
    struct soap *soap,
    // request parameters:
    tns__selectMediaTokenIdWithDigest*  tns__selectMediaTokenIdWithDigest_,
    // response parameters:
    tns__selectMediaTokenIdWithDigestResponse* tns__selectMediaTokenIdWithDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaTokenIdWithDigest document
//gsoap tns  service method-encoding:	selectMediaTokenIdWithDigest literal
//gsoap tns  service method-action:	selectMediaTokenIdWithDigest ""
//gsoap tns  service method-output-action:	selectMediaTokenIdWithDigest http://service.annot.me//Cloud/selectMediaTokenIdWithDigestResponse
int __tns__selectMediaTokenIdWithDigest(
    tns__selectMediaTokenIdWithDigest*  tns__selectMediaTokenIdWithDigest_,	///< Request parameter
    tns__selectMediaTokenIdWithDigestResponse* tns__selectMediaTokenIdWithDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaTokenIdWithUrl                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaTokenIdWithUrl" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectMediaTokenIdWithUrl"

  - Addressing method output action: "http://service.annot.me//Cloud/selectMediaTokenIdWithUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaTokenIdWithUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaTokenIdWithUrl*     tns__selectMediaTokenIdWithUrl_,
    // response parameters:
    tns__selectMediaTokenIdWithUrlResponse* tns__selectMediaTokenIdWithUrlResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaTokenIdWithUrl(
    struct soap *soap,
    // request parameters:
    tns__selectMediaTokenIdWithUrl*     tns__selectMediaTokenIdWithUrl_,
    // response parameters:
    tns__selectMediaTokenIdWithUrlResponse* tns__selectMediaTokenIdWithUrlResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaTokenIdWithUrl document
//gsoap tns  service method-encoding:	selectMediaTokenIdWithUrl literal
//gsoap tns  service method-action:	selectMediaTokenIdWithUrl ""
//gsoap tns  service method-output-action:	selectMediaTokenIdWithUrl http://service.annot.me//Cloud/selectMediaTokenIdWithUrlResponse
int __tns__selectMediaTokenIdWithUrl(
    tns__selectMediaTokenIdWithUrl*     tns__selectMediaTokenIdWithUrl_,	///< Request parameter
    tns__selectMediaTokenIdWithUrlResponse* tns__selectMediaTokenIdWithUrlResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaTokenWithDigest                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaTokenWithDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectMediaTokenWithDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/selectMediaTokenWithDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaTokenWithDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaTokenWithDigest*    tns__selectMediaTokenWithDigest_,
    // response parameters:
    tns__selectMediaTokenWithDigestResponse* tns__selectMediaTokenWithDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaTokenWithDigest(
    struct soap *soap,
    // request parameters:
    tns__selectMediaTokenWithDigest*    tns__selectMediaTokenWithDigest_,
    // response parameters:
    tns__selectMediaTokenWithDigestResponse* tns__selectMediaTokenWithDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaTokenWithDigest document
//gsoap tns  service method-encoding:	selectMediaTokenWithDigest literal
//gsoap tns  service method-action:	selectMediaTokenWithDigest ""
//gsoap tns  service method-output-action:	selectMediaTokenWithDigest http://service.annot.me//Cloud/selectMediaTokenWithDigestResponse
int __tns__selectMediaTokenWithDigest(
    tns__selectMediaTokenWithDigest*    tns__selectMediaTokenWithDigest_,	///< Request parameter
    tns__selectMediaTokenWithDigestResponse* tns__selectMediaTokenWithDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaTokenWithId                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaTokenWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectMediaTokenWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectMediaTokenWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaTokenWithId*        tns__selectMediaTokenWithId_,
    // response parameters:
    tns__selectMediaTokenWithIdResponse* tns__selectMediaTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__selectMediaTokenWithId*        tns__selectMediaTokenWithId_,
    // response parameters:
    tns__selectMediaTokenWithIdResponse* tns__selectMediaTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaTokenWithId document
//gsoap tns  service method-encoding:	selectMediaTokenWithId literal
//gsoap tns  service method-action:	selectMediaTokenWithId ""
//gsoap tns  service method-output-action:	selectMediaTokenWithId http://service.annot.me//Cloud/selectMediaTokenWithIdResponse
int __tns__selectMediaTokenWithId(
    tns__selectMediaTokenWithId*        tns__selectMediaTokenWithId_,	///< Request parameter
    tns__selectMediaTokenWithIdResponse* tns__selectMediaTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectRelatedMediaAliasesWithTokenId                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectRelatedMediaAliasesWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectRelatedMediaAliasesWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectRelatedMediaAliasesWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectRelatedMediaAliasesWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectRelatedMediaAliasesWithTokenId* tns__selectRelatedMediaAliasesWithTokenId_,
    // response parameters:
    tns__selectRelatedMediaAliasesWithTokenIdResponse* tns__selectRelatedMediaAliasesWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectRelatedMediaAliasesWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectRelatedMediaAliasesWithTokenId* tns__selectRelatedMediaAliasesWithTokenId_,
    // response parameters:
    tns__selectRelatedMediaAliasesWithTokenIdResponse* tns__selectRelatedMediaAliasesWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectRelatedMediaAliasesWithTokenId document
//gsoap tns  service method-encoding:	selectRelatedMediaAliasesWithTokenId literal
//gsoap tns  service method-action:	selectRelatedMediaAliasesWithTokenId ""
//gsoap tns  service method-output-action:	selectRelatedMediaAliasesWithTokenId http://service.annot.me//Cloud/selectRelatedMediaAliasesWithTokenIdResponse
int __tns__selectRelatedMediaAliasesWithTokenId(
    tns__selectRelatedMediaAliasesWithTokenId* tns__selectRelatedMediaAliasesWithTokenId_,	///< Request parameter
    tns__selectRelatedMediaAliasesWithTokenIdResponse* tns__selectRelatedMediaAliasesWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectRelatedMediaAnnotationsWithTokenId                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectRelatedMediaAnnotationsWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/selectRelatedMediaAnnotationsWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/selectRelatedMediaAnnotationsWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectRelatedMediaAnnotationsWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectRelatedMediaAnnotationsWithTokenId* tns__selectRelatedMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectRelatedMediaAnnotationsWithTokenIdResponse* tns__selectRelatedMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectRelatedMediaAnnotationsWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectRelatedMediaAnnotationsWithTokenId* tns__selectRelatedMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectRelatedMediaAnnotationsWithTokenIdResponse* tns__selectRelatedMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectRelatedMediaAnnotationsWithTokenId document
//gsoap tns  service method-encoding:	selectRelatedMediaAnnotationsWithTokenId literal
//gsoap tns  service method-action:	selectRelatedMediaAnnotationsWithTokenId ""
//gsoap tns  service method-output-action:	selectRelatedMediaAnnotationsWithTokenId http://service.annot.me//Cloud/selectRelatedMediaAnnotationsWithTokenIdResponse
int __tns__selectRelatedMediaAnnotationsWithTokenId(
    tns__selectRelatedMediaAnnotationsWithTokenId* tns__selectRelatedMediaAnnotationsWithTokenId_,	///< Request parameter
    tns__selectRelatedMediaAnnotationsWithTokenIdResponse* tns__selectRelatedMediaAnnotationsWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__setUserAnonymous                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__setUserAnonymous" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/setUserAnonymous"

  - Addressing method output action: "http://service.annot.me//Cloud/setUserAnonymousResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__setUserAnonymous(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__setUserAnonymous*              tns__setUserAnonymous_,
    // response parameters:
    tns__setUserAnonymousResponse*      tns__setUserAnonymousResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__setUserAnonymous(
    struct soap *soap,
    // request parameters:
    tns__setUserAnonymous*              tns__setUserAnonymous_,
    // response parameters:
    tns__setUserAnonymousResponse*      tns__setUserAnonymousResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	setUserAnonymous document
//gsoap tns  service method-encoding:	setUserAnonymous literal
//gsoap tns  service method-action:	setUserAnonymous ""
//gsoap tns  service method-output-action:	setUserAnonymous http://service.annot.me//Cloud/setUserAnonymousResponse
int __tns__setUserAnonymous(
    tns__setUserAnonymous*              tns__setUserAnonymous_,	///< Request parameter
    tns__setUserAnonymousResponse*      tns__setUserAnonymousResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__setUserLanguage                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__setUserLanguage" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/setUserLanguage"

  - Addressing method output action: "http://service.annot.me//Cloud/setUserLanguageResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__setUserLanguage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__setUserLanguage*               tns__setUserLanguage_,
    // response parameters:
    tns__setUserLanguageResponse*       tns__setUserLanguageResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__setUserLanguage(
    struct soap *soap,
    // request parameters:
    tns__setUserLanguage*               tns__setUserLanguage_,
    // response parameters:
    tns__setUserLanguageResponse*       tns__setUserLanguageResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	setUserLanguage document
//gsoap tns  service method-encoding:	setUserLanguage literal
//gsoap tns  service method-action:	setUserLanguage ""
//gsoap tns  service method-output-action:	setUserLanguage http://service.annot.me//Cloud/setUserLanguageResponse
int __tns__setUserLanguage(
    tns__setUserLanguage*               tns__setUserLanguage_,	///< Request parameter
    tns__setUserLanguageResponse*       tns__setUserLanguageResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameHook                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameHook" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitGameHook"

  - Addressing method output action: "http://service.annot.me//Cloud/submitGameHookResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameHook(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameHook*                tns__submitGameHook_,
    // response parameters:
    tns__submitGameHookResponse*        tns__submitGameHookResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameHook(
    struct soap *soap,
    // request parameters:
    tns__submitGameHook*                tns__submitGameHook_,
    // response parameters:
    tns__submitGameHookResponse*        tns__submitGameHookResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameHook document
//gsoap tns  service method-encoding:	submitGameHook literal
//gsoap tns  service method-action:	submitGameHook ""
//gsoap tns  service method-output-action:	submitGameHook http://service.annot.me//Cloud/submitGameHookResponse
int __tns__submitGameHook(
    tns__submitGameHook*                tns__submitGameHook_,	///< Request parameter
    tns__submitGameHookResponse*        tns__submitGameHookResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameThread                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameThread" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitGameThread"

  - Addressing method output action: "http://service.annot.me//Cloud/submitGameThreadResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameThread(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameThread*              tns__submitGameThread_,
    // response parameters:
    tns__submitGameThreadResponse*      tns__submitGameThreadResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameThread(
    struct soap *soap,
    // request parameters:
    tns__submitGameThread*              tns__submitGameThread_,
    // response parameters:
    tns__submitGameThreadResponse*      tns__submitGameThreadResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameThread document
//gsoap tns  service method-encoding:	submitGameThread literal
//gsoap tns  service method-action:	submitGameThread ""
//gsoap tns  service method-output-action:	submitGameThread http://service.annot.me//Cloud/submitGameThreadResponse
int __tns__submitGameThread(
    tns__submitGameThread*              tns__submitGameThread_,	///< Request parameter
    tns__submitGameThreadResponse*      tns__submitGameThreadResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAlias                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAlias" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaAlias"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaAliasResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAlias(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAlias*              tns__submitMediaAlias_,
    // response parameters:
    tns__submitMediaAliasResponse*      tns__submitMediaAliasResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAlias(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAlias*              tns__submitMediaAlias_,
    // response parameters:
    tns__submitMediaAliasResponse*      tns__submitMediaAliasResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAlias document
//gsoap tns  service method-encoding:	submitMediaAlias literal
//gsoap tns  service method-action:	submitMediaAlias ""
//gsoap tns  service method-output-action:	submitMediaAlias http://service.annot.me//Cloud/submitMediaAliasResponse
int __tns__submitMediaAlias(
    tns__submitMediaAlias*              tns__submitMediaAlias_,	///< Request parameter
    tns__submitMediaAliasResponse*      tns__submitMediaAliasResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAliasTextAndTokenDigest                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAliasTextAndTokenDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaAliasTextAndTokenDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaAliasTextAndTokenDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAliasTextAndTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAliasTextAndTokenDigest* tns__submitMediaAliasTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAliasTextAndTokenDigestResponse* tns__submitMediaAliasTextAndTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAliasTextAndTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAliasTextAndTokenDigest* tns__submitMediaAliasTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAliasTextAndTokenDigestResponse* tns__submitMediaAliasTextAndTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAliasTextAndTokenDigest document
//gsoap tns  service method-encoding:	submitMediaAliasTextAndTokenDigest literal
//gsoap tns  service method-action:	submitMediaAliasTextAndTokenDigest ""
//gsoap tns  service method-output-action:	submitMediaAliasTextAndTokenDigest http://service.annot.me//Cloud/submitMediaAliasTextAndTokenDigestResponse
int __tns__submitMediaAliasTextAndTokenDigest(
    tns__submitMediaAliasTextAndTokenDigest* tns__submitMediaAliasTextAndTokenDigest_,	///< Request parameter
    tns__submitMediaAliasTextAndTokenDigestResponse* tns__submitMediaAliasTextAndTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAliasTextWithTokenId                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAliasTextWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaAliasTextWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaAliasTextWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAliasTextWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAliasTextWithTokenId* tns__submitMediaAliasTextWithTokenId_,
    // response parameters:
    tns__submitMediaAliasTextWithTokenIdResponse* tns__submitMediaAliasTextWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAliasTextWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAliasTextWithTokenId* tns__submitMediaAliasTextWithTokenId_,
    // response parameters:
    tns__submitMediaAliasTextWithTokenIdResponse* tns__submitMediaAliasTextWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAliasTextWithTokenId document
//gsoap tns  service method-encoding:	submitMediaAliasTextWithTokenId literal
//gsoap tns  service method-action:	submitMediaAliasTextWithTokenId ""
//gsoap tns  service method-output-action:	submitMediaAliasTextWithTokenId http://service.annot.me//Cloud/submitMediaAliasTextWithTokenIdResponse
int __tns__submitMediaAliasTextWithTokenId(
    tns__submitMediaAliasTextWithTokenId* tns__submitMediaAliasTextWithTokenId_,	///< Request parameter
    tns__submitMediaAliasTextWithTokenIdResponse* tns__submitMediaAliasTextWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAnnotation                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAnnotation" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaAnnotation"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaAnnotationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAnnotation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAnnotation*         tns__submitMediaAnnotation_,
    // response parameters:
    tns__submitMediaAnnotationResponse* tns__submitMediaAnnotationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAnnotation(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAnnotation*         tns__submitMediaAnnotation_,
    // response parameters:
    tns__submitMediaAnnotationResponse* tns__submitMediaAnnotationResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAnnotation document
//gsoap tns  service method-encoding:	submitMediaAnnotation literal
//gsoap tns  service method-action:	submitMediaAnnotation ""
//gsoap tns  service method-output-action:	submitMediaAnnotation http://service.annot.me//Cloud/submitMediaAnnotationResponse
int __tns__submitMediaAnnotation(
    tns__submitMediaAnnotation*         tns__submitMediaAnnotation_,	///< Request parameter
    tns__submitMediaAnnotationResponse* tns__submitMediaAnnotationResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAnnotationTextAndTokenDigest                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAnnotationTextAndTokenDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaAnnotationTextAndTokenDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaAnnotationTextAndTokenDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAnnotationTextAndTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAnnotationTextAndTokenDigest* tns__submitMediaAnnotationTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAnnotationTextAndTokenDigestResponse* tns__submitMediaAnnotationTextAndTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAnnotationTextAndTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAnnotationTextAndTokenDigest* tns__submitMediaAnnotationTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAnnotationTextAndTokenDigestResponse* tns__submitMediaAnnotationTextAndTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAnnotationTextAndTokenDigest document
//gsoap tns  service method-encoding:	submitMediaAnnotationTextAndTokenDigest literal
//gsoap tns  service method-action:	submitMediaAnnotationTextAndTokenDigest ""
//gsoap tns  service method-output-action:	submitMediaAnnotationTextAndTokenDigest http://service.annot.me//Cloud/submitMediaAnnotationTextAndTokenDigestResponse
int __tns__submitMediaAnnotationTextAndTokenDigest(
    tns__submitMediaAnnotationTextAndTokenDigest* tns__submitMediaAnnotationTextAndTokenDigest_,	///< Request parameter
    tns__submitMediaAnnotationTextAndTokenDigestResponse* tns__submitMediaAnnotationTextAndTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAnnotationTextWithTokenId                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAnnotationTextWithTokenId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaAnnotationTextWithTokenId"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaAnnotationTextWithTokenIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAnnotationTextWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAnnotationTextWithTokenId* tns__submitMediaAnnotationTextWithTokenId_,
    // response parameters:
    tns__submitMediaAnnotationTextWithTokenIdResponse* tns__submitMediaAnnotationTextWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAnnotationTextWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAnnotationTextWithTokenId* tns__submitMediaAnnotationTextWithTokenId_,
    // response parameters:
    tns__submitMediaAnnotationTextWithTokenIdResponse* tns__submitMediaAnnotationTextWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAnnotationTextWithTokenId document
//gsoap tns  service method-encoding:	submitMediaAnnotationTextWithTokenId literal
//gsoap tns  service method-action:	submitMediaAnnotationTextWithTokenId ""
//gsoap tns  service method-output-action:	submitMediaAnnotationTextWithTokenId http://service.annot.me//Cloud/submitMediaAnnotationTextWithTokenIdResponse
int __tns__submitMediaAnnotationTextWithTokenId(
    tns__submitMediaAnnotationTextWithTokenId* tns__submitMediaAnnotationTextWithTokenId_,	///< Request parameter
    tns__submitMediaAnnotationTextWithTokenIdResponse* tns__submitMediaAnnotationTextWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaToken                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaToken" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaToken"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaTokenResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaToken*              tns__submitMediaToken_,
    // response parameters:
    tns__submitMediaTokenResponse*      tns__submitMediaTokenResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaToken(
    struct soap *soap,
    // request parameters:
    tns__submitMediaToken*              tns__submitMediaToken_,
    // response parameters:
    tns__submitMediaTokenResponse*      tns__submitMediaTokenResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaToken document
//gsoap tns  service method-encoding:	submitMediaToken literal
//gsoap tns  service method-action:	submitMediaToken ""
//gsoap tns  service method-output-action:	submitMediaToken http://service.annot.me//Cloud/submitMediaTokenResponse
int __tns__submitMediaToken(
    tns__submitMediaToken*              tns__submitMediaToken_,	///< Request parameter
    tns__submitMediaTokenResponse*      tns__submitMediaTokenResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaTokenDigest                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaTokenDigest" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaTokenDigest"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaTokenDigestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaTokenDigest*        tns__submitMediaTokenDigest_,
    // response parameters:
    tns__submitMediaTokenDigestResponse* tns__submitMediaTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitMediaTokenDigest*        tns__submitMediaTokenDigest_,
    // response parameters:
    tns__submitMediaTokenDigestResponse* tns__submitMediaTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaTokenDigest document
//gsoap tns  service method-encoding:	submitMediaTokenDigest literal
//gsoap tns  service method-action:	submitMediaTokenDigest ""
//gsoap tns  service method-output-action:	submitMediaTokenDigest http://service.annot.me//Cloud/submitMediaTokenDigestResponse
int __tns__submitMediaTokenDigest(
    tns__submitMediaTokenDigest*        tns__submitMediaTokenDigest_,	///< Request parameter
    tns__submitMediaTokenDigestResponse* tns__submitMediaTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaTokenUrl                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaTokenUrl" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/submitMediaTokenUrl"

  - Addressing method output action: "http://service.annot.me//Cloud/submitMediaTokenUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaTokenUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaTokenUrl*           tns__submitMediaTokenUrl_,
    // response parameters:
    tns__submitMediaTokenUrlResponse*   tns__submitMediaTokenUrlResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaTokenUrl(
    struct soap *soap,
    // request parameters:
    tns__submitMediaTokenUrl*           tns__submitMediaTokenUrl_,
    // response parameters:
    tns__submitMediaTokenUrlResponse*   tns__submitMediaTokenUrlResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaTokenUrl document
//gsoap tns  service method-encoding:	submitMediaTokenUrl literal
//gsoap tns  service method-action:	submitMediaTokenUrl ""
//gsoap tns  service method-output-action:	submitMediaTokenUrl http://service.annot.me//Cloud/submitMediaTokenUrlResponse
int __tns__submitMediaTokenUrl(
    tns__submitMediaTokenUrl*           tns__submitMediaTokenUrl_,	///< Request parameter
    tns__submitMediaTokenUrlResponse*   tns__submitMediaTokenUrlResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateGameHookTextWithId                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateGameHookTextWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/updateGameHookTextWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/updateGameHookTextWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateGameHookTextWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateGameHookTextWithId*      tns__updateGameHookTextWithId_,
    // response parameters:
    tns__updateGameHookTextWithIdResponse* tns__updateGameHookTextWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateGameHookTextWithId(
    struct soap *soap,
    // request parameters:
    tns__updateGameHookTextWithId*      tns__updateGameHookTextWithId_,
    // response parameters:
    tns__updateGameHookTextWithIdResponse* tns__updateGameHookTextWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateGameHookTextWithId document
//gsoap tns  service method-encoding:	updateGameHookTextWithId literal
//gsoap tns  service method-action:	updateGameHookTextWithId ""
//gsoap tns  service method-output-action:	updateGameHookTextWithId http://service.annot.me//Cloud/updateGameHookTextWithIdResponse
int __tns__updateGameHookTextWithId(
    tns__updateGameHookTextWithId*      tns__updateGameHookTextWithId_,	///< Request parameter
    tns__updateGameHookTextWithIdResponse* tns__updateGameHookTextWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateGameThread                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateGameThread" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/updateGameThread"

  - Addressing method output action: "http://service.annot.me//Cloud/updateGameThreadResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateGameThread(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateGameThread*              tns__updateGameThread_,
    // response parameters:
    tns__updateGameThreadResponse*      tns__updateGameThreadResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateGameThread(
    struct soap *soap,
    // request parameters:
    tns__updateGameThread*              tns__updateGameThread_,
    // response parameters:
    tns__updateGameThreadResponse*      tns__updateGameThreadResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateGameThread document
//gsoap tns  service method-encoding:	updateGameThread literal
//gsoap tns  service method-action:	updateGameThread ""
//gsoap tns  service method-output-action:	updateGameThread http://service.annot.me//Cloud/updateGameThreadResponse
int __tns__updateGameThread(
    tns__updateGameThread*              tns__updateGameThread_,	///< Request parameter
    tns__updateGameThreadResponse*      tns__updateGameThreadResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateMediaAnnotationLanguageWithId                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateMediaAnnotationLanguageWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/updateMediaAnnotationLanguageWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/updateMediaAnnotationLanguageWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateMediaAnnotationLanguageWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateMediaAnnotationLanguageWithId* tns__updateMediaAnnotationLanguageWithId_,
    // response parameters:
    tns__updateMediaAnnotationLanguageWithIdResponse* tns__updateMediaAnnotationLanguageWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateMediaAnnotationLanguageWithId(
    struct soap *soap,
    // request parameters:
    tns__updateMediaAnnotationLanguageWithId* tns__updateMediaAnnotationLanguageWithId_,
    // response parameters:
    tns__updateMediaAnnotationLanguageWithIdResponse* tns__updateMediaAnnotationLanguageWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateMediaAnnotationLanguageWithId document
//gsoap tns  service method-encoding:	updateMediaAnnotationLanguageWithId literal
//gsoap tns  service method-action:	updateMediaAnnotationLanguageWithId ""
//gsoap tns  service method-output-action:	updateMediaAnnotationLanguageWithId http://service.annot.me//Cloud/updateMediaAnnotationLanguageWithIdResponse
int __tns__updateMediaAnnotationLanguageWithId(
    tns__updateMediaAnnotationLanguageWithId* tns__updateMediaAnnotationLanguageWithId_,	///< Request parameter
    tns__updateMediaAnnotationLanguageWithIdResponse* tns__updateMediaAnnotationLanguageWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateMediaAnnotationTextWithId                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateMediaAnnotationTextWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/updateMediaAnnotationTextWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/updateMediaAnnotationTextWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateMediaAnnotationTextWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateMediaAnnotationTextWithId* tns__updateMediaAnnotationTextWithId_,
    // response parameters:
    tns__updateMediaAnnotationTextWithIdResponse* tns__updateMediaAnnotationTextWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateMediaAnnotationTextWithId(
    struct soap *soap,
    // request parameters:
    tns__updateMediaAnnotationTextWithId* tns__updateMediaAnnotationTextWithId_,
    // response parameters:
    tns__updateMediaAnnotationTextWithIdResponse* tns__updateMediaAnnotationTextWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateMediaAnnotationTextWithId document
//gsoap tns  service method-encoding:	updateMediaAnnotationTextWithId literal
//gsoap tns  service method-action:	updateMediaAnnotationTextWithId ""
//gsoap tns  service method-output-action:	updateMediaAnnotationTextWithId http://service.annot.me//Cloud/updateMediaAnnotationTextWithIdResponse
int __tns__updateMediaAnnotationTextWithId(
    tns__updateMediaAnnotationTextWithId* tns__updateMediaAnnotationTextWithId_,	///< Request parameter
    tns__updateMediaAnnotationTextWithIdResponse* tns__updateMediaAnnotationTextWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateMediaAnnotationUserIdWithId                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateMediaAnnotationUserIdWithId" of service binding "CloudServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing method action: "http://service.annot.me//Cloud/updateMediaAnnotationUserIdWithId"

  - Addressing method output action: "http://service.annot.me//Cloud/updateMediaAnnotationUserIdWithIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateMediaAnnotationUserIdWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateMediaAnnotationUserIdWithId* tns__updateMediaAnnotationUserIdWithId_,
    // response parameters:
    tns__updateMediaAnnotationUserIdWithIdResponse* tns__updateMediaAnnotationUserIdWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateMediaAnnotationUserIdWithId(
    struct soap *soap,
    // request parameters:
    tns__updateMediaAnnotationUserIdWithId* tns__updateMediaAnnotationUserIdWithId_,
    // response parameters:
    tns__updateMediaAnnotationUserIdWithIdResponse* tns__updateMediaAnnotationUserIdWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapCloudServiceSoapBindingProxy.h):
@code
  class CloudServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCloudServiceSoapBindingService.h):
@code
  class CloudServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateMediaAnnotationUserIdWithId document
//gsoap tns  service method-encoding:	updateMediaAnnotationUserIdWithId literal
//gsoap tns  service method-action:	updateMediaAnnotationUserIdWithId ""
//gsoap tns  service method-output-action:	updateMediaAnnotationUserIdWithId http://service.annot.me//Cloud/updateMediaAnnotationUserIdWithIdResponse
int __tns__updateMediaAnnotationUserIdWithId(
    tns__updateMediaAnnotationUserIdWithId* tns__updateMediaAnnotationUserIdWithId_,	///< Request parameter
    tns__updateMediaAnnotationUserIdWithIdResponse* tns__updateMediaAnnotationUserIdWithIdResponse_	///< Response parameter
);

/**

@page CloudServiceSoapBinding Binding "CloudServiceSoapBinding"

@section CloudServiceSoapBinding_policy_enablers Policy Enablers of Binding  "CloudServiceSoapBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema ""

@section tns Top-level root elements of schema "http://service.annot.me/"

  - <tns:blessMediaAliasWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaAliasWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaAnnotationWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaAnnotationWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blessUserWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blessUserWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blockMediaAliasWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blockMediaAliasWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blockMediaAnnotationWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blockMediaAnnotationWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blockUserWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blockUserWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:chat> (use wsdl2h option -g to auto-generate)

  - <tns:chatResponse> (use wsdl2h option -g to auto-generate)

  - <tns:curseMediaAliasWithId> (use wsdl2h option -g to auto-generate)

  - <tns:curseMediaAliasWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:curseMediaAnnotationWithId> (use wsdl2h option -g to auto-generate)

  - <tns:curseMediaAnnotationWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:curseMediaTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:curseMediaTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:curseUserWithId> (use wsdl2h option -g to auto-generate)

  - <tns:curseUserWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:deleteMediaAliasWithId> (use wsdl2h option -g to auto-generate)

  - <tns:deleteMediaAliasWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:deleteMediaAnnotationWithId> (use wsdl2h option -g to auto-generate)

  - <tns:deleteMediaAnnotationWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:getUser> (use wsdl2h option -g to auto-generate)

  - <tns:getUserResponse> (use wsdl2h option -g to auto-generate)

  - <tns:isAuthorized> (use wsdl2h option -g to auto-generate)

  - <tns:isAuthorizedResponse> (use wsdl2h option -g to auto-generate)

  - <tns:isConnected> (use wsdl2h option -g to auto-generate)

  - <tns:isConnectedResponse> (use wsdl2h option -g to auto-generate)

  - <tns:isLatestApp> (use wsdl2h option -g to auto-generate)

  - <tns:isLatestAppResponse> (use wsdl2h option -g to auto-generate)

  - <tns:login> (use wsdl2h option -g to auto-generate)

  - <tns:loginResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameHookWithTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameHookWithTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameHookWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameHookWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameThreadWithTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameThreadWithTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameThreadWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameThreadWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAliasesWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAliasesWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAnnotationsWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAnnotationsWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenIdWithDigest> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenIdWithDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenIdWithUrl> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenIdWithUrlResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithDigest> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedMediaAliasesWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedMediaAliasesWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedMediaAnnotationsWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedMediaAnnotationsWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:setUserAnonymous> (use wsdl2h option -g to auto-generate)

  - <tns:setUserAnonymousResponse> (use wsdl2h option -g to auto-generate)

  - <tns:setUserLanguage> (use wsdl2h option -g to auto-generate)

  - <tns:setUserLanguageResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameHook> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameHookResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameThread> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameThreadResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAlias> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextAndTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextAndTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotation> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextAndTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextAndTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaToken> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenUrl> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenUrlResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateGameHookTextWithId> (use wsdl2h option -g to auto-generate)

  - <tns:updateGameHookTextWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateGameThread> (use wsdl2h option -g to auto-generate)

  - <tns:updateGameThreadResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationLanguageWithId> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationLanguageWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationTextWithId> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationTextWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationUserIdWithId> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationUserIdWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:mediaAnnotation> (use wsdl2h option -g to auto-generate)

  - <tns:mediaToken> (use wsdl2h option -g to auto-generate)

  - <tns:mediaAlias> (use wsdl2h option -g to auto-generate)

  - <tns:user> (use wsdl2h option -g to auto-generate)

*/

} // namespace Annot

/* End of cloudservice.h */
