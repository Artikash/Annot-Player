namespace ServerSoap {
/* _serversoap.h
   Generated by wsdl2h 2.8.3 from http://annot.me/services/ServerAgentPort?wsdl and typemap.dat
   2011-10-28 05:42:27 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on _serversoap.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tns = "http://service.annot.me/"
ns1 = ""

*/

#define SOAP_NAMESPACE_OF_ns1	""
//gsoap ns1   schema namespace:	
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_tns	"http://service.annot.me/"
//gsoap tns   schema namespace:	http://service.annot.me/
//gsoap tns   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class tns__gameAnnotation.
class tns__gameAnnotation;

//  Forward declaration of class tns__gameToken.
class tns__gameToken;

//  Forward declaration of class tns__gameAlias.
class tns__gameAlias;

//  Forward declaration of class tns__mediaAnnotation.
class tns__mediaAnnotation;

//  Forward declaration of class tns__mediaToken.
class tns__mediaToken;

//  Forward declaration of class tns__mediaAlias.
class tns__mediaAlias;

//  Forward declaration of class tns__user.
class tns__user;

//  Forward declaration of class tns__blessGameAnnotationWithId.
class tns__blessGameAnnotationWithId;

//  Forward declaration of class tns__blessGameAnnotationWithIdResponse.
class tns__blessGameAnnotationWithIdResponse;

//  Forward declaration of class tns__blessMediaAnnotationWithId.
class tns__blessMediaAnnotationWithId;

//  Forward declaration of class tns__blessMediaAnnotationWithIdResponse.
class tns__blessMediaAnnotationWithIdResponse;

//  Forward declaration of class tns__chat.
class tns__chat;

//  Forward declaration of class tns__chatResponse.
class tns__chatResponse;

//  Forward declaration of class tns__getUser.
class tns__getUser;

//  Forward declaration of class tns__getUserResponse.
class tns__getUserResponse;

//  Forward declaration of class tns__isAuthorized.
class tns__isAuthorized;

//  Forward declaration of class tns__isAuthorizedResponse.
class tns__isAuthorizedResponse;

//  Forward declaration of class tns__isConnected.
class tns__isConnected;

//  Forward declaration of class tns__isConnectedResponse.
class tns__isConnectedResponse;

//  Forward declaration of class tns__login.
class tns__login;

//  Forward declaration of class tns__loginResponse.
class tns__loginResponse;

//  Forward declaration of class tns__logout.
class tns__logout;

//  Forward declaration of class tns__logoutResponse.
class tns__logoutResponse;

//  Forward declaration of class tns__selectGameAliasesWithTokenId.
class tns__selectGameAliasesWithTokenId;

//  Forward declaration of class tns__selectGameAliasesWithTokenIdResponse.
class tns__selectGameAliasesWithTokenIdResponse;

//  Forward declaration of class tns__selectGameAnnotationsWithTokenId.
class tns__selectGameAnnotationsWithTokenId;

//  Forward declaration of class tns__selectGameAnnotationsWithTokenIdResponse.
class tns__selectGameAnnotationsWithTokenIdResponse;

//  Forward declaration of class tns__selectGameTokenWithDigest.
class tns__selectGameTokenWithDigest;

//  Forward declaration of class tns__selectGameTokenWithDigestResponse.
class tns__selectGameTokenWithDigestResponse;

//  Forward declaration of class tns__selectGameTokenWithId.
class tns__selectGameTokenWithId;

//  Forward declaration of class tns__selectGameTokenWithIdResponse.
class tns__selectGameTokenWithIdResponse;

//  Forward declaration of class tns__selectMediaAliasesWithTokenId.
class tns__selectMediaAliasesWithTokenId;

//  Forward declaration of class tns__selectMediaAliasesWithTokenIdResponse.
class tns__selectMediaAliasesWithTokenIdResponse;

//  Forward declaration of class tns__selectMediaAnnotationsWithTokenId.
class tns__selectMediaAnnotationsWithTokenId;

//  Forward declaration of class tns__selectMediaAnnotationsWithTokenIdResponse.
class tns__selectMediaAnnotationsWithTokenIdResponse;

//  Forward declaration of class tns__selectMediaTokenWithDigest.
class tns__selectMediaTokenWithDigest;

//  Forward declaration of class tns__selectMediaTokenWithDigestResponse.
class tns__selectMediaTokenWithDigestResponse;

//  Forward declaration of class tns__selectMediaTokenWithId.
class tns__selectMediaTokenWithId;

//  Forward declaration of class tns__selectMediaTokenWithIdResponse.
class tns__selectMediaTokenWithIdResponse;

//  Forward declaration of class tns__selectRelatedGameAnnotationsWithTokenId.
class tns__selectRelatedGameAnnotationsWithTokenId;

//  Forward declaration of class tns__selectRelatedGameAnnotationsWithTokenIdResponse.
class tns__selectRelatedGameAnnotationsWithTokenIdResponse;

//  Forward declaration of class tns__selectRelatedMediaAnnotationsWithTokenId.
class tns__selectRelatedMediaAnnotationsWithTokenId;

//  Forward declaration of class tns__selectRelatedMediaAnnotationsWithTokenIdResponse.
class tns__selectRelatedMediaAnnotationsWithTokenIdResponse;

//  Forward declaration of class tns__setCallback.
class tns__setCallback;

//  Forward declaration of class tns__setCallbackResponse.
class tns__setCallbackResponse;

//  Forward declaration of class tns__setClientType.
class tns__setClientType;

//  Forward declaration of class tns__setClientTypeResponse.
class tns__setClientTypeResponse;

//  Forward declaration of class tns__setUserAnonymous.
class tns__setUserAnonymous;

//  Forward declaration of class tns__setUserAnonymousResponse.
class tns__setUserAnonymousResponse;

//  Forward declaration of class tns__setUserLanguage.
class tns__setUserLanguage;

//  Forward declaration of class tns__setUserLanguageResponse.
class tns__setUserLanguageResponse;

//  Forward declaration of class tns__submitGameAlias.
class tns__submitGameAlias;

//  Forward declaration of class tns__submitGameAliasResponse.
class tns__submitGameAliasResponse;

//  Forward declaration of class tns__submitGameAliasTextAndTokenDigest.
class tns__submitGameAliasTextAndTokenDigest;

//  Forward declaration of class tns__submitGameAliasTextAndTokenDigestResponse.
class tns__submitGameAliasTextAndTokenDigestResponse;

//  Forward declaration of class tns__submitGameAliasTextWithTokenId.
class tns__submitGameAliasTextWithTokenId;

//  Forward declaration of class tns__submitGameAliasTextWithTokenIdResponse.
class tns__submitGameAliasTextWithTokenIdResponse;

//  Forward declaration of class tns__submitGameAnnotation.
class tns__submitGameAnnotation;

//  Forward declaration of class tns__submitGameAnnotationResponse.
class tns__submitGameAnnotationResponse;

//  Forward declaration of class tns__submitGameAnnotationTextAndTokenDigest.
class tns__submitGameAnnotationTextAndTokenDigest;

//  Forward declaration of class tns__submitGameAnnotationTextAndTokenDigestResponse.
class tns__submitGameAnnotationTextAndTokenDigestResponse;

//  Forward declaration of class tns__submitGameAnnotationTextWithTokenId.
class tns__submitGameAnnotationTextWithTokenId;

//  Forward declaration of class tns__submitGameAnnotationTextWithTokenIdResponse.
class tns__submitGameAnnotationTextWithTokenIdResponse;

//  Forward declaration of class tns__submitGameToken.
class tns__submitGameToken;

//  Forward declaration of class tns__submitGameTokenResponse.
class tns__submitGameTokenResponse;

//  Forward declaration of class tns__submitGameTokenDigest.
class tns__submitGameTokenDigest;

//  Forward declaration of class tns__submitGameTokenDigestResponse.
class tns__submitGameTokenDigestResponse;

//  Forward declaration of class tns__submitMediaAlias.
class tns__submitMediaAlias;

//  Forward declaration of class tns__submitMediaAliasResponse.
class tns__submitMediaAliasResponse;

//  Forward declaration of class tns__submitMediaAliasTextAndTokenDigest.
class tns__submitMediaAliasTextAndTokenDigest;

//  Forward declaration of class tns__submitMediaAliasTextAndTokenDigestResponse.
class tns__submitMediaAliasTextAndTokenDigestResponse;

//  Forward declaration of class tns__submitMediaAliasTextWithTokenId.
class tns__submitMediaAliasTextWithTokenId;

//  Forward declaration of class tns__submitMediaAliasTextWithTokenIdResponse.
class tns__submitMediaAliasTextWithTokenIdResponse;

//  Forward declaration of class tns__submitMediaAnnotation.
class tns__submitMediaAnnotation;

//  Forward declaration of class tns__submitMediaAnnotationResponse.
class tns__submitMediaAnnotationResponse;

//  Forward declaration of class tns__submitMediaAnnotationTextAndTokenDigest.
class tns__submitMediaAnnotationTextAndTokenDigest;

//  Forward declaration of class tns__submitMediaAnnotationTextAndTokenDigestResponse.
class tns__submitMediaAnnotationTextAndTokenDigestResponse;

//  Forward declaration of class tns__submitMediaAnnotationTextWithTokenId.
class tns__submitMediaAnnotationTextWithTokenId;

//  Forward declaration of class tns__submitMediaAnnotationTextWithTokenIdResponse.
class tns__submitMediaAnnotationTextWithTokenIdResponse;

//  Forward declaration of class tns__submitMediaToken.
class tns__submitMediaToken;

//  Forward declaration of class tns__submitMediaTokenResponse.
class tns__submitMediaTokenResponse;

//  Forward declaration of class tns__submitMediaTokenDigest.
class tns__submitMediaTokenDigest;

//  Forward declaration of class tns__submitMediaTokenDigestResponse.
class tns__submitMediaTokenDigestResponse;

//  Forward declaration of class tns__updateGameAnnotationTextWithId.
class tns__updateGameAnnotationTextWithId;

//  Forward declaration of class tns__updateGameAnnotationTextWithIdResponse.
class tns__updateGameAnnotationTextWithIdResponse;

//  Forward declaration of class tns__updateMediaAnnotationTextWithId.
class tns__updateMediaAnnotationTextWithId;

//  Forward declaration of class tns__updateMediaAnnotationTextWithIdResponse.
class tns__updateMediaAnnotationTextWithIdResponse;

//  Forward declaration of class tns__visitGameTokenWithId.
class tns__visitGameTokenWithId;

//  Forward declaration of class tns__visitGameTokenWithIdResponse.
class tns__visitGameTokenWithIdResponse;

//  Forward declaration of class tns__visitMediaTokenWithId.
class tns__visitMediaTokenWithId;

//  Forward declaration of class tns__visitMediaTokenWithIdResponse.
class tns__visitMediaTokenWithIdResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/// "http://service.annot.me/":gameAnnotation is a complexType.
class tns__gameAnnotation
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element pos of type xs:long.
    LONG64                               pos                            1;	///< Required element.
/// Element posType of type xs:int.
    int                                  posType                        1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element userAlias of type xs:string.
    std::string*                         userAlias                      0;	///< Optional element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":gameToken is a complexType.
class tns__gameToken
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element visitedCount of type xs:int.
    int                                  visitedCount                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":gameAlias is a complexType.
class tns__gameAlias
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":mediaAnnotation is a complexType.
class tns__mediaAnnotation
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element pos of type xs:long.
    LONG64                               pos                            1;	///< Required element.
/// Element posType of type xs:int.
    int                                  posType                        1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element userAlias of type xs:string.
    std::string*                         userAlias                      0;	///< Optional element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":mediaToken is a complexType.
class tns__mediaToken
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element visitedCount of type xs:int.
    int                                  visitedCount                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":mediaAlias is a complexType.
class tns__mediaAlias
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element digest of type xs:string.
    std::string*                         digest                         0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element userId of type xs:long.
    LONG64                               userId                         1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element text of type xs:string.
    std::string*                         text                           0;	///< Optional element.
/// Element tokenId of type xs:long.
    LONG64                               tokenId                        1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element updateTime of type xs:long.
    LONG64                               updateTime                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":user is a complexType.
class tns__user
{ public:
/// Element blessedCount of type xs:int.
    int                                  blessedCount                   1;	///< Required element.
/// Element blockedCount of type xs:int.
    int                                  blockedCount                   1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element cursedCount of type xs:int.
    int                                  cursedCount                    1;	///< Required element.
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// Element flags of type xs:long.
    LONG64                               flags                          1;	///< Required element.
/// Element groupId of type xs:long.
    LONG64                               groupId                        1;	///< Required element.
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element language of type xs:int.
    int                                  language                       1;	///< Required element.
/// Element loginTime of type xs:long.
    LONG64                               loginTime                      1;	///< Required element.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Optional element.
/// Element nickname of type xs:string.
    std::string*                         nickname                       0;	///< Optional element.
/// Element password of type xs:string.
    std::string*                         password                       0;	///< Optional element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessGameAnnotationWithId is a complexType.
class tns__blessGameAnnotationWithId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessGameAnnotationWithIdResponse is a complexType.
class tns__blessGameAnnotationWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaAnnotationWithId is a complexType.
class tns__blessMediaAnnotationWithId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":blessMediaAnnotationWithIdResponse is a complexType.
class tns__blessMediaAnnotationWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":chat is a complexType.
class tns__chat
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":chatResponse is a complexType.
class tns__chatResponse
{ public:
/// Element return of type xs:string.
    std::string*                         return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":getUser is a complexType.
class tns__getUser
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":getUserResponse is a complexType.
class tns__getUserResponse
{ public:
/// Element return of type "http://service.annot.me/":user.
    tns__user*                           return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isAuthorized is a complexType.
class tns__isAuthorized
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isAuthorizedResponse is a complexType.
class tns__isAuthorizedResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isConnected is a complexType.
class tns__isConnected
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":isConnectedResponse is a complexType.
class tns__isConnectedResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":login is a complexType.
class tns__login
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:string.
    std::string*                         arg1                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":loginResponse is a complexType.
class tns__loginResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":logout is a complexType.
class tns__logout
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":logoutResponse is a complexType.
class tns__logoutResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameAliasesWithTokenId is a complexType.
class tns__selectGameAliasesWithTokenId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameAliasesWithTokenIdResponse is a complexType.
class tns__selectGameAliasesWithTokenIdResponse
{ public:
/// Vector of tns__gameAlias* with length 0..unbounded
    std::vector<tns__gameAlias*        > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameAnnotationsWithTokenId is a complexType.
class tns__selectGameAnnotationsWithTokenId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameAnnotationsWithTokenIdResponse is a complexType.
class tns__selectGameAnnotationsWithTokenIdResponse
{ public:
/// Vector of tns__gameAnnotation* with length 0..unbounded
    std::vector<tns__gameAnnotation*   > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameTokenWithDigest is a complexType.
class tns__selectGameTokenWithDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameTokenWithDigestResponse is a complexType.
class tns__selectGameTokenWithDigestResponse
{ public:
/// Element return of type "http://service.annot.me/":gameToken.
    tns__gameToken*                      return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameTokenWithId is a complexType.
class tns__selectGameTokenWithId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectGameTokenWithIdResponse is a complexType.
class tns__selectGameTokenWithIdResponse
{ public:
/// Element return of type "http://service.annot.me/":gameToken.
    tns__gameToken*                      return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAliasesWithTokenId is a complexType.
class tns__selectMediaAliasesWithTokenId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAliasesWithTokenIdResponse is a complexType.
class tns__selectMediaAliasesWithTokenIdResponse
{ public:
/// Vector of tns__mediaAlias* with length 0..unbounded
    std::vector<tns__mediaAlias*       > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAnnotationsWithTokenId is a complexType.
class tns__selectMediaAnnotationsWithTokenId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaAnnotationsWithTokenIdResponse is a complexType.
class tns__selectMediaAnnotationsWithTokenIdResponse
{ public:
/// Vector of tns__mediaAnnotation* with length 0..unbounded
    std::vector<tns__mediaAnnotation*  > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithDigest is a complexType.
class tns__selectMediaTokenWithDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithDigestResponse is a complexType.
class tns__selectMediaTokenWithDigestResponse
{ public:
/// Element return of type "http://service.annot.me/":mediaToken.
    tns__mediaToken*                     return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithId is a complexType.
class tns__selectMediaTokenWithId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectMediaTokenWithIdResponse is a complexType.
class tns__selectMediaTokenWithIdResponse
{ public:
/// Element return of type "http://service.annot.me/":mediaToken.
    tns__mediaToken*                     return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedGameAnnotationsWithTokenId is a complexType.
class tns__selectRelatedGameAnnotationsWithTokenId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedGameAnnotationsWithTokenIdResponse is a complexType.
class tns__selectRelatedGameAnnotationsWithTokenIdResponse
{ public:
/// Vector of tns__gameAnnotation* with length 0..unbounded
    std::vector<tns__gameAnnotation*   > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenId is a complexType.
class tns__selectRelatedMediaAnnotationsWithTokenId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenIdResponse is a complexType.
class tns__selectRelatedMediaAnnotationsWithTokenIdResponse
{ public:
/// Vector of tns__mediaAnnotation* with length 0..unbounded
    std::vector<tns__mediaAnnotation*  > return_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setCallback is a complexType.
class tns__setCallback
{ public:
/// Element arg0 of type xs:int.
    int                                  arg0                           1;	///< Required element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setCallbackResponse is a complexType.
class tns__setCallbackResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setClientType is a complexType.
class tns__setClientType
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setClientTypeResponse is a complexType.
class tns__setClientTypeResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserAnonymous is a complexType.
class tns__setUserAnonymous
{ public:
/// Element arg0 of type xs:boolean.
    bool                                 arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserAnonymousResponse is a complexType.
class tns__setUserAnonymousResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserLanguage is a complexType.
class tns__setUserLanguage
{ public:
/// Element arg0 of type xs:int.
    int                                  arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":setUserLanguageResponse is a complexType.
class tns__setUserLanguageResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAlias is a complexType.
class tns__submitGameAlias
{ public:
/// Element arg0 of type "http://service.annot.me/":gameAlias.
    tns__gameAlias*                      arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAliasResponse is a complexType.
class tns__submitGameAliasResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAliasTextAndTokenDigest is a complexType.
class tns__submitGameAliasTextAndTokenDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:int.
    int                                  arg1                           1;	///< Required element.
/// Element arg2 of type xs:string.
    std::string*                         arg2                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAliasTextAndTokenDigestResponse is a complexType.
class tns__submitGameAliasTextAndTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAliasTextWithTokenId is a complexType.
class tns__submitGameAliasTextWithTokenId
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:int.
    int                                  arg1                           1;	///< Required element.
/// Element arg2 of type xs:long.
    LONG64                               arg2                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAliasTextWithTokenIdResponse is a complexType.
class tns__submitGameAliasTextWithTokenIdResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAnnotation is a complexType.
class tns__submitGameAnnotation
{ public:
/// Element arg0 of type "http://service.annot.me/":gameAnnotation.
    tns__gameAnnotation*                 arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAnnotationResponse is a complexType.
class tns__submitGameAnnotationResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAnnotationTextAndTokenDigest is a complexType.
class tns__submitGameAnnotationTextAndTokenDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// Element arg2 of type xs:int.
    int                                  arg2                           1;	///< Required element.
/// Element arg3 of type xs:string.
    std::string*                         arg3                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAnnotationTextAndTokenDigestResponse is a complexType.
class tns__submitGameAnnotationTextAndTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAnnotationTextWithTokenId is a complexType.
class tns__submitGameAnnotationTextWithTokenId
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// Element arg2 of type xs:int.
    int                                  arg2                           1;	///< Required element.
/// Element arg3 of type xs:long.
    LONG64                               arg3                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameAnnotationTextWithTokenIdResponse is a complexType.
class tns__submitGameAnnotationTextWithTokenIdResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameToken is a complexType.
class tns__submitGameToken
{ public:
/// Element arg0 of type "http://service.annot.me/":gameToken.
    tns__gameToken*                      arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameTokenResponse is a complexType.
class tns__submitGameTokenResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameTokenDigest is a complexType.
class tns__submitGameTokenDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitGameTokenDigestResponse is a complexType.
class tns__submitGameTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAlias is a complexType.
class tns__submitMediaAlias
{ public:
/// Element arg0 of type "http://service.annot.me/":mediaAlias.
    tns__mediaAlias*                     arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasResponse is a complexType.
class tns__submitMediaAliasResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextAndTokenDigest is a complexType.
class tns__submitMediaAliasTextAndTokenDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:int.
    int                                  arg1                           1;	///< Required element.
/// Element arg2 of type xs:string.
    std::string*                         arg2                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextAndTokenDigestResponse is a complexType.
class tns__submitMediaAliasTextAndTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextWithTokenId is a complexType.
class tns__submitMediaAliasTextWithTokenId
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:int.
    int                                  arg1                           1;	///< Required element.
/// Element arg2 of type xs:long.
    LONG64                               arg2                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAliasTextWithTokenIdResponse is a complexType.
class tns__submitMediaAliasTextWithTokenIdResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotation is a complexType.
class tns__submitMediaAnnotation
{ public:
/// Element arg0 of type "http://service.annot.me/":mediaAnnotation.
    tns__mediaAnnotation*                arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationResponse is a complexType.
class tns__submitMediaAnnotationResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigest is a complexType.
class tns__submitMediaAnnotationTextAndTokenDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// Element arg2 of type xs:int.
    int                                  arg2                           1;	///< Required element.
/// Element arg3 of type xs:string.
    std::string*                         arg3                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigestResponse is a complexType.
class tns__submitMediaAnnotationTextAndTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextWithTokenId is a complexType.
class tns__submitMediaAnnotationTextWithTokenId
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// Element arg2 of type xs:int.
    int                                  arg2                           1;	///< Required element.
/// Element arg3 of type xs:long.
    LONG64                               arg3                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaAnnotationTextWithTokenIdResponse is a complexType.
class tns__submitMediaAnnotationTextWithTokenIdResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaToken is a complexType.
class tns__submitMediaToken
{ public:
/// Element arg0 of type "http://service.annot.me/":mediaToken.
    tns__mediaToken*                     arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenResponse is a complexType.
class tns__submitMediaTokenResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenDigest is a complexType.
class tns__submitMediaTokenDigest
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":submitMediaTokenDigestResponse is a complexType.
class tns__submitMediaTokenDigestResponse
{ public:
/// Element return of type xs:long.
    LONG64                               return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateGameAnnotationTextWithId is a complexType.
class tns__updateGameAnnotationTextWithId
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateGameAnnotationTextWithIdResponse is a complexType.
class tns__updateGameAnnotationTextWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationTextWithId is a complexType.
class tns__updateMediaAnnotationTextWithId
{ public:
/// Element arg0 of type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element arg1 of type xs:long.
    LONG64                               arg1                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":updateMediaAnnotationTextWithIdResponse is a complexType.
class tns__updateMediaAnnotationTextWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":visitGameTokenWithId is a complexType.
class tns__visitGameTokenWithId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":visitGameTokenWithIdResponse is a complexType.
class tns__visitGameTokenWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":visitMediaTokenWithId is a complexType.
class tns__visitMediaTokenWithId
{ public:
/// Element arg0 of type xs:long.
    LONG64                               arg0                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.annot.me/":visitMediaTokenWithIdResponse is a complexType.
class tns__visitMediaTokenWithIdResponse
{ public:
/// Element return of type xs:boolean.
    bool                                 return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://service.annot.me/":blessGameAnnotationWithId of type "http://service.annot.me/":blessGameAnnotationWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessGameAnnotationWithIdResponse of type "http://service.annot.me/":blessGameAnnotationWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaAnnotationWithId of type "http://service.annot.me/":blessMediaAnnotationWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":blessMediaAnnotationWithIdResponse of type "http://service.annot.me/":blessMediaAnnotationWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":chat of type "http://service.annot.me/":chat.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":chatResponse of type "http://service.annot.me/":chatResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":getUser of type "http://service.annot.me/":getUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":getUserResponse of type "http://service.annot.me/":getUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isAuthorized of type "http://service.annot.me/":isAuthorized.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isAuthorizedResponse of type "http://service.annot.me/":isAuthorizedResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isConnected of type "http://service.annot.me/":isConnected.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":isConnectedResponse of type "http://service.annot.me/":isConnectedResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":login of type "http://service.annot.me/":login.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":loginResponse of type "http://service.annot.me/":loginResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":logout of type "http://service.annot.me/":logout.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":logoutResponse of type "http://service.annot.me/":logoutResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameAnnotationsWithTokenId of type "http://service.annot.me/":selectGameAnnotationsWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameAnnotationsWithTokenIdResponse of type "http://service.annot.me/":selectGameAnnotationsWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameAliasesWithTokenId of type "http://service.annot.me/":selectGameAliasesWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameAliasesWithTokenIdResponse of type "http://service.annot.me/":selectGameAliasesWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameTokenWithDigest of type "http://service.annot.me/":selectGameTokenWithDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameTokenWithDigestResponse of type "http://service.annot.me/":selectGameTokenWithDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameTokenWithId of type "http://service.annot.me/":selectGameTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectGameTokenWithIdResponse of type "http://service.annot.me/":selectGameTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAnnotationsWithTokenId of type "http://service.annot.me/":selectMediaAnnotationsWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAnnotationsWithTokenIdResponse of type "http://service.annot.me/":selectMediaAnnotationsWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAliasesWithTokenId of type "http://service.annot.me/":selectMediaAliasesWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaAliasesWithTokenIdResponse of type "http://service.annot.me/":selectMediaAliasesWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithDigest of type "http://service.annot.me/":selectMediaTokenWithDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithDigestResponse of type "http://service.annot.me/":selectMediaTokenWithDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithId of type "http://service.annot.me/":selectMediaTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectMediaTokenWithIdResponse of type "http://service.annot.me/":selectMediaTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedGameAnnotationsWithTokenId of type "http://service.annot.me/":selectRelatedGameAnnotationsWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedGameAnnotationsWithTokenIdResponse of type "http://service.annot.me/":selectRelatedGameAnnotationsWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenId of type "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenIdResponse of type "http://service.annot.me/":selectRelatedMediaAnnotationsWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setCallback of type "http://service.annot.me/":setCallback.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setCallbackResponse of type "http://service.annot.me/":setCallbackResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setClientType of type "http://service.annot.me/":setClientType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setClientTypeResponse of type "http://service.annot.me/":setClientTypeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserAnonymous of type "http://service.annot.me/":setUserAnonymous.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserAnonymousResponse of type "http://service.annot.me/":setUserAnonymousResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserLanguage of type "http://service.annot.me/":setUserLanguage.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":setUserLanguageResponse of type "http://service.annot.me/":setUserLanguageResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAlias of type "http://service.annot.me/":submitGameAlias.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAliasResponse of type "http://service.annot.me/":submitGameAliasResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAliasTextAndTokenDigest of type "http://service.annot.me/":submitGameAliasTextAndTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAliasTextAndTokenDigestResponse of type "http://service.annot.me/":submitGameAliasTextAndTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAliasTextWithTokenId of type "http://service.annot.me/":submitGameAliasTextWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAliasTextWithTokenIdResponse of type "http://service.annot.me/":submitGameAliasTextWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAnnotation of type "http://service.annot.me/":submitGameAnnotation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAnnotationResponse of type "http://service.annot.me/":submitGameAnnotationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAnnotationTextAndTokenDigest of type "http://service.annot.me/":submitGameAnnotationTextAndTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAnnotationTextAndTokenDigestResponse of type "http://service.annot.me/":submitGameAnnotationTextAndTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAnnotationTextWithTokenId of type "http://service.annot.me/":submitGameAnnotationTextWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameAnnotationTextWithTokenIdResponse of type "http://service.annot.me/":submitGameAnnotationTextWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameToken of type "http://service.annot.me/":submitGameToken.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameTokenResponse of type "http://service.annot.me/":submitGameTokenResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameTokenDigest of type "http://service.annot.me/":submitGameTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitGameTokenDigestResponse of type "http://service.annot.me/":submitGameTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAlias of type "http://service.annot.me/":submitMediaAlias.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasResponse of type "http://service.annot.me/":submitMediaAliasResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextAndTokenDigest of type "http://service.annot.me/":submitMediaAliasTextAndTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextAndTokenDigestResponse of type "http://service.annot.me/":submitMediaAliasTextAndTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextWithTokenId of type "http://service.annot.me/":submitMediaAliasTextWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAliasTextWithTokenIdResponse of type "http://service.annot.me/":submitMediaAliasTextWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotation of type "http://service.annot.me/":submitMediaAnnotation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationResponse of type "http://service.annot.me/":submitMediaAnnotationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigest of type "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigestResponse of type "http://service.annot.me/":submitMediaAnnotationTextAndTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextWithTokenId of type "http://service.annot.me/":submitMediaAnnotationTextWithTokenId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaAnnotationTextWithTokenIdResponse of type "http://service.annot.me/":submitMediaAnnotationTextWithTokenIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaToken of type "http://service.annot.me/":submitMediaToken.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenResponse of type "http://service.annot.me/":submitMediaTokenResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenDigest of type "http://service.annot.me/":submitMediaTokenDigest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":submitMediaTokenDigestResponse of type "http://service.annot.me/":submitMediaTokenDigestResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateGameAnnotationTextWithId of type "http://service.annot.me/":updateGameAnnotationTextWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateGameAnnotationTextWithIdResponse of type "http://service.annot.me/":updateGameAnnotationTextWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationTextWithId of type "http://service.annot.me/":updateMediaAnnotationTextWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":updateMediaAnnotationTextWithIdResponse of type "http://service.annot.me/":updateMediaAnnotationTextWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":visitGameTokenWithId of type "http://service.annot.me/":visitGameTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":visitGameTokenWithIdResponse of type "http://service.annot.me/":visitGameTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":visitMediaTokenWithId of type "http://service.annot.me/":visitMediaTokenWithId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":visitMediaTokenWithIdResponse of type "http://service.annot.me/":visitMediaTokenWithIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":gameAnnotation of type "http://service.annot.me/":gameAnnotation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":gameToken of type "http://service.annot.me/":gameToken.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":gameAlias of type "http://service.annot.me/":gameAlias.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":mediaAnnotation of type "http://service.annot.me/":mediaAnnotation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":mediaToken of type "http://service.annot.me/":mediaToken.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":mediaAlias of type "http://service.annot.me/":mediaAlias.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://service.annot.me/":user of type "http://service.annot.me/":user.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://service.annot.me/                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap tns  service name:	ServerAgentServiceSoapBinding 
//gsoap tns  service type:	ServerAgent 
//gsoap tns  service port:	http://annot.me/services/ServerAgentPort 
//gsoap tns  service namespace:	http://service.annot.me/ 
//gsoap tns  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage ServerAgentService Definitions

@section ServerAgentService_bindings Service Bindings

  - @ref ServerAgentServiceSoapBinding

@section ServerAgentService_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page ServerAgentServiceSoapBinding Binding "ServerAgentServiceSoapBinding"

@section ServerAgentServiceSoapBinding_operations Operations of Binding  "ServerAgentServiceSoapBinding"

  - @ref __tns__blessGameAnnotationWithId

  - @ref __tns__blessMediaAnnotationWithId

  - @ref __tns__chat

  - @ref __tns__getUser

  - @ref __tns__isAuthorized

  - @ref __tns__isConnected

  - @ref __tns__login

  - @ref __tns__logout

  - @ref __tns__selectGameAliasesWithTokenId

  - @ref __tns__selectGameAnnotationsWithTokenId

  - @ref __tns__selectGameTokenWithDigest

  - @ref __tns__selectGameTokenWithId

  - @ref __tns__selectMediaAliasesWithTokenId

  - @ref __tns__selectMediaAnnotationsWithTokenId

  - @ref __tns__selectMediaTokenWithDigest

  - @ref __tns__selectMediaTokenWithId

  - @ref __tns__selectRelatedGameAnnotationsWithTokenId

  - @ref __tns__selectRelatedMediaAnnotationsWithTokenId

  - @ref __tns__setCallback

  - @ref __tns__setClientType

  - @ref __tns__setUserAnonymous

  - @ref __tns__setUserLanguage

  - @ref __tns__submitGameAlias

  - @ref __tns__submitGameAliasTextAndTokenDigest

  - @ref __tns__submitGameAliasTextWithTokenId

  - @ref __tns__submitGameAnnotation

  - @ref __tns__submitGameAnnotationTextAndTokenDigest

  - @ref __tns__submitGameAnnotationTextWithTokenId

  - @ref __tns__submitGameToken

  - @ref __tns__submitGameTokenDigest

  - @ref __tns__submitMediaAlias

  - @ref __tns__submitMediaAliasTextAndTokenDigest

  - @ref __tns__submitMediaAliasTextWithTokenId

  - @ref __tns__submitMediaAnnotation

  - @ref __tns__submitMediaAnnotationTextAndTokenDigest

  - @ref __tns__submitMediaAnnotationTextWithTokenId

  - @ref __tns__submitMediaToken

  - @ref __tns__submitMediaTokenDigest

  - @ref __tns__updateGameAnnotationTextWithId

  - @ref __tns__updateMediaAnnotationTextWithId

  - @ref __tns__visitGameTokenWithId

  - @ref __tns__visitMediaTokenWithId

@section ServerAgentServiceSoapBinding_ports Endpoints of Binding  "ServerAgentServiceSoapBinding"

  - http://annot.me/services/ServerAgentPort

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ServerAgentServiceSoapBinding                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blessGameAnnotationWithId                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blessGameAnnotationWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blessGameAnnotationWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blessGameAnnotationWithId*     tns__blessGameAnnotationWithId_,
    // response parameters:
    tns__blessGameAnnotationWithIdResponse* tns__blessGameAnnotationWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blessGameAnnotationWithId(
    struct soap *soap,
    // request parameters:
    tns__blessGameAnnotationWithId*     tns__blessGameAnnotationWithId_,
    // response parameters:
    tns__blessGameAnnotationWithIdResponse* tns__blessGameAnnotationWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blessGameAnnotationWithId document
//gsoap tns  service method-encoding:	blessGameAnnotationWithId literal
//gsoap tns  service method-action:	blessGameAnnotationWithId ""
int __tns__blessGameAnnotationWithId(
    tns__blessGameAnnotationWithId*     tns__blessGameAnnotationWithId_,	///< Request parameter
    tns__blessGameAnnotationWithIdResponse* tns__blessGameAnnotationWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__blessMediaAnnotationWithId                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__blessMediaAnnotationWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__blessMediaAnnotationWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__blessMediaAnnotationWithId*    tns__blessMediaAnnotationWithId_,
    // response parameters:
    tns__blessMediaAnnotationWithIdResponse* tns__blessMediaAnnotationWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__blessMediaAnnotationWithId(
    struct soap *soap,
    // request parameters:
    tns__blessMediaAnnotationWithId*    tns__blessMediaAnnotationWithId_,
    // response parameters:
    tns__blessMediaAnnotationWithIdResponse* tns__blessMediaAnnotationWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	blessMediaAnnotationWithId document
//gsoap tns  service method-encoding:	blessMediaAnnotationWithId literal
//gsoap tns  service method-action:	blessMediaAnnotationWithId ""
int __tns__blessMediaAnnotationWithId(
    tns__blessMediaAnnotationWithId*    tns__blessMediaAnnotationWithId_,	///< Request parameter
    tns__blessMediaAnnotationWithIdResponse* tns__blessMediaAnnotationWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__chat                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__chat" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__chat(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__chat*                          tns__chat_,
    // response parameters:
    tns__chatResponse*                  tns__chatResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__chat(
    struct soap *soap,
    // request parameters:
    tns__chat*                          tns__chat_,
    // response parameters:
    tns__chatResponse*                  tns__chatResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	chat document
//gsoap tns  service method-encoding:	chat literal
//gsoap tns  service method-action:	chat ""
int __tns__chat(
    tns__chat*                          tns__chat_,	///< Request parameter
    tns__chatResponse*                  tns__chatResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__getUser                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__getUser" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__getUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__getUser*                       tns__getUser_,
    // response parameters:
    tns__getUserResponse*               tns__getUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__getUser(
    struct soap *soap,
    // request parameters:
    tns__getUser*                       tns__getUser_,
    // response parameters:
    tns__getUserResponse*               tns__getUserResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	getUser document
//gsoap tns  service method-encoding:	getUser literal
//gsoap tns  service method-action:	getUser ""
int __tns__getUser(
    tns__getUser*                       tns__getUser_,	///< Request parameter
    tns__getUserResponse*               tns__getUserResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__isAuthorized                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__isAuthorized" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__isAuthorized(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__isAuthorized*                  tns__isAuthorized_,
    // response parameters:
    tns__isAuthorizedResponse*          tns__isAuthorizedResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__isAuthorized(
    struct soap *soap,
    // request parameters:
    tns__isAuthorized*                  tns__isAuthorized_,
    // response parameters:
    tns__isAuthorizedResponse*          tns__isAuthorizedResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	isAuthorized document
//gsoap tns  service method-encoding:	isAuthorized literal
//gsoap tns  service method-action:	isAuthorized ""
int __tns__isAuthorized(
    tns__isAuthorized*                  tns__isAuthorized_,	///< Request parameter
    tns__isAuthorizedResponse*          tns__isAuthorizedResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__isConnected                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__isConnected" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__isConnected(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__isConnected*                   tns__isConnected_,
    // response parameters:
    tns__isConnectedResponse*           tns__isConnectedResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__isConnected(
    struct soap *soap,
    // request parameters:
    tns__isConnected*                   tns__isConnected_,
    // response parameters:
    tns__isConnectedResponse*           tns__isConnectedResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	isConnected document
//gsoap tns  service method-encoding:	isConnected literal
//gsoap tns  service method-action:	isConnected ""
int __tns__isConnected(
    tns__isConnected*                   tns__isConnected_,	///< Request parameter
    tns__isConnectedResponse*           tns__isConnectedResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__login                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__login" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__login*                         tns__login_,
    // response parameters:
    tns__loginResponse*                 tns__loginResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__login(
    struct soap *soap,
    // request parameters:
    tns__login*                         tns__login_,
    // response parameters:
    tns__loginResponse*                 tns__loginResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	login document
//gsoap tns  service method-encoding:	login literal
//gsoap tns  service method-action:	login ""
int __tns__login(
    tns__login*                         tns__login_,	///< Request parameter
    tns__loginResponse*                 tns__loginResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__logout                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__logout" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__logout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__logout*                        tns__logout_,
    // response parameters:
    tns__logoutResponse*                tns__logoutResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__logout(
    struct soap *soap,
    // request parameters:
    tns__logout*                        tns__logout_,
    // response parameters:
    tns__logoutResponse*                tns__logoutResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	logout document
//gsoap tns  service method-encoding:	logout literal
//gsoap tns  service method-action:	logout ""
int __tns__logout(
    tns__logout*                        tns__logout_,	///< Request parameter
    tns__logoutResponse*                tns__logoutResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameAliasesWithTokenId                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameAliasesWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameAliasesWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameAliasesWithTokenId*  tns__selectGameAliasesWithTokenId_,
    // response parameters:
    tns__selectGameAliasesWithTokenIdResponse* tns__selectGameAliasesWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameAliasesWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectGameAliasesWithTokenId*  tns__selectGameAliasesWithTokenId_,
    // response parameters:
    tns__selectGameAliasesWithTokenIdResponse* tns__selectGameAliasesWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameAliasesWithTokenId document
//gsoap tns  service method-encoding:	selectGameAliasesWithTokenId literal
//gsoap tns  service method-action:	selectGameAliasesWithTokenId ""
int __tns__selectGameAliasesWithTokenId(
    tns__selectGameAliasesWithTokenId*  tns__selectGameAliasesWithTokenId_,	///< Request parameter
    tns__selectGameAliasesWithTokenIdResponse* tns__selectGameAliasesWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameAnnotationsWithTokenId                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameAnnotationsWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameAnnotationsWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameAnnotationsWithTokenId* tns__selectGameAnnotationsWithTokenId_,
    // response parameters:
    tns__selectGameAnnotationsWithTokenIdResponse* tns__selectGameAnnotationsWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameAnnotationsWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectGameAnnotationsWithTokenId* tns__selectGameAnnotationsWithTokenId_,
    // response parameters:
    tns__selectGameAnnotationsWithTokenIdResponse* tns__selectGameAnnotationsWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameAnnotationsWithTokenId document
//gsoap tns  service method-encoding:	selectGameAnnotationsWithTokenId literal
//gsoap tns  service method-action:	selectGameAnnotationsWithTokenId ""
int __tns__selectGameAnnotationsWithTokenId(
    tns__selectGameAnnotationsWithTokenId* tns__selectGameAnnotationsWithTokenId_,	///< Request parameter
    tns__selectGameAnnotationsWithTokenIdResponse* tns__selectGameAnnotationsWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameTokenWithDigest                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameTokenWithDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameTokenWithDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameTokenWithDigest*     tns__selectGameTokenWithDigest_,
    // response parameters:
    tns__selectGameTokenWithDigestResponse* tns__selectGameTokenWithDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameTokenWithDigest(
    struct soap *soap,
    // request parameters:
    tns__selectGameTokenWithDigest*     tns__selectGameTokenWithDigest_,
    // response parameters:
    tns__selectGameTokenWithDigestResponse* tns__selectGameTokenWithDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameTokenWithDigest document
//gsoap tns  service method-encoding:	selectGameTokenWithDigest literal
//gsoap tns  service method-action:	selectGameTokenWithDigest ""
int __tns__selectGameTokenWithDigest(
    tns__selectGameTokenWithDigest*     tns__selectGameTokenWithDigest_,	///< Request parameter
    tns__selectGameTokenWithDigestResponse* tns__selectGameTokenWithDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectGameTokenWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectGameTokenWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectGameTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectGameTokenWithId*         tns__selectGameTokenWithId_,
    // response parameters:
    tns__selectGameTokenWithIdResponse* tns__selectGameTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectGameTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__selectGameTokenWithId*         tns__selectGameTokenWithId_,
    // response parameters:
    tns__selectGameTokenWithIdResponse* tns__selectGameTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectGameTokenWithId document
//gsoap tns  service method-encoding:	selectGameTokenWithId literal
//gsoap tns  service method-action:	selectGameTokenWithId ""
int __tns__selectGameTokenWithId(
    tns__selectGameTokenWithId*         tns__selectGameTokenWithId_,	///< Request parameter
    tns__selectGameTokenWithIdResponse* tns__selectGameTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaAliasesWithTokenId                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaAliasesWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaAliasesWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaAliasesWithTokenId* tns__selectMediaAliasesWithTokenId_,
    // response parameters:
    tns__selectMediaAliasesWithTokenIdResponse* tns__selectMediaAliasesWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaAliasesWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectMediaAliasesWithTokenId* tns__selectMediaAliasesWithTokenId_,
    // response parameters:
    tns__selectMediaAliasesWithTokenIdResponse* tns__selectMediaAliasesWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaAliasesWithTokenId document
//gsoap tns  service method-encoding:	selectMediaAliasesWithTokenId literal
//gsoap tns  service method-action:	selectMediaAliasesWithTokenId ""
int __tns__selectMediaAliasesWithTokenId(
    tns__selectMediaAliasesWithTokenId* tns__selectMediaAliasesWithTokenId_,	///< Request parameter
    tns__selectMediaAliasesWithTokenIdResponse* tns__selectMediaAliasesWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaAnnotationsWithTokenId                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaAnnotationsWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaAnnotationsWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaAnnotationsWithTokenId* tns__selectMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectMediaAnnotationsWithTokenIdResponse* tns__selectMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaAnnotationsWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectMediaAnnotationsWithTokenId* tns__selectMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectMediaAnnotationsWithTokenIdResponse* tns__selectMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaAnnotationsWithTokenId document
//gsoap tns  service method-encoding:	selectMediaAnnotationsWithTokenId literal
//gsoap tns  service method-action:	selectMediaAnnotationsWithTokenId ""
int __tns__selectMediaAnnotationsWithTokenId(
    tns__selectMediaAnnotationsWithTokenId* tns__selectMediaAnnotationsWithTokenId_,	///< Request parameter
    tns__selectMediaAnnotationsWithTokenIdResponse* tns__selectMediaAnnotationsWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaTokenWithDigest                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaTokenWithDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaTokenWithDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaTokenWithDigest*    tns__selectMediaTokenWithDigest_,
    // response parameters:
    tns__selectMediaTokenWithDigestResponse* tns__selectMediaTokenWithDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaTokenWithDigest(
    struct soap *soap,
    // request parameters:
    tns__selectMediaTokenWithDigest*    tns__selectMediaTokenWithDigest_,
    // response parameters:
    tns__selectMediaTokenWithDigestResponse* tns__selectMediaTokenWithDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaTokenWithDigest document
//gsoap tns  service method-encoding:	selectMediaTokenWithDigest literal
//gsoap tns  service method-action:	selectMediaTokenWithDigest ""
int __tns__selectMediaTokenWithDigest(
    tns__selectMediaTokenWithDigest*    tns__selectMediaTokenWithDigest_,	///< Request parameter
    tns__selectMediaTokenWithDigestResponse* tns__selectMediaTokenWithDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectMediaTokenWithId                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectMediaTokenWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectMediaTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectMediaTokenWithId*        tns__selectMediaTokenWithId_,
    // response parameters:
    tns__selectMediaTokenWithIdResponse* tns__selectMediaTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectMediaTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__selectMediaTokenWithId*        tns__selectMediaTokenWithId_,
    // response parameters:
    tns__selectMediaTokenWithIdResponse* tns__selectMediaTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectMediaTokenWithId document
//gsoap tns  service method-encoding:	selectMediaTokenWithId literal
//gsoap tns  service method-action:	selectMediaTokenWithId ""
int __tns__selectMediaTokenWithId(
    tns__selectMediaTokenWithId*        tns__selectMediaTokenWithId_,	///< Request parameter
    tns__selectMediaTokenWithIdResponse* tns__selectMediaTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectRelatedGameAnnotationsWithTokenId                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectRelatedGameAnnotationsWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectRelatedGameAnnotationsWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectRelatedGameAnnotationsWithTokenId* tns__selectRelatedGameAnnotationsWithTokenId_,
    // response parameters:
    tns__selectRelatedGameAnnotationsWithTokenIdResponse* tns__selectRelatedGameAnnotationsWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectRelatedGameAnnotationsWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectRelatedGameAnnotationsWithTokenId* tns__selectRelatedGameAnnotationsWithTokenId_,
    // response parameters:
    tns__selectRelatedGameAnnotationsWithTokenIdResponse* tns__selectRelatedGameAnnotationsWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectRelatedGameAnnotationsWithTokenId document
//gsoap tns  service method-encoding:	selectRelatedGameAnnotationsWithTokenId literal
//gsoap tns  service method-action:	selectRelatedGameAnnotationsWithTokenId ""
int __tns__selectRelatedGameAnnotationsWithTokenId(
    tns__selectRelatedGameAnnotationsWithTokenId* tns__selectRelatedGameAnnotationsWithTokenId_,	///< Request parameter
    tns__selectRelatedGameAnnotationsWithTokenIdResponse* tns__selectRelatedGameAnnotationsWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__selectRelatedMediaAnnotationsWithTokenId                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__selectRelatedMediaAnnotationsWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__selectRelatedMediaAnnotationsWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__selectRelatedMediaAnnotationsWithTokenId* tns__selectRelatedMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectRelatedMediaAnnotationsWithTokenIdResponse* tns__selectRelatedMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__selectRelatedMediaAnnotationsWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__selectRelatedMediaAnnotationsWithTokenId* tns__selectRelatedMediaAnnotationsWithTokenId_,
    // response parameters:
    tns__selectRelatedMediaAnnotationsWithTokenIdResponse* tns__selectRelatedMediaAnnotationsWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	selectRelatedMediaAnnotationsWithTokenId document
//gsoap tns  service method-encoding:	selectRelatedMediaAnnotationsWithTokenId literal
//gsoap tns  service method-action:	selectRelatedMediaAnnotationsWithTokenId ""
int __tns__selectRelatedMediaAnnotationsWithTokenId(
    tns__selectRelatedMediaAnnotationsWithTokenId* tns__selectRelatedMediaAnnotationsWithTokenId_,	///< Request parameter
    tns__selectRelatedMediaAnnotationsWithTokenIdResponse* tns__selectRelatedMediaAnnotationsWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__setCallback                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__setCallback" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__setCallback(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__setCallback*                   tns__setCallback_,
    // response parameters:
    tns__setCallbackResponse*           tns__setCallbackResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__setCallback(
    struct soap *soap,
    // request parameters:
    tns__setCallback*                   tns__setCallback_,
    // response parameters:
    tns__setCallbackResponse*           tns__setCallbackResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	setCallback document
//gsoap tns  service method-encoding:	setCallback literal
//gsoap tns  service method-action:	setCallback ""
int __tns__setCallback(
    tns__setCallback*                   tns__setCallback_,	///< Request parameter
    tns__setCallbackResponse*           tns__setCallbackResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__setClientType                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__setClientType" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__setClientType(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__setClientType*                 tns__setClientType_,
    // response parameters:
    tns__setClientTypeResponse*         tns__setClientTypeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__setClientType(
    struct soap *soap,
    // request parameters:
    tns__setClientType*                 tns__setClientType_,
    // response parameters:
    tns__setClientTypeResponse*         tns__setClientTypeResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	setClientType document
//gsoap tns  service method-encoding:	setClientType literal
//gsoap tns  service method-action:	setClientType ""
int __tns__setClientType(
    tns__setClientType*                 tns__setClientType_,	///< Request parameter
    tns__setClientTypeResponse*         tns__setClientTypeResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__setUserAnonymous                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__setUserAnonymous" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__setUserAnonymous(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__setUserAnonymous*              tns__setUserAnonymous_,
    // response parameters:
    tns__setUserAnonymousResponse*      tns__setUserAnonymousResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__setUserAnonymous(
    struct soap *soap,
    // request parameters:
    tns__setUserAnonymous*              tns__setUserAnonymous_,
    // response parameters:
    tns__setUserAnonymousResponse*      tns__setUserAnonymousResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	setUserAnonymous document
//gsoap tns  service method-encoding:	setUserAnonymous literal
//gsoap tns  service method-action:	setUserAnonymous ""
int __tns__setUserAnonymous(
    tns__setUserAnonymous*              tns__setUserAnonymous_,	///< Request parameter
    tns__setUserAnonymousResponse*      tns__setUserAnonymousResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__setUserLanguage                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__setUserLanguage" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__setUserLanguage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__setUserLanguage*               tns__setUserLanguage_,
    // response parameters:
    tns__setUserLanguageResponse*       tns__setUserLanguageResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__setUserLanguage(
    struct soap *soap,
    // request parameters:
    tns__setUserLanguage*               tns__setUserLanguage_,
    // response parameters:
    tns__setUserLanguageResponse*       tns__setUserLanguageResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	setUserLanguage document
//gsoap tns  service method-encoding:	setUserLanguage literal
//gsoap tns  service method-action:	setUserLanguage ""
int __tns__setUserLanguage(
    tns__setUserLanguage*               tns__setUserLanguage_,	///< Request parameter
    tns__setUserLanguageResponse*       tns__setUserLanguageResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameAlias                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameAlias" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameAlias(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameAlias*               tns__submitGameAlias_,
    // response parameters:
    tns__submitGameAliasResponse*       tns__submitGameAliasResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameAlias(
    struct soap *soap,
    // request parameters:
    tns__submitGameAlias*               tns__submitGameAlias_,
    // response parameters:
    tns__submitGameAliasResponse*       tns__submitGameAliasResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameAlias document
//gsoap tns  service method-encoding:	submitGameAlias literal
//gsoap tns  service method-action:	submitGameAlias ""
int __tns__submitGameAlias(
    tns__submitGameAlias*               tns__submitGameAlias_,	///< Request parameter
    tns__submitGameAliasResponse*       tns__submitGameAliasResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameAliasTextAndTokenDigest                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameAliasTextAndTokenDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameAliasTextAndTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameAliasTextAndTokenDigest* tns__submitGameAliasTextAndTokenDigest_,
    // response parameters:
    tns__submitGameAliasTextAndTokenDigestResponse* tns__submitGameAliasTextAndTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameAliasTextAndTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitGameAliasTextAndTokenDigest* tns__submitGameAliasTextAndTokenDigest_,
    // response parameters:
    tns__submitGameAliasTextAndTokenDigestResponse* tns__submitGameAliasTextAndTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameAliasTextAndTokenDigest document
//gsoap tns  service method-encoding:	submitGameAliasTextAndTokenDigest literal
//gsoap tns  service method-action:	submitGameAliasTextAndTokenDigest ""
int __tns__submitGameAliasTextAndTokenDigest(
    tns__submitGameAliasTextAndTokenDigest* tns__submitGameAliasTextAndTokenDigest_,	///< Request parameter
    tns__submitGameAliasTextAndTokenDigestResponse* tns__submitGameAliasTextAndTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameAliasTextWithTokenId                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameAliasTextWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameAliasTextWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameAliasTextWithTokenId* tns__submitGameAliasTextWithTokenId_,
    // response parameters:
    tns__submitGameAliasTextWithTokenIdResponse* tns__submitGameAliasTextWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameAliasTextWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__submitGameAliasTextWithTokenId* tns__submitGameAliasTextWithTokenId_,
    // response parameters:
    tns__submitGameAliasTextWithTokenIdResponse* tns__submitGameAliasTextWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameAliasTextWithTokenId document
//gsoap tns  service method-encoding:	submitGameAliasTextWithTokenId literal
//gsoap tns  service method-action:	submitGameAliasTextWithTokenId ""
int __tns__submitGameAliasTextWithTokenId(
    tns__submitGameAliasTextWithTokenId* tns__submitGameAliasTextWithTokenId_,	///< Request parameter
    tns__submitGameAliasTextWithTokenIdResponse* tns__submitGameAliasTextWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameAnnotation                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameAnnotation" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameAnnotation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameAnnotation*          tns__submitGameAnnotation_,
    // response parameters:
    tns__submitGameAnnotationResponse*  tns__submitGameAnnotationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameAnnotation(
    struct soap *soap,
    // request parameters:
    tns__submitGameAnnotation*          tns__submitGameAnnotation_,
    // response parameters:
    tns__submitGameAnnotationResponse*  tns__submitGameAnnotationResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameAnnotation document
//gsoap tns  service method-encoding:	submitGameAnnotation literal
//gsoap tns  service method-action:	submitGameAnnotation ""
int __tns__submitGameAnnotation(
    tns__submitGameAnnotation*          tns__submitGameAnnotation_,	///< Request parameter
    tns__submitGameAnnotationResponse*  tns__submitGameAnnotationResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameAnnotationTextAndTokenDigest                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameAnnotationTextAndTokenDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameAnnotationTextAndTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameAnnotationTextAndTokenDigest* tns__submitGameAnnotationTextAndTokenDigest_,
    // response parameters:
    tns__submitGameAnnotationTextAndTokenDigestResponse* tns__submitGameAnnotationTextAndTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameAnnotationTextAndTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitGameAnnotationTextAndTokenDigest* tns__submitGameAnnotationTextAndTokenDigest_,
    // response parameters:
    tns__submitGameAnnotationTextAndTokenDigestResponse* tns__submitGameAnnotationTextAndTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameAnnotationTextAndTokenDigest document
//gsoap tns  service method-encoding:	submitGameAnnotationTextAndTokenDigest literal
//gsoap tns  service method-action:	submitGameAnnotationTextAndTokenDigest ""
int __tns__submitGameAnnotationTextAndTokenDigest(
    tns__submitGameAnnotationTextAndTokenDigest* tns__submitGameAnnotationTextAndTokenDigest_,	///< Request parameter
    tns__submitGameAnnotationTextAndTokenDigestResponse* tns__submitGameAnnotationTextAndTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameAnnotationTextWithTokenId                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameAnnotationTextWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameAnnotationTextWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameAnnotationTextWithTokenId* tns__submitGameAnnotationTextWithTokenId_,
    // response parameters:
    tns__submitGameAnnotationTextWithTokenIdResponse* tns__submitGameAnnotationTextWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameAnnotationTextWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__submitGameAnnotationTextWithTokenId* tns__submitGameAnnotationTextWithTokenId_,
    // response parameters:
    tns__submitGameAnnotationTextWithTokenIdResponse* tns__submitGameAnnotationTextWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameAnnotationTextWithTokenId document
//gsoap tns  service method-encoding:	submitGameAnnotationTextWithTokenId literal
//gsoap tns  service method-action:	submitGameAnnotationTextWithTokenId ""
int __tns__submitGameAnnotationTextWithTokenId(
    tns__submitGameAnnotationTextWithTokenId* tns__submitGameAnnotationTextWithTokenId_,	///< Request parameter
    tns__submitGameAnnotationTextWithTokenIdResponse* tns__submitGameAnnotationTextWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameToken                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameToken" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameToken*               tns__submitGameToken_,
    // response parameters:
    tns__submitGameTokenResponse*       tns__submitGameTokenResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameToken(
    struct soap *soap,
    // request parameters:
    tns__submitGameToken*               tns__submitGameToken_,
    // response parameters:
    tns__submitGameTokenResponse*       tns__submitGameTokenResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameToken document
//gsoap tns  service method-encoding:	submitGameToken literal
//gsoap tns  service method-action:	submitGameToken ""
int __tns__submitGameToken(
    tns__submitGameToken*               tns__submitGameToken_,	///< Request parameter
    tns__submitGameTokenResponse*       tns__submitGameTokenResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitGameTokenDigest                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitGameTokenDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitGameTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitGameTokenDigest*         tns__submitGameTokenDigest_,
    // response parameters:
    tns__submitGameTokenDigestResponse* tns__submitGameTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitGameTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitGameTokenDigest*         tns__submitGameTokenDigest_,
    // response parameters:
    tns__submitGameTokenDigestResponse* tns__submitGameTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitGameTokenDigest document
//gsoap tns  service method-encoding:	submitGameTokenDigest literal
//gsoap tns  service method-action:	submitGameTokenDigest ""
int __tns__submitGameTokenDigest(
    tns__submitGameTokenDigest*         tns__submitGameTokenDigest_,	///< Request parameter
    tns__submitGameTokenDigestResponse* tns__submitGameTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAlias                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAlias" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAlias(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAlias*              tns__submitMediaAlias_,
    // response parameters:
    tns__submitMediaAliasResponse*      tns__submitMediaAliasResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAlias(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAlias*              tns__submitMediaAlias_,
    // response parameters:
    tns__submitMediaAliasResponse*      tns__submitMediaAliasResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAlias document
//gsoap tns  service method-encoding:	submitMediaAlias literal
//gsoap tns  service method-action:	submitMediaAlias ""
int __tns__submitMediaAlias(
    tns__submitMediaAlias*              tns__submitMediaAlias_,	///< Request parameter
    tns__submitMediaAliasResponse*      tns__submitMediaAliasResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAliasTextAndTokenDigest                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAliasTextAndTokenDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAliasTextAndTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAliasTextAndTokenDigest* tns__submitMediaAliasTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAliasTextAndTokenDigestResponse* tns__submitMediaAliasTextAndTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAliasTextAndTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAliasTextAndTokenDigest* tns__submitMediaAliasTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAliasTextAndTokenDigestResponse* tns__submitMediaAliasTextAndTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAliasTextAndTokenDigest document
//gsoap tns  service method-encoding:	submitMediaAliasTextAndTokenDigest literal
//gsoap tns  service method-action:	submitMediaAliasTextAndTokenDigest ""
int __tns__submitMediaAliasTextAndTokenDigest(
    tns__submitMediaAliasTextAndTokenDigest* tns__submitMediaAliasTextAndTokenDigest_,	///< Request parameter
    tns__submitMediaAliasTextAndTokenDigestResponse* tns__submitMediaAliasTextAndTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAliasTextWithTokenId                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAliasTextWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAliasTextWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAliasTextWithTokenId* tns__submitMediaAliasTextWithTokenId_,
    // response parameters:
    tns__submitMediaAliasTextWithTokenIdResponse* tns__submitMediaAliasTextWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAliasTextWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAliasTextWithTokenId* tns__submitMediaAliasTextWithTokenId_,
    // response parameters:
    tns__submitMediaAliasTextWithTokenIdResponse* tns__submitMediaAliasTextWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAliasTextWithTokenId document
//gsoap tns  service method-encoding:	submitMediaAliasTextWithTokenId literal
//gsoap tns  service method-action:	submitMediaAliasTextWithTokenId ""
int __tns__submitMediaAliasTextWithTokenId(
    tns__submitMediaAliasTextWithTokenId* tns__submitMediaAliasTextWithTokenId_,	///< Request parameter
    tns__submitMediaAliasTextWithTokenIdResponse* tns__submitMediaAliasTextWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAnnotation                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAnnotation" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAnnotation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAnnotation*         tns__submitMediaAnnotation_,
    // response parameters:
    tns__submitMediaAnnotationResponse* tns__submitMediaAnnotationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAnnotation(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAnnotation*         tns__submitMediaAnnotation_,
    // response parameters:
    tns__submitMediaAnnotationResponse* tns__submitMediaAnnotationResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAnnotation document
//gsoap tns  service method-encoding:	submitMediaAnnotation literal
//gsoap tns  service method-action:	submitMediaAnnotation ""
int __tns__submitMediaAnnotation(
    tns__submitMediaAnnotation*         tns__submitMediaAnnotation_,	///< Request parameter
    tns__submitMediaAnnotationResponse* tns__submitMediaAnnotationResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAnnotationTextAndTokenDigest                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAnnotationTextAndTokenDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAnnotationTextAndTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAnnotationTextAndTokenDigest* tns__submitMediaAnnotationTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAnnotationTextAndTokenDigestResponse* tns__submitMediaAnnotationTextAndTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAnnotationTextAndTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAnnotationTextAndTokenDigest* tns__submitMediaAnnotationTextAndTokenDigest_,
    // response parameters:
    tns__submitMediaAnnotationTextAndTokenDigestResponse* tns__submitMediaAnnotationTextAndTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAnnotationTextAndTokenDigest document
//gsoap tns  service method-encoding:	submitMediaAnnotationTextAndTokenDigest literal
//gsoap tns  service method-action:	submitMediaAnnotationTextAndTokenDigest ""
int __tns__submitMediaAnnotationTextAndTokenDigest(
    tns__submitMediaAnnotationTextAndTokenDigest* tns__submitMediaAnnotationTextAndTokenDigest_,	///< Request parameter
    tns__submitMediaAnnotationTextAndTokenDigestResponse* tns__submitMediaAnnotationTextAndTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaAnnotationTextWithTokenId                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaAnnotationTextWithTokenId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaAnnotationTextWithTokenId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaAnnotationTextWithTokenId* tns__submitMediaAnnotationTextWithTokenId_,
    // response parameters:
    tns__submitMediaAnnotationTextWithTokenIdResponse* tns__submitMediaAnnotationTextWithTokenIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaAnnotationTextWithTokenId(
    struct soap *soap,
    // request parameters:
    tns__submitMediaAnnotationTextWithTokenId* tns__submitMediaAnnotationTextWithTokenId_,
    // response parameters:
    tns__submitMediaAnnotationTextWithTokenIdResponse* tns__submitMediaAnnotationTextWithTokenIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaAnnotationTextWithTokenId document
//gsoap tns  service method-encoding:	submitMediaAnnotationTextWithTokenId literal
//gsoap tns  service method-action:	submitMediaAnnotationTextWithTokenId ""
int __tns__submitMediaAnnotationTextWithTokenId(
    tns__submitMediaAnnotationTextWithTokenId* tns__submitMediaAnnotationTextWithTokenId_,	///< Request parameter
    tns__submitMediaAnnotationTextWithTokenIdResponse* tns__submitMediaAnnotationTextWithTokenIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaToken                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaToken" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaToken*              tns__submitMediaToken_,
    // response parameters:
    tns__submitMediaTokenResponse*      tns__submitMediaTokenResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaToken(
    struct soap *soap,
    // request parameters:
    tns__submitMediaToken*              tns__submitMediaToken_,
    // response parameters:
    tns__submitMediaTokenResponse*      tns__submitMediaTokenResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaToken document
//gsoap tns  service method-encoding:	submitMediaToken literal
//gsoap tns  service method-action:	submitMediaToken ""
int __tns__submitMediaToken(
    tns__submitMediaToken*              tns__submitMediaToken_,	///< Request parameter
    tns__submitMediaTokenResponse*      tns__submitMediaTokenResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__submitMediaTokenDigest                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__submitMediaTokenDigest" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__submitMediaTokenDigest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__submitMediaTokenDigest*        tns__submitMediaTokenDigest_,
    // response parameters:
    tns__submitMediaTokenDigestResponse* tns__submitMediaTokenDigestResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__submitMediaTokenDigest(
    struct soap *soap,
    // request parameters:
    tns__submitMediaTokenDigest*        tns__submitMediaTokenDigest_,
    // response parameters:
    tns__submitMediaTokenDigestResponse* tns__submitMediaTokenDigestResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	submitMediaTokenDigest document
//gsoap tns  service method-encoding:	submitMediaTokenDigest literal
//gsoap tns  service method-action:	submitMediaTokenDigest ""
int __tns__submitMediaTokenDigest(
    tns__submitMediaTokenDigest*        tns__submitMediaTokenDigest_,	///< Request parameter
    tns__submitMediaTokenDigestResponse* tns__submitMediaTokenDigestResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateGameAnnotationTextWithId                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateGameAnnotationTextWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateGameAnnotationTextWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateGameAnnotationTextWithId* tns__updateGameAnnotationTextWithId_,
    // response parameters:
    tns__updateGameAnnotationTextWithIdResponse* tns__updateGameAnnotationTextWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateGameAnnotationTextWithId(
    struct soap *soap,
    // request parameters:
    tns__updateGameAnnotationTextWithId* tns__updateGameAnnotationTextWithId_,
    // response parameters:
    tns__updateGameAnnotationTextWithIdResponse* tns__updateGameAnnotationTextWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateGameAnnotationTextWithId document
//gsoap tns  service method-encoding:	updateGameAnnotationTextWithId literal
//gsoap tns  service method-action:	updateGameAnnotationTextWithId ""
int __tns__updateGameAnnotationTextWithId(
    tns__updateGameAnnotationTextWithId* tns__updateGameAnnotationTextWithId_,	///< Request parameter
    tns__updateGameAnnotationTextWithIdResponse* tns__updateGameAnnotationTextWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__updateMediaAnnotationTextWithId                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__updateMediaAnnotationTextWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__updateMediaAnnotationTextWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__updateMediaAnnotationTextWithId* tns__updateMediaAnnotationTextWithId_,
    // response parameters:
    tns__updateMediaAnnotationTextWithIdResponse* tns__updateMediaAnnotationTextWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__updateMediaAnnotationTextWithId(
    struct soap *soap,
    // request parameters:
    tns__updateMediaAnnotationTextWithId* tns__updateMediaAnnotationTextWithId_,
    // response parameters:
    tns__updateMediaAnnotationTextWithIdResponse* tns__updateMediaAnnotationTextWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	updateMediaAnnotationTextWithId document
//gsoap tns  service method-encoding:	updateMediaAnnotationTextWithId literal
//gsoap tns  service method-action:	updateMediaAnnotationTextWithId ""
int __tns__updateMediaAnnotationTextWithId(
    tns__updateMediaAnnotationTextWithId* tns__updateMediaAnnotationTextWithId_,	///< Request parameter
    tns__updateMediaAnnotationTextWithIdResponse* tns__updateMediaAnnotationTextWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__visitGameTokenWithId                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__visitGameTokenWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__visitGameTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__visitGameTokenWithId*          tns__visitGameTokenWithId_,
    // response parameters:
    tns__visitGameTokenWithIdResponse*  tns__visitGameTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__visitGameTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__visitGameTokenWithId*          tns__visitGameTokenWithId_,
    // response parameters:
    tns__visitGameTokenWithIdResponse*  tns__visitGameTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	visitGameTokenWithId document
//gsoap tns  service method-encoding:	visitGameTokenWithId literal
//gsoap tns  service method-action:	visitGameTokenWithId ""
int __tns__visitGameTokenWithId(
    tns__visitGameTokenWithId*          tns__visitGameTokenWithId_,	///< Request parameter
    tns__visitGameTokenWithIdResponse*  tns__visitGameTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tns__visitMediaTokenWithId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tns__visitMediaTokenWithId" of service binding "ServerAgentServiceSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tns__visitMediaTokenWithId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    tns__visitMediaTokenWithId*         tns__visitMediaTokenWithId_,
    // response parameters:
    tns__visitMediaTokenWithIdResponse* tns__visitMediaTokenWithIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tns__visitMediaTokenWithId(
    struct soap *soap,
    // request parameters:
    tns__visitMediaTokenWithId*         tns__visitMediaTokenWithId_,
    // response parameters:
    tns__visitMediaTokenWithIdResponse* tns__visitMediaTokenWithIdResponse_
  );
@endcode

C++ proxy class (defined in soapServerAgentServiceSoapBindingProxy.h):
@code
  class ServerAgentServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapServerAgentServiceSoapBindingService.h):
@code
  class ServerAgentServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tns  service method-style:	visitMediaTokenWithId document
//gsoap tns  service method-encoding:	visitMediaTokenWithId literal
//gsoap tns  service method-action:	visitMediaTokenWithId ""
int __tns__visitMediaTokenWithId(
    tns__visitMediaTokenWithId*         tns__visitMediaTokenWithId_,	///< Request parameter
    tns__visitMediaTokenWithIdResponse* tns__visitMediaTokenWithIdResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema ""

@section tns Top-level root elements of schema "http://service.annot.me/"

  - <tns:blessGameAnnotationWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blessGameAnnotationWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaAnnotationWithId> (use wsdl2h option -g to auto-generate)

  - <tns:blessMediaAnnotationWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:chat> (use wsdl2h option -g to auto-generate)

  - <tns:chatResponse> (use wsdl2h option -g to auto-generate)

  - <tns:getUser> (use wsdl2h option -g to auto-generate)

  - <tns:getUserResponse> (use wsdl2h option -g to auto-generate)

  - <tns:isAuthorized> (use wsdl2h option -g to auto-generate)

  - <tns:isAuthorizedResponse> (use wsdl2h option -g to auto-generate)

  - <tns:isConnected> (use wsdl2h option -g to auto-generate)

  - <tns:isConnectedResponse> (use wsdl2h option -g to auto-generate)

  - <tns:login> (use wsdl2h option -g to auto-generate)

  - <tns:loginResponse> (use wsdl2h option -g to auto-generate)

  - <tns:logout> (use wsdl2h option -g to auto-generate)

  - <tns:logoutResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameAnnotationsWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameAnnotationsWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameAliasesWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameAliasesWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameTokenWithDigest> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameTokenWithDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:selectGameTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAnnotationsWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAnnotationsWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAliasesWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaAliasesWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithDigest> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:selectMediaTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedGameAnnotationsWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedGameAnnotationsWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedMediaAnnotationsWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:selectRelatedMediaAnnotationsWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:setCallback> (use wsdl2h option -g to auto-generate)

  - <tns:setCallbackResponse> (use wsdl2h option -g to auto-generate)

  - <tns:setClientType> (use wsdl2h option -g to auto-generate)

  - <tns:setClientTypeResponse> (use wsdl2h option -g to auto-generate)

  - <tns:setUserAnonymous> (use wsdl2h option -g to auto-generate)

  - <tns:setUserAnonymousResponse> (use wsdl2h option -g to auto-generate)

  - <tns:setUserLanguage> (use wsdl2h option -g to auto-generate)

  - <tns:setUserLanguageResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAlias> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAliasResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAliasTextAndTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAliasTextAndTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAliasTextWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAliasTextWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAnnotation> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAnnotationResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAnnotationTextAndTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAnnotationTextAndTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAnnotationTextWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameAnnotationTextWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameToken> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameTokenResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitGameTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAlias> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextAndTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextAndTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAliasTextWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotation> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextAndTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextAndTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextWithTokenId> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaAnnotationTextWithTokenIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaToken> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenResponse> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenDigest> (use wsdl2h option -g to auto-generate)

  - <tns:submitMediaTokenDigestResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateGameAnnotationTextWithId> (use wsdl2h option -g to auto-generate)

  - <tns:updateGameAnnotationTextWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationTextWithId> (use wsdl2h option -g to auto-generate)

  - <tns:updateMediaAnnotationTextWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:visitGameTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:visitGameTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:visitMediaTokenWithId> (use wsdl2h option -g to auto-generate)

  - <tns:visitMediaTokenWithIdResponse> (use wsdl2h option -g to auto-generate)

  - <tns:gameAnnotation> (use wsdl2h option -g to auto-generate)

  - <tns:gameToken> (use wsdl2h option -g to auto-generate)

  - <tns:gameAlias> (use wsdl2h option -g to auto-generate)

  - <tns:mediaAnnotation> (use wsdl2h option -g to auto-generate)

  - <tns:mediaToken> (use wsdl2h option -g to auto-generate)

  - <tns:mediaAlias> (use wsdl2h option -g to auto-generate)

  - <tns:user> (use wsdl2h option -g to auto-generate)

*/

} // namespace ServerSoap

/* End of _serversoap.h */
