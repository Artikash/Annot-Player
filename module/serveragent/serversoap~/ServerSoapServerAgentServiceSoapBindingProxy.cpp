/* ServerSoapServerAgentServiceSoapBindingProxy.cpp
   Generated by gSOAP 2.8.5 from _serversoap.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "ServerSoapServerAgentServiceSoapBindingProxy.h"

namespace ServerSoap {

ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy()
{	ServerAgentServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy(const char *url)
{	ServerAgentServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy(soap_mode iomode)
{	ServerAgentServiceSoapBindingProxy_init(iomode, iomode);
}

ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy(const char *url, soap_mode iomode)
{	ServerAgentServiceSoapBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy(soap_mode imode, soap_mode omode)
{	ServerAgentServiceSoapBindingProxy_init(imode, omode);
}

ServerAgentServiceSoapBindingProxy::~ServerAgentServiceSoapBindingProxy()
{ }

void ServerAgentServiceSoapBindingProxy::ServerAgentServiceSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"tns", "http://service.annot.me/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void ServerAgentServiceSoapBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ServerAgentServiceSoapBindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *ServerAgentServiceSoapBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *ServerAgentServiceSoapBindingProxy::soap_fault()
{	return this->fault;
}

const char *ServerAgentServiceSoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *ServerAgentServiceSoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int ServerAgentServiceSoapBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int ServerAgentServiceSoapBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void ServerAgentServiceSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ServerAgentServiceSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ServerAgentServiceSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int ServerAgentServiceSoapBindingProxy::blessMediaAliasWithId(const char *endpoint, const char *soap_action, tns__blessMediaAliasWithId *tns__blessMediaAliasWithId_, tns__blessMediaAliasWithIdResponse *tns__blessMediaAliasWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__blessMediaAliasWithId soap_tmp___tns__blessMediaAliasWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__blessMediaAliasWithId.tns__blessMediaAliasWithId_ = tns__blessMediaAliasWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__blessMediaAliasWithId(soap, &soap_tmp___tns__blessMediaAliasWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__blessMediaAliasWithId(soap, &soap_tmp___tns__blessMediaAliasWithId, "-tns:blessMediaAliasWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__blessMediaAliasWithId(soap, &soap_tmp___tns__blessMediaAliasWithId, "-tns:blessMediaAliasWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__blessMediaAliasWithIdResponse_)
		return soap_closesock(soap);
	tns__blessMediaAliasWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__blessMediaAliasWithIdResponse_->soap_get(soap, "tns:blessMediaAliasWithIdResponse", "tns:blessMediaAliasWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::blessMediaAnnotationWithId(const char *endpoint, const char *soap_action, tns__blessMediaAnnotationWithId *tns__blessMediaAnnotationWithId_, tns__blessMediaAnnotationWithIdResponse *tns__blessMediaAnnotationWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__blessMediaAnnotationWithId soap_tmp___tns__blessMediaAnnotationWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__blessMediaAnnotationWithId.tns__blessMediaAnnotationWithId_ = tns__blessMediaAnnotationWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__blessMediaAnnotationWithId(soap, &soap_tmp___tns__blessMediaAnnotationWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__blessMediaAnnotationWithId(soap, &soap_tmp___tns__blessMediaAnnotationWithId, "-tns:blessMediaAnnotationWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__blessMediaAnnotationWithId(soap, &soap_tmp___tns__blessMediaAnnotationWithId, "-tns:blessMediaAnnotationWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__blessMediaAnnotationWithIdResponse_)
		return soap_closesock(soap);
	tns__blessMediaAnnotationWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__blessMediaAnnotationWithIdResponse_->soap_get(soap, "tns:blessMediaAnnotationWithIdResponse", "tns:blessMediaAnnotationWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::blessMediaTokenWithId(const char *endpoint, const char *soap_action, tns__blessMediaTokenWithId *tns__blessMediaTokenWithId_, tns__blessMediaTokenWithIdResponse *tns__blessMediaTokenWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__blessMediaTokenWithId soap_tmp___tns__blessMediaTokenWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__blessMediaTokenWithId.tns__blessMediaTokenWithId_ = tns__blessMediaTokenWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__blessMediaTokenWithId(soap, &soap_tmp___tns__blessMediaTokenWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__blessMediaTokenWithId(soap, &soap_tmp___tns__blessMediaTokenWithId, "-tns:blessMediaTokenWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__blessMediaTokenWithId(soap, &soap_tmp___tns__blessMediaTokenWithId, "-tns:blessMediaTokenWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__blessMediaTokenWithIdResponse_)
		return soap_closesock(soap);
	tns__blessMediaTokenWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__blessMediaTokenWithIdResponse_->soap_get(soap, "tns:blessMediaTokenWithIdResponse", "tns:blessMediaTokenWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::blockMediaAliasWithId(const char *endpoint, const char *soap_action, tns__blockMediaAliasWithId *tns__blockMediaAliasWithId_, tns__blockMediaAliasWithIdResponse *tns__blockMediaAliasWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__blockMediaAliasWithId soap_tmp___tns__blockMediaAliasWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__blockMediaAliasWithId.tns__blockMediaAliasWithId_ = tns__blockMediaAliasWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__blockMediaAliasWithId(soap, &soap_tmp___tns__blockMediaAliasWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__blockMediaAliasWithId(soap, &soap_tmp___tns__blockMediaAliasWithId, "-tns:blockMediaAliasWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__blockMediaAliasWithId(soap, &soap_tmp___tns__blockMediaAliasWithId, "-tns:blockMediaAliasWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__blockMediaAliasWithIdResponse_)
		return soap_closesock(soap);
	tns__blockMediaAliasWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__blockMediaAliasWithIdResponse_->soap_get(soap, "tns:blockMediaAliasWithIdResponse", "tns:blockMediaAliasWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::blockMediaAnnotationWithId(const char *endpoint, const char *soap_action, tns__blockMediaAnnotationWithId *tns__blockMediaAnnotationWithId_, tns__blockMediaAnnotationWithIdResponse *tns__blockMediaAnnotationWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__blockMediaAnnotationWithId soap_tmp___tns__blockMediaAnnotationWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__blockMediaAnnotationWithId.tns__blockMediaAnnotationWithId_ = tns__blockMediaAnnotationWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__blockMediaAnnotationWithId(soap, &soap_tmp___tns__blockMediaAnnotationWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__blockMediaAnnotationWithId(soap, &soap_tmp___tns__blockMediaAnnotationWithId, "-tns:blockMediaAnnotationWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__blockMediaAnnotationWithId(soap, &soap_tmp___tns__blockMediaAnnotationWithId, "-tns:blockMediaAnnotationWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__blockMediaAnnotationWithIdResponse_)
		return soap_closesock(soap);
	tns__blockMediaAnnotationWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__blockMediaAnnotationWithIdResponse_->soap_get(soap, "tns:blockMediaAnnotationWithIdResponse", "tns:blockMediaAnnotationWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::blockUserWithId(const char *endpoint, const char *soap_action, tns__blockUserWithId *tns__blockUserWithId_, tns__blockUserWithIdResponse *tns__blockUserWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__blockUserWithId soap_tmp___tns__blockUserWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__blockUserWithId.tns__blockUserWithId_ = tns__blockUserWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__blockUserWithId(soap, &soap_tmp___tns__blockUserWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__blockUserWithId(soap, &soap_tmp___tns__blockUserWithId, "-tns:blockUserWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__blockUserWithId(soap, &soap_tmp___tns__blockUserWithId, "-tns:blockUserWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__blockUserWithIdResponse_)
		return soap_closesock(soap);
	tns__blockUserWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__blockUserWithIdResponse_->soap_get(soap, "tns:blockUserWithIdResponse", "tns:blockUserWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::chat(const char *endpoint, const char *soap_action, tns__chat *tns__chat_, tns__chatResponse *tns__chatResponse_)
{	struct soap *soap = this;
	struct __tns__chat soap_tmp___tns__chat;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__chat.tns__chat_ = tns__chat_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__chat(soap, &soap_tmp___tns__chat);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__chat(soap, &soap_tmp___tns__chat, "-tns:chat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__chat(soap, &soap_tmp___tns__chat, "-tns:chat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__chatResponse_)
		return soap_closesock(soap);
	tns__chatResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__chatResponse_->soap_get(soap, "tns:chatResponse", "tns:chatResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::curseMediaAliasWithId(const char *endpoint, const char *soap_action, tns__curseMediaAliasWithId *tns__curseMediaAliasWithId_, tns__curseMediaAliasWithIdResponse *tns__curseMediaAliasWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__curseMediaAliasWithId soap_tmp___tns__curseMediaAliasWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__curseMediaAliasWithId.tns__curseMediaAliasWithId_ = tns__curseMediaAliasWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__curseMediaAliasWithId(soap, &soap_tmp___tns__curseMediaAliasWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__curseMediaAliasWithId(soap, &soap_tmp___tns__curseMediaAliasWithId, "-tns:curseMediaAliasWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__curseMediaAliasWithId(soap, &soap_tmp___tns__curseMediaAliasWithId, "-tns:curseMediaAliasWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__curseMediaAliasWithIdResponse_)
		return soap_closesock(soap);
	tns__curseMediaAliasWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__curseMediaAliasWithIdResponse_->soap_get(soap, "tns:curseMediaAliasWithIdResponse", "tns:curseMediaAliasWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::curseMediaAnnotationWithId(const char *endpoint, const char *soap_action, tns__curseMediaAnnotationWithId *tns__curseMediaAnnotationWithId_, tns__curseMediaAnnotationWithIdResponse *tns__curseMediaAnnotationWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__curseMediaAnnotationWithId soap_tmp___tns__curseMediaAnnotationWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__curseMediaAnnotationWithId.tns__curseMediaAnnotationWithId_ = tns__curseMediaAnnotationWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__curseMediaAnnotationWithId(soap, &soap_tmp___tns__curseMediaAnnotationWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__curseMediaAnnotationWithId(soap, &soap_tmp___tns__curseMediaAnnotationWithId, "-tns:curseMediaAnnotationWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__curseMediaAnnotationWithId(soap, &soap_tmp___tns__curseMediaAnnotationWithId, "-tns:curseMediaAnnotationWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__curseMediaAnnotationWithIdResponse_)
		return soap_closesock(soap);
	tns__curseMediaAnnotationWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__curseMediaAnnotationWithIdResponse_->soap_get(soap, "tns:curseMediaAnnotationWithIdResponse", "tns:curseMediaAnnotationWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::curseMediaTokenWithId(const char *endpoint, const char *soap_action, tns__curseMediaTokenWithId *tns__curseMediaTokenWithId_, tns__curseMediaTokenWithIdResponse *tns__curseMediaTokenWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__curseMediaTokenWithId soap_tmp___tns__curseMediaTokenWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__curseMediaTokenWithId.tns__curseMediaTokenWithId_ = tns__curseMediaTokenWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__curseMediaTokenWithId(soap, &soap_tmp___tns__curseMediaTokenWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__curseMediaTokenWithId(soap, &soap_tmp___tns__curseMediaTokenWithId, "-tns:curseMediaTokenWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__curseMediaTokenWithId(soap, &soap_tmp___tns__curseMediaTokenWithId, "-tns:curseMediaTokenWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__curseMediaTokenWithIdResponse_)
		return soap_closesock(soap);
	tns__curseMediaTokenWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__curseMediaTokenWithIdResponse_->soap_get(soap, "tns:curseMediaTokenWithIdResponse", "tns:curseMediaTokenWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::deleteMediaAliasWithId(const char *endpoint, const char *soap_action, tns__deleteMediaAliasWithId *tns__deleteMediaAliasWithId_, tns__deleteMediaAliasWithIdResponse *tns__deleteMediaAliasWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__deleteMediaAliasWithId soap_tmp___tns__deleteMediaAliasWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__deleteMediaAliasWithId.tns__deleteMediaAliasWithId_ = tns__deleteMediaAliasWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__deleteMediaAliasWithId(soap, &soap_tmp___tns__deleteMediaAliasWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__deleteMediaAliasWithId(soap, &soap_tmp___tns__deleteMediaAliasWithId, "-tns:deleteMediaAliasWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__deleteMediaAliasWithId(soap, &soap_tmp___tns__deleteMediaAliasWithId, "-tns:deleteMediaAliasWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__deleteMediaAliasWithIdResponse_)
		return soap_closesock(soap);
	tns__deleteMediaAliasWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__deleteMediaAliasWithIdResponse_->soap_get(soap, "tns:deleteMediaAliasWithIdResponse", "tns:deleteMediaAliasWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::deleteMediaAnnotationWithId(const char *endpoint, const char *soap_action, tns__deleteMediaAnnotationWithId *tns__deleteMediaAnnotationWithId_, tns__deleteMediaAnnotationWithIdResponse *tns__deleteMediaAnnotationWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__deleteMediaAnnotationWithId soap_tmp___tns__deleteMediaAnnotationWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__deleteMediaAnnotationWithId.tns__deleteMediaAnnotationWithId_ = tns__deleteMediaAnnotationWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__deleteMediaAnnotationWithId(soap, &soap_tmp___tns__deleteMediaAnnotationWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__deleteMediaAnnotationWithId(soap, &soap_tmp___tns__deleteMediaAnnotationWithId, "-tns:deleteMediaAnnotationWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__deleteMediaAnnotationWithId(soap, &soap_tmp___tns__deleteMediaAnnotationWithId, "-tns:deleteMediaAnnotationWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__deleteMediaAnnotationWithIdResponse_)
		return soap_closesock(soap);
	tns__deleteMediaAnnotationWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__deleteMediaAnnotationWithIdResponse_->soap_get(soap, "tns:deleteMediaAnnotationWithIdResponse", "tns:deleteMediaAnnotationWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::isClientUpdated(const char *endpoint, const char *soap_action, tns__isClientUpdated *tns__isClientUpdated_, tns__isClientUpdatedResponse *tns__isClientUpdatedResponse_)
{	struct soap *soap = this;
	struct __tns__isClientUpdated soap_tmp___tns__isClientUpdated;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__isClientUpdated.tns__isClientUpdated_ = tns__isClientUpdated_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__isClientUpdated(soap, &soap_tmp___tns__isClientUpdated);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__isClientUpdated(soap, &soap_tmp___tns__isClientUpdated, "-tns:isClientUpdated", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__isClientUpdated(soap, &soap_tmp___tns__isClientUpdated, "-tns:isClientUpdated", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__isClientUpdatedResponse_)
		return soap_closesock(soap);
	tns__isClientUpdatedResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__isClientUpdatedResponse_->soap_get(soap, "tns:isClientUpdatedResponse", "tns:isClientUpdatedResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::isConnected(const char *endpoint, const char *soap_action, tns__isConnected *tns__isConnected_, tns__isConnectedResponse *tns__isConnectedResponse_)
{	struct soap *soap = this;
	struct __tns__isConnected soap_tmp___tns__isConnected;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__isConnected.tns__isConnected_ = tns__isConnected_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__isConnected(soap, &soap_tmp___tns__isConnected);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__isConnected(soap, &soap_tmp___tns__isConnected, "-tns:isConnected", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__isConnected(soap, &soap_tmp___tns__isConnected, "-tns:isConnected", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__isConnectedResponse_)
		return soap_closesock(soap);
	tns__isConnectedResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__isConnectedResponse_->soap_get(soap, "tns:isConnectedResponse", "tns:isConnectedResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectLiveAnnotationsWithTokenId(const char *endpoint, const char *soap_action, tns__selectLiveAnnotationsWithTokenId *tns__selectLiveAnnotationsWithTokenId_, tns__selectLiveAnnotationsWithTokenIdResponse *tns__selectLiveAnnotationsWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__selectLiveAnnotationsWithTokenId soap_tmp___tns__selectLiveAnnotationsWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectLiveAnnotationsWithTokenId.tns__selectLiveAnnotationsWithTokenId_ = tns__selectLiveAnnotationsWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectLiveAnnotationsWithTokenId(soap, &soap_tmp___tns__selectLiveAnnotationsWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectLiveAnnotationsWithTokenId(soap, &soap_tmp___tns__selectLiveAnnotationsWithTokenId, "-tns:selectLiveAnnotationsWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectLiveAnnotationsWithTokenId(soap, &soap_tmp___tns__selectLiveAnnotationsWithTokenId, "-tns:selectLiveAnnotationsWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectLiveAnnotationsWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__selectLiveAnnotationsWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectLiveAnnotationsWithTokenIdResponse_->soap_get(soap, "tns:selectLiveAnnotationsWithTokenIdResponse", "tns:selectLiveAnnotationsWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectLiveTokenWithId(const char *endpoint, const char *soap_action, tns__selectLiveTokenWithId *tns__selectLiveTokenWithId_, tns__selectLiveTokenWithIdResponse *tns__selectLiveTokenWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__selectLiveTokenWithId soap_tmp___tns__selectLiveTokenWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectLiveTokenWithId.tns__selectLiveTokenWithId_ = tns__selectLiveTokenWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectLiveTokenWithId(soap, &soap_tmp___tns__selectLiveTokenWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectLiveTokenWithId(soap, &soap_tmp___tns__selectLiveTokenWithId, "-tns:selectLiveTokenWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectLiveTokenWithId(soap, &soap_tmp___tns__selectLiveTokenWithId, "-tns:selectLiveTokenWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectLiveTokenWithIdResponse_)
		return soap_closesock(soap);
	tns__selectLiveTokenWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectLiveTokenWithIdResponse_->soap_get(soap, "tns:selectLiveTokenWithIdResponse", "tns:selectLiveTokenWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectMediaAliasesWithTokenId(const char *endpoint, const char *soap_action, tns__selectMediaAliasesWithTokenId *tns__selectMediaAliasesWithTokenId_, tns__selectMediaAliasesWithTokenIdResponse *tns__selectMediaAliasesWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__selectMediaAliasesWithTokenId soap_tmp___tns__selectMediaAliasesWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectMediaAliasesWithTokenId.tns__selectMediaAliasesWithTokenId_ = tns__selectMediaAliasesWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectMediaAliasesWithTokenId(soap, &soap_tmp___tns__selectMediaAliasesWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectMediaAliasesWithTokenId(soap, &soap_tmp___tns__selectMediaAliasesWithTokenId, "-tns:selectMediaAliasesWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectMediaAliasesWithTokenId(soap, &soap_tmp___tns__selectMediaAliasesWithTokenId, "-tns:selectMediaAliasesWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectMediaAliasesWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__selectMediaAliasesWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectMediaAliasesWithTokenIdResponse_->soap_get(soap, "tns:selectMediaAliasesWithTokenIdResponse", "tns:selectMediaAliasesWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectMediaAnnotationsWithTokenId(const char *endpoint, const char *soap_action, tns__selectMediaAnnotationsWithTokenId *tns__selectMediaAnnotationsWithTokenId_, tns__selectMediaAnnotationsWithTokenIdResponse *tns__selectMediaAnnotationsWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__selectMediaAnnotationsWithTokenId soap_tmp___tns__selectMediaAnnotationsWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectMediaAnnotationsWithTokenId.tns__selectMediaAnnotationsWithTokenId_ = tns__selectMediaAnnotationsWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectMediaAnnotationsWithTokenId(soap, &soap_tmp___tns__selectMediaAnnotationsWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectMediaAnnotationsWithTokenId(soap, &soap_tmp___tns__selectMediaAnnotationsWithTokenId, "-tns:selectMediaAnnotationsWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectMediaAnnotationsWithTokenId(soap, &soap_tmp___tns__selectMediaAnnotationsWithTokenId, "-tns:selectMediaAnnotationsWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectMediaAnnotationsWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__selectMediaAnnotationsWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectMediaAnnotationsWithTokenIdResponse_->soap_get(soap, "tns:selectMediaAnnotationsWithTokenIdResponse", "tns:selectMediaAnnotationsWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectMediaTokenWithDigest(const char *endpoint, const char *soap_action, tns__selectMediaTokenWithDigest *tns__selectMediaTokenWithDigest_, tns__selectMediaTokenWithDigestResponse *tns__selectMediaTokenWithDigestResponse_)
{	struct soap *soap = this;
	struct __tns__selectMediaTokenWithDigest soap_tmp___tns__selectMediaTokenWithDigest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectMediaTokenWithDigest.tns__selectMediaTokenWithDigest_ = tns__selectMediaTokenWithDigest_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectMediaTokenWithDigest(soap, &soap_tmp___tns__selectMediaTokenWithDigest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectMediaTokenWithDigest(soap, &soap_tmp___tns__selectMediaTokenWithDigest, "-tns:selectMediaTokenWithDigest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectMediaTokenWithDigest(soap, &soap_tmp___tns__selectMediaTokenWithDigest, "-tns:selectMediaTokenWithDigest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectMediaTokenWithDigestResponse_)
		return soap_closesock(soap);
	tns__selectMediaTokenWithDigestResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectMediaTokenWithDigestResponse_->soap_get(soap, "tns:selectMediaTokenWithDigestResponse", "tns:selectMediaTokenWithDigestResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectMediaTokenWithId(const char *endpoint, const char *soap_action, tns__selectMediaTokenWithId *tns__selectMediaTokenWithId_, tns__selectMediaTokenWithIdResponse *tns__selectMediaTokenWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__selectMediaTokenWithId soap_tmp___tns__selectMediaTokenWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectMediaTokenWithId.tns__selectMediaTokenWithId_ = tns__selectMediaTokenWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectMediaTokenWithId(soap, &soap_tmp___tns__selectMediaTokenWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectMediaTokenWithId(soap, &soap_tmp___tns__selectMediaTokenWithId, "-tns:selectMediaTokenWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectMediaTokenWithId(soap, &soap_tmp___tns__selectMediaTokenWithId, "-tns:selectMediaTokenWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectMediaTokenWithIdResponse_)
		return soap_closesock(soap);
	tns__selectMediaTokenWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectMediaTokenWithIdResponse_->soap_get(soap, "tns:selectMediaTokenWithIdResponse", "tns:selectMediaTokenWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectRelatedMediaAnnotationsWithTokenId(const char *endpoint, const char *soap_action, tns__selectRelatedMediaAnnotationsWithTokenId *tns__selectRelatedMediaAnnotationsWithTokenId_, tns__selectRelatedMediaAnnotationsWithTokenIdResponse *tns__selectRelatedMediaAnnotationsWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__selectRelatedMediaAnnotationsWithTokenId soap_tmp___tns__selectRelatedMediaAnnotationsWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectRelatedMediaAnnotationsWithTokenId.tns__selectRelatedMediaAnnotationsWithTokenId_ = tns__selectRelatedMediaAnnotationsWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectRelatedMediaAnnotationsWithTokenId(soap, &soap_tmp___tns__selectRelatedMediaAnnotationsWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectRelatedMediaAnnotationsWithTokenId(soap, &soap_tmp___tns__selectRelatedMediaAnnotationsWithTokenId, "-tns:selectRelatedMediaAnnotationsWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectRelatedMediaAnnotationsWithTokenId(soap, &soap_tmp___tns__selectRelatedMediaAnnotationsWithTokenId, "-tns:selectRelatedMediaAnnotationsWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectRelatedMediaAnnotationsWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__selectRelatedMediaAnnotationsWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectRelatedMediaAnnotationsWithTokenIdResponse_->soap_get(soap, "tns:selectRelatedMediaAnnotationsWithTokenIdResponse", "tns:selectRelatedMediaAnnotationsWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::selectUser(const char *endpoint, const char *soap_action, tns__selectUser *tns__selectUser_, tns__selectUserResponse *tns__selectUserResponse_)
{	struct soap *soap = this;
	struct __tns__selectUser soap_tmp___tns__selectUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__selectUser.tns__selectUser_ = tns__selectUser_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__selectUser(soap, &soap_tmp___tns__selectUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__selectUser(soap, &soap_tmp___tns__selectUser, "-tns:selectUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__selectUser(soap, &soap_tmp___tns__selectUser, "-tns:selectUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__selectUserResponse_)
		return soap_closesock(soap);
	tns__selectUserResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__selectUserResponse_->soap_get(soap, "tns:selectUserResponse", "tns:selectUserResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::setUserAnonymous(const char *endpoint, const char *soap_action, tns__setUserAnonymous *tns__setUserAnonymous_, tns__setUserAnonymousResponse *tns__setUserAnonymousResponse_)
{	struct soap *soap = this;
	struct __tns__setUserAnonymous soap_tmp___tns__setUserAnonymous;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__setUserAnonymous.tns__setUserAnonymous_ = tns__setUserAnonymous_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__setUserAnonymous(soap, &soap_tmp___tns__setUserAnonymous);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__setUserAnonymous(soap, &soap_tmp___tns__setUserAnonymous, "-tns:setUserAnonymous", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__setUserAnonymous(soap, &soap_tmp___tns__setUserAnonymous, "-tns:setUserAnonymous", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__setUserAnonymousResponse_)
		return soap_closesock(soap);
	tns__setUserAnonymousResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__setUserAnonymousResponse_->soap_get(soap, "tns:setUserAnonymousResponse", "tns:setUserAnonymousResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::setUserLanguage(const char *endpoint, const char *soap_action, tns__setUserLanguage *tns__setUserLanguage_, tns__setUserLanguageResponse *tns__setUserLanguageResponse_)
{	struct soap *soap = this;
	struct __tns__setUserLanguage soap_tmp___tns__setUserLanguage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__setUserLanguage.tns__setUserLanguage_ = tns__setUserLanguage_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__setUserLanguage(soap, &soap_tmp___tns__setUserLanguage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__setUserLanguage(soap, &soap_tmp___tns__setUserLanguage, "-tns:setUserLanguage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__setUserLanguage(soap, &soap_tmp___tns__setUserLanguage, "-tns:setUserLanguage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__setUserLanguageResponse_)
		return soap_closesock(soap);
	tns__setUserLanguageResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__setUserLanguageResponse_->soap_get(soap, "tns:setUserLanguageResponse", "tns:setUserLanguageResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitLiveAnnotationTextWithTokenId(const char *endpoint, const char *soap_action, tns__submitLiveAnnotationTextWithTokenId *tns__submitLiveAnnotationTextWithTokenId_, tns__submitLiveAnnotationTextWithTokenIdResponse *tns__submitLiveAnnotationTextWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__submitLiveAnnotationTextWithTokenId soap_tmp___tns__submitLiveAnnotationTextWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitLiveAnnotationTextWithTokenId.tns__submitLiveAnnotationTextWithTokenId_ = tns__submitLiveAnnotationTextWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitLiveAnnotationTextWithTokenId(soap, &soap_tmp___tns__submitLiveAnnotationTextWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitLiveAnnotationTextWithTokenId(soap, &soap_tmp___tns__submitLiveAnnotationTextWithTokenId, "-tns:submitLiveAnnotationTextWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitLiveAnnotationTextWithTokenId(soap, &soap_tmp___tns__submitLiveAnnotationTextWithTokenId, "-tns:submitLiveAnnotationTextWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitLiveAnnotationTextWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__submitLiveAnnotationTextWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitLiveAnnotationTextWithTokenIdResponse_->soap_get(soap, "tns:submitLiveAnnotationTextWithTokenIdResponse", "tns:submitLiveAnnotationTextWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaAlias(const char *endpoint, const char *soap_action, tns__submitMediaAlias *tns__submitMediaAlias_, tns__submitMediaAliasResponse *tns__submitMediaAliasResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaAlias soap_tmp___tns__submitMediaAlias;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaAlias.tns__submitMediaAlias_ = tns__submitMediaAlias_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaAlias(soap, &soap_tmp___tns__submitMediaAlias);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaAlias(soap, &soap_tmp___tns__submitMediaAlias, "-tns:submitMediaAlias", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaAlias(soap, &soap_tmp___tns__submitMediaAlias, "-tns:submitMediaAlias", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaAliasResponse_)
		return soap_closesock(soap);
	tns__submitMediaAliasResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaAliasResponse_->soap_get(soap, "tns:submitMediaAliasResponse", "tns:submitMediaAliasResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaAliasTextAndTokenDigest(const char *endpoint, const char *soap_action, tns__submitMediaAliasTextAndTokenDigest *tns__submitMediaAliasTextAndTokenDigest_, tns__submitMediaAliasTextAndTokenDigestResponse *tns__submitMediaAliasTextAndTokenDigestResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaAliasTextAndTokenDigest soap_tmp___tns__submitMediaAliasTextAndTokenDigest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaAliasTextAndTokenDigest.tns__submitMediaAliasTextAndTokenDigest_ = tns__submitMediaAliasTextAndTokenDigest_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaAliasTextAndTokenDigest(soap, &soap_tmp___tns__submitMediaAliasTextAndTokenDigest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaAliasTextAndTokenDigest(soap, &soap_tmp___tns__submitMediaAliasTextAndTokenDigest, "-tns:submitMediaAliasTextAndTokenDigest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaAliasTextAndTokenDigest(soap, &soap_tmp___tns__submitMediaAliasTextAndTokenDigest, "-tns:submitMediaAliasTextAndTokenDigest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaAliasTextAndTokenDigestResponse_)
		return soap_closesock(soap);
	tns__submitMediaAliasTextAndTokenDigestResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaAliasTextAndTokenDigestResponse_->soap_get(soap, "tns:submitMediaAliasTextAndTokenDigestResponse", "tns:submitMediaAliasTextAndTokenDigestResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaAliasTextWithTokenId(const char *endpoint, const char *soap_action, tns__submitMediaAliasTextWithTokenId *tns__submitMediaAliasTextWithTokenId_, tns__submitMediaAliasTextWithTokenIdResponse *tns__submitMediaAliasTextWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaAliasTextWithTokenId soap_tmp___tns__submitMediaAliasTextWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaAliasTextWithTokenId.tns__submitMediaAliasTextWithTokenId_ = tns__submitMediaAliasTextWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaAliasTextWithTokenId(soap, &soap_tmp___tns__submitMediaAliasTextWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaAliasTextWithTokenId(soap, &soap_tmp___tns__submitMediaAliasTextWithTokenId, "-tns:submitMediaAliasTextWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaAliasTextWithTokenId(soap, &soap_tmp___tns__submitMediaAliasTextWithTokenId, "-tns:submitMediaAliasTextWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaAliasTextWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__submitMediaAliasTextWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaAliasTextWithTokenIdResponse_->soap_get(soap, "tns:submitMediaAliasTextWithTokenIdResponse", "tns:submitMediaAliasTextWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaAnnotation(const char *endpoint, const char *soap_action, tns__submitMediaAnnotation *tns__submitMediaAnnotation_, tns__submitMediaAnnotationResponse *tns__submitMediaAnnotationResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaAnnotation soap_tmp___tns__submitMediaAnnotation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaAnnotation.tns__submitMediaAnnotation_ = tns__submitMediaAnnotation_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaAnnotation(soap, &soap_tmp___tns__submitMediaAnnotation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaAnnotation(soap, &soap_tmp___tns__submitMediaAnnotation, "-tns:submitMediaAnnotation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaAnnotation(soap, &soap_tmp___tns__submitMediaAnnotation, "-tns:submitMediaAnnotation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaAnnotationResponse_)
		return soap_closesock(soap);
	tns__submitMediaAnnotationResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaAnnotationResponse_->soap_get(soap, "tns:submitMediaAnnotationResponse", "tns:submitMediaAnnotationResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaAnnotationTextAndTokenDigest(const char *endpoint, const char *soap_action, tns__submitMediaAnnotationTextAndTokenDigest *tns__submitMediaAnnotationTextAndTokenDigest_, tns__submitMediaAnnotationTextAndTokenDigestResponse *tns__submitMediaAnnotationTextAndTokenDigestResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaAnnotationTextAndTokenDigest soap_tmp___tns__submitMediaAnnotationTextAndTokenDigest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaAnnotationTextAndTokenDigest.tns__submitMediaAnnotationTextAndTokenDigest_ = tns__submitMediaAnnotationTextAndTokenDigest_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaAnnotationTextAndTokenDigest(soap, &soap_tmp___tns__submitMediaAnnotationTextAndTokenDigest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaAnnotationTextAndTokenDigest(soap, &soap_tmp___tns__submitMediaAnnotationTextAndTokenDigest, "-tns:submitMediaAnnotationTextAndTokenDigest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaAnnotationTextAndTokenDigest(soap, &soap_tmp___tns__submitMediaAnnotationTextAndTokenDigest, "-tns:submitMediaAnnotationTextAndTokenDigest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaAnnotationTextAndTokenDigestResponse_)
		return soap_closesock(soap);
	tns__submitMediaAnnotationTextAndTokenDigestResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaAnnotationTextAndTokenDigestResponse_->soap_get(soap, "tns:submitMediaAnnotationTextAndTokenDigestResponse", "tns:submitMediaAnnotationTextAndTokenDigestResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaAnnotationTextWithTokenId(const char *endpoint, const char *soap_action, tns__submitMediaAnnotationTextWithTokenId *tns__submitMediaAnnotationTextWithTokenId_, tns__submitMediaAnnotationTextWithTokenIdResponse *tns__submitMediaAnnotationTextWithTokenIdResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaAnnotationTextWithTokenId soap_tmp___tns__submitMediaAnnotationTextWithTokenId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaAnnotationTextWithTokenId.tns__submitMediaAnnotationTextWithTokenId_ = tns__submitMediaAnnotationTextWithTokenId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaAnnotationTextWithTokenId(soap, &soap_tmp___tns__submitMediaAnnotationTextWithTokenId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaAnnotationTextWithTokenId(soap, &soap_tmp___tns__submitMediaAnnotationTextWithTokenId, "-tns:submitMediaAnnotationTextWithTokenId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaAnnotationTextWithTokenId(soap, &soap_tmp___tns__submitMediaAnnotationTextWithTokenId, "-tns:submitMediaAnnotationTextWithTokenId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaAnnotationTextWithTokenIdResponse_)
		return soap_closesock(soap);
	tns__submitMediaAnnotationTextWithTokenIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaAnnotationTextWithTokenIdResponse_->soap_get(soap, "tns:submitMediaAnnotationTextWithTokenIdResponse", "tns:submitMediaAnnotationTextWithTokenIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaToken(const char *endpoint, const char *soap_action, tns__submitMediaToken *tns__submitMediaToken_, tns__submitMediaTokenResponse *tns__submitMediaTokenResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaToken soap_tmp___tns__submitMediaToken;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaToken.tns__submitMediaToken_ = tns__submitMediaToken_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaToken(soap, &soap_tmp___tns__submitMediaToken);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaToken(soap, &soap_tmp___tns__submitMediaToken, "-tns:submitMediaToken", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaToken(soap, &soap_tmp___tns__submitMediaToken, "-tns:submitMediaToken", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaTokenResponse_)
		return soap_closesock(soap);
	tns__submitMediaTokenResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaTokenResponse_->soap_get(soap, "tns:submitMediaTokenResponse", "tns:submitMediaTokenResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::submitMediaTokenDigest(const char *endpoint, const char *soap_action, tns__submitMediaTokenDigest *tns__submitMediaTokenDigest_, tns__submitMediaTokenDigestResponse *tns__submitMediaTokenDigestResponse_)
{	struct soap *soap = this;
	struct __tns__submitMediaTokenDigest soap_tmp___tns__submitMediaTokenDigest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__submitMediaTokenDigest.tns__submitMediaTokenDigest_ = tns__submitMediaTokenDigest_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__submitMediaTokenDigest(soap, &soap_tmp___tns__submitMediaTokenDigest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__submitMediaTokenDigest(soap, &soap_tmp___tns__submitMediaTokenDigest, "-tns:submitMediaTokenDigest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__submitMediaTokenDigest(soap, &soap_tmp___tns__submitMediaTokenDigest, "-tns:submitMediaTokenDigest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__submitMediaTokenDigestResponse_)
		return soap_closesock(soap);
	tns__submitMediaTokenDigestResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__submitMediaTokenDigestResponse_->soap_get(soap, "tns:submitMediaTokenDigestResponse", "tns:submitMediaTokenDigestResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAgentServiceSoapBindingProxy::updateMediaAnnotationTextWithId(const char *endpoint, const char *soap_action, tns__updateMediaAnnotationTextWithId *tns__updateMediaAnnotationTextWithId_, tns__updateMediaAnnotationTextWithIdResponse *tns__updateMediaAnnotationTextWithIdResponse_)
{	struct soap *soap = this;
	struct __tns__updateMediaAnnotationTextWithId soap_tmp___tns__updateMediaAnnotationTextWithId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://annot.me/services/ServerAgentPort";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___tns__updateMediaAnnotationTextWithId.tns__updateMediaAnnotationTextWithId_ = tns__updateMediaAnnotationTextWithId_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___tns__updateMediaAnnotationTextWithId(soap, &soap_tmp___tns__updateMediaAnnotationTextWithId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tns__updateMediaAnnotationTextWithId(soap, &soap_tmp___tns__updateMediaAnnotationTextWithId, "-tns:updateMediaAnnotationTextWithId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tns__updateMediaAnnotationTextWithId(soap, &soap_tmp___tns__updateMediaAnnotationTextWithId, "-tns:updateMediaAnnotationTextWithId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tns__updateMediaAnnotationTextWithIdResponse_)
		return soap_closesock(soap);
	tns__updateMediaAnnotationTextWithIdResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tns__updateMediaAnnotationTextWithIdResponse_->soap_get(soap, "tns:updateMediaAnnotationTextWithIdResponse", "tns:updateMediaAnnotationTextWithIdResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace ServerSoap

/* End of client proxy code */
